import{_ as s,c as i,o as a,V as n,m as h}from"./chunks/framework.bW6FiXxS.js";const t="/assets/167853093-d8edc2de-15d8-4f69-b870-3c5b29dc62ee.hogGxw5c.gif",l="/assets/167853146-3f842313-0cac-4f26-968f-1746fbda214f.a5mShWRK.gif",A=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"knowledge/FrontEnd/css/1-基础/103-通过 hover 让动画只运行一次且停留在最后一帧.md","filePath":"knowledge/FrontEnd/css/1-基础/103-通过 hover 让动画只运行一次且停留在最后一帧.md","lastUpdated":1713838101000}'),p={name:"knowledge/FrontEnd/css/1-基础/103-通过 hover 让动画只运行一次且停留在最后一帧.md"},e=n(`<h2 id="animation-fill-mode-控制元素在各个阶段的状态" tabindex="-1">animation-fill-mode 控制元素在各个阶段的状态 <a class="header-anchor" href="#animation-fill-mode-控制元素在各个阶段的状态" aria-label="Permalink to &quot;animation-fill-mode 控制元素在各个阶段的状态&quot;">​</a></h2><p>首先，动画只运行一次，未运行前处于第一帧，运行完后处于最后一帧。</p><p>这个刚好利用 CSS 动画的 <code>animation-fill-mode: both</code> 即可。</p><ol><li><code>animation-fill-mode: backwards</code>：可以让元素在动画开始之前的样式为动画运行时的第一帧，动画结束后的样式则恢复为 CSS 规则设定的样式</li><li><code>animation-fill-mode: forwards</code>：元素在动画开始之前的样式为 CSS 规则设定的样式，而动画结束后的样式则表现为由执行期间遇到的最后一个关键帧计算值（也就是停在最后一帧）</li></ol><p>而，<code>animation-fill-mode: both</code> 兼顾了上面两种模式的特点，可以使得<strong>动画开始前的样式为动画运行时的第一帧，动画结束后停在最后一帧</strong>。</p><h2 id="反向利用-animation-play-state-实现-hover-触发动画行进" tabindex="-1">反向利用 animation-play-state 实现 hover 触发动画行进 <a class="header-anchor" href="#反向利用-animation-play-state-实现-hover-触发动画行进" aria-label="Permalink to &quot;反向利用 animation-play-state 实现 hover 触发动画行进&quot;">​</a></h2><p>而<strong>动画通过 hover 驱动，只有用户 hover 元素的时候，动画才进行</strong>这一点，利用 <code>animation-play-state</code> 即可。</p><p>我们都知道，正常情况下，动画应该是运行状态，那如果我们将动画的默认状态设置为暂停，只有当鼠标点击或者 hover 的时候，才设置其 <code>animation-play-state: running</code>，这样就可以利用 hover 控制动画的行进！</p><p>基于上述两点，我们来实现一个有意思的打字动画，做到动画只触发单次，并且只有 hover 的时候动画会运行。</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">p</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">Hover Me - You are a pig!</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">p</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span></code></pre></div><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#FFCB6B;">p</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  position</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;"> relative</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  font-family</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;"> monospace</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  width</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 26</span><span style="--shiki-light:#E06C75;--shiki-dark:#F78C6C;">ch</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  animation</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;"> typing </span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;">3</span><span style="--shiki-light:#E06C75;--shiki-dark:#F78C6C;">s</span><span style="--shiki-light:#56B6C2;--shiki-dark:#82AAFF;"> steps</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;">15</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;"> end</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">);</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  animation-fill-mode</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;"> both</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  animation-play-state</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;"> paused</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  overflow</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;"> hidden</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#FFCB6B;">p</span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#56B6C2;--shiki-dark:#C792EA;">hover</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  animation-play-state</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;"> running</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#FFCB6B;">p</span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;">::</span><span style="--shiki-light:#56B6C2;--shiki-dark:#C792EA;">before</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  position</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;"> absolute</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  content</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;"> &#39;&#39;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  width</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 4</span><span style="--shiki-light:#E06C75;--shiki-dark:#F78C6C;">px</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  top</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 0</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  bottom</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 0</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  right</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 0</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  animation</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;"> blink</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 0.8</span><span style="--shiki-light:#E06C75;--shiki-dark:#F78C6C;">s</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;"> linear</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;"> infinite</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">@keyframes</span><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> blink</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#FFCB6B;">  0%</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">,</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#FFCB6B;">  50%</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">    border-right</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 4</span><span style="--shiki-light:#E06C75;--shiki-dark:#F78C6C;">px</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;"> solid</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;"> transparent</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">  }</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#FFCB6B;">  50%</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">,</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#FFCB6B;">  100%</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">    border-right</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 4</span><span style="--shiki-light:#E06C75;--shiki-dark:#F78C6C;">px</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;"> solid</span><span style="--shiki-light:#D19A66;--shiki-dark:#89DDFF;"> #</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;">000</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">  }</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">@keyframes</span><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> typing</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#FFCB6B;">  from</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">    width</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 11</span><span style="--shiki-light:#E06C75;--shiki-dark:#F78C6C;">ch</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">  }</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#FFCB6B;">  to</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">    width</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 26</span><span style="--shiki-light:#E06C75;--shiki-dark:#F78C6C;">ch</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">  }</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span></code></pre></div><p>默认情况下，展示这样一个界面：</p><p><a href="https://user-images.githubusercontent.com/8554143/167853093-d8edc2de-15d8-4f69-b870-3c5b29dc62ee.gif" target="_blank" rel="noreferrer"><img src="`+t+'" alt="img" loading="lazy"></a></p><p>接下来，我们把鼠标放上去，看看会发生什么：</p><p><a href="https://user-images.githubusercontent.com/8554143/167853146-3f842313-0cac-4f26-968f-1746fbda214f.gif" target="_blank" rel="noreferrer"><img src="'+l+'" alt="img" loading="lazy"></a></p><p>有意思，完美的实现了上面说的要求 -- <strong>动画通过 hover 驱动，只有用户 hover 元素的时候，动画才进行</strong>。</p><p>当然，这里还运用了几个小技巧，一并解释下：</p><ol><li>打字动画运用了逐帧动画，而不是补间动画，主要利用了 CSS 动画的 <code>step-timing-function</code> 步骤缓动函数，也就是代码中的 <code>steps(15, end)</code></li><li><code>ch</code> 是 CSS 当中的一个相对单位，这一单位代表元素所用字体 font 中 “0” 这一字形的宽度</li><li><code>font-family: monospace</code> 表示等宽字体，每个字符占据的宽度是一样，因为我们使用了 <code>26ch</code> 来充当 <code>&lt;p&gt;</code> 元素的宽度，而 <code>Hover Me - You are a pig</code> 这一段文字算上空格刚好 26 个字符，<code>26ch</code> 刚好表示这一段文本的长度</li><li>一开始展示的文本 <code>Hover me - </code> 算上空格是 <code>11ch</code> 宽度，而最后整个文本展示完需要 <code>26ch</code> 的宽度，中间需要经过 15 步的逐帧动画，这里的元素刚好和代码中的一一对应上</li></ol><p>借助上面 4 步及搭配我们上文介绍的 <code>animation-fill-mode: both</code>、<code>animation-play-state: paused</code> 的应用，我们就完美的实现了这样一个非常有意思的打字动画。</p>',19),k=h("iframe",{height:"300",style:{width:"100%"},scrolling:"no",title:"running once animation by hover",src:"https://codepen.io/mafqla/embed/WNWpXgN?default-tab=html%2Cresult&editable=true&theme-id=light",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"},`
  See the Pen <a href="https://codepen.io/mafqla/pen/WNWpXgN">
  running once animation by hover</a> by mafqla (<a href="https://codepen.io/mafqla">@mafqla</a>)
  on <a href="https://codepen.io">CodePen</a>.
`,-1),B=[e,k];function d(r,F,o,D,g,y){return a(),i("div",null,B)}const C=s(p,[["render",d]]);export{A as __pageData,C as default};
