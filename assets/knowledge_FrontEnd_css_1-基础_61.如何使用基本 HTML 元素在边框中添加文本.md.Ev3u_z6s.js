import{_ as t,c as n,o as l,V as a,m as s,a as i}from"./chunks/framework.bW6FiXxS.js";const v=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"knowledge/FrontEnd/css/1-基础/61.如何使用基本 HTML 元素在边框中添加文本.md","filePath":"knowledge/FrontEnd/css/1-基础/61.如何使用基本 HTML 元素在边框中添加文本.md","lastUpdated":1710204572000}'),h={name:"knowledge/FrontEnd/css/1-基础/61.如何使用基本 HTML 元素在边框中添加文本.md"},e=a('<div class="tip custom-block"><p class="custom-block-title">TIP</p><p>引用 Preethi 的文章，原文地址：<a href="https://css-tricks.com/how-to-add-text-in-borders-using-basic-html-elements/#top-of-site" target="_blank" rel="noreferrer">How To Add Text Inside A Border With Basic HTML And CSS</a></p></div><p>一些 HTML 元素具有预设的设计，如元素的不便的小方块、元素的有限颜色条以及元素的“让人感到不适”箭头。我们可以通过样式设置它们以匹配我们网站的现代美学，同时利用它们的功能。还有许多元素在现代网页设计中很少以它们的默认外观和功能使用，比如<code>&lt;input type=&quot;checkbox&quot;&gt;</code>、<code>&lt;meter&gt;</code>、<code>&lt;details&gt;</code>。</p><p>其中一个 HTML 元素是<code>&lt;fieldset&gt;</code>，以及它的子元素<code>&lt;legend&gt;</code>。</p><p><code>&lt;fieldset&gt;</code>元素传统上用于对表单控件进行分组和访问。我们可以通过屏幕上围绕分组内容的边框来直观地看到这种分组。该组的标题位于作为<code>&lt;fieldset&gt;</code>的第一个子元素添加的<code>&lt;legend&gt;</code>元素内。</p>',4),k=s("iframe",{id:"cp_embed_yLaLXJb",src:"https://codepen.io/anon/embed/yLaLXJb?height=250&theme-id=1&slug-hash=yLaLXJb&default-tab=result",height:"250",scrolling:"no",frameborder:"0",allowfullscreen:"",allowpaymentrequest:"",name:"CodePen Embed yLaLXJb",title:"CodePen Embed yLaLXJb",class:"cp_embed_iframe",style:{"box-sizing":"border-box","max-width":"100%",display:"block",width:"1010.22px",overflow:"hidden",height:"250px"}},null,-1),p=s("p",null,[i("通过"),s("code",null,"<fieldset>"),i("和"),s("code",null,"<legend>"),i("的组合，可以创建一个独特的“文本在边框中”的设计，其中标题直接放置在边框处，而边框的线条不穿过文本。当边框遇到标题文本的开头时，边框线“断开”，在文本结束后恢复。")],-1),d=s("p",null,[i("在这篇文章中，我们将利用"),s("code",null,"<fieldset>"),i("和"),s("code",null,"<legend>"),i("的组合创建一个更现代的边框文本设计，这样的设计编码和更新都非常快速简便。")],-1),B=s("iframe",{id:"cp_embed_bGeOqzv",src:"https://codepen.io/anon/embed/bGeOqzv?height=450&theme-id=1&slug-hash=bGeOqzv&default-tab=result",height:"450",scrolling:"no",frameborder:"0",allowfullscreen:"",allowpaymentrequest:"",name:"CodePen Embed bGeOqzv",title:"CodePen Embed bGeOqzv",class:"cp_embed_iframe",style:{"box-sizing":"border-box","max-width":"100%",display:"block",width:"1010.22px",overflow:"hidden",height:"450px"}},null,-1),F=a(`<p>为了实现四个边框，我们需要四个元素，每个元素包含一个<code>&lt;legend&gt;</code>元素。我们将要显示在边框上的文本添加到这些元素内。</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">fieldset</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;&lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">legend</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">Wash Your Hands</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">legend</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">fieldset</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">fieldset</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;&lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">legend</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">Stay Apart</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">legend</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">fieldset</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">fieldset</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;&lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">legend</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">Wear A Mask</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">legend</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">fieldset</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">fieldset</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;&lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">legend</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">Stay Home</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">legend</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">fieldset</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span></code></pre></div><p>首先，我们在网格单元中将这些元素堆叠在彼此上方，并给它们添加边框。可以使用任何方式进行堆叠，不一定要使用网格。</p><p>只有每个元素的顶部边框保持可见，因为默认情况下元素的文本出现在<code>&lt;fieldset&gt;</code>的顶部边框上。</p><p>此外，我们给所有元素都添加了一个<code>box-sizing</code>属性，其值为<code>border-box</code>，以便元素的宽度和高度包括其边框和填充大小。稍后进行这样的设置可以创建一个平衡的设计，当我们样式化元素时。</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#FFCB6B;">body</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  display</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;"> grid</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  margin</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;"> auto</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span><span style="--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> /* 居中 */</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  margin-top</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#56B6C2;--shiki-dark:#82AAFF;"> calc</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;">50</span><span style="--shiki-light:#E06C75;--shiki-dark:#F78C6C;">vh</span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;"> -</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 170</span><span style="--shiki-light:#E06C75;--shiki-dark:#F78C6C;">px</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">);</span><span style="--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> /* 居中 */</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  width</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 300</span><span style="--shiki-light:#E06C75;--shiki-dark:#F78C6C;">px</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  height</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 300</span><span style="--shiki-light:#E06C75;--shiki-dark:#F78C6C;">px</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#FFCB6B;">fieldset</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  border</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 10</span><span style="--shiki-light:#E06C75;--shiki-dark:#F78C6C;">px</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;"> solid</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;"> transparent</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  border-top-color</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;"> black</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  box-sizing</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;"> border-box</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  grid-area</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 1</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;"> / </span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;">1</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span><span style="--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> /* 第一行，第一列 */</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  padding</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 20</span><span style="--shiki-light:#E06C75;--shiki-dark:#F78C6C;">px</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  width</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;"> inherit</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span></code></pre></div><p>接下来，我们旋转最后三个元素，以便使用它们的顶部边框作为设计的侧边和底边。</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">/* 向右旋转 */</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#FFCB6B;">fieldset</span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#56B6C2;--shiki-dark:#C792EA;">nth-of-type</span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;">2</span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">)</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  transform</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#56B6C2;--shiki-dark:#82AAFF;"> rotate</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;">90</span><span style="--shiki-light:#E06C75;--shiki-dark:#F78C6C;">deg</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">);</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">/* 向下旋转 */</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#FFCB6B;">fieldset</span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#56B6C2;--shiki-dark:#C792EA;">nth-of-type</span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;">3</span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">)</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  transform</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#56B6C2;--shiki-dark:#82AAFF;"> rotate</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;">180</span><span style="--shiki-light:#E06C75;--shiki-dark:#F78C6C;">deg</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">);</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">/* 向左旋转 */</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#FFCB6B;">fieldset</span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#56B6C2;--shiki-dark:#C792EA;">nth-of-type</span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;">4</span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">)</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  transform</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#56B6C2;--shiki-dark:#82AAFF;"> rotate</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;">-90</span><span style="--shiki-light:#E06C75;--shiki-dark:#F78C6C;">deg</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">);</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span></code></pre></div><p>接下来是对元素的样式设置。使用<code>&lt;legend&gt;</code>元素创建平滑边框文本的关键是给它一个零（或足够小的）<code>line-height</code>。如果<code>line-height</code>太大，它会使元素所在边框的位置发生偏移，将边框推下去。当边框随着<code>line-height</code>移动时，我们将无法连接设计的所有四个边，需要重新调整边框。</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#FFCB6B;">legend</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  font</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 15</span><span style="--shiki-light:#E06C75;--shiki-dark:#F78C6C;">pt</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">/</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;">0</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;"> &#39;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">Averia Serif Libre</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  margin</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;"> auto</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span><span style="--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> /* 居中 */</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  padding</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 0</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 4</span><span style="--shiki-light:#E06C75;--shiki-dark:#F78C6C;">px</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#FFCB6B;">fieldset</span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#56B6C2;--shiki-dark:#C792EA;">nth-of-type</span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;">3</span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">)</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> &gt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#FFCB6B;"> legend</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  transform</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#56B6C2;--shiki-dark:#82AAFF;"> rotate</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;">180</span><span style="--shiki-light:#E06C75;--shiki-dark:#F78C6C;">deg</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">);</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span></code></pre></div><p>我使用了简写属性为元素的<code>font</code>、<code>font-size</code>和<code>line-height</code>属性设置值。</p><p>在我们的设计中添加文本的底部边框的元素<code>&lt;legend&gt;</code>是颠倒的，因为它的旋转父元素。垂直翻转该元素，以使文本正常显示。</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#FFCB6B;">fieldset</span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#56B6C2;--shiki-dark:#C792EA;">nth-of-type</span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;">3</span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">)</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> &gt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#FFCB6B;"> legend</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  transform</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#56B6C2;--shiki-dark:#82AAFF;"> rotate</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;">180</span><span style="--shiki-light:#E06C75;--shiki-dark:#F78C6C;">deg</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">);</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span></code></pre></div><p>在第一个元素中添加一个图像，你会得到类似以下的效果：</p>`,14),r=s("iframe",{id:"cp_embed_bGeOqzv",src:"https://codepen.io/anon/embed/bGeOqzv?height=450&theme-id=1&slug-hash=bGeOqzv&default-tab=result",height:"450",scrolling:"no",frameborder:"0",allowfullscreen:"",allowpaymentrequest:"",name:"CodePen Embed bGeOqzv",title:"CodePen Embed bGeOqzv",class:"cp_embed_iframe",style:{"box-sizing":"border-box","max-width":"100%",display:"block",width:"1010.22px",overflow:"hidden",height:"450px"}},null,-1),g=s("p",null,"侧边距可以沿着边框移动文本。左右边距带有值将使文本居中，如上述 CodePen 中所示。仅具有值的左边距将使文本靠右对齐，反之亦然。",-1),D=s("iframe",{id:"cp_embed_yLJWVdR",src:"https://codepen.io/anon/embed/yLJWVdR?height=450&theme-id=1&slug-hash=yLJWVdR&default-tab=result",height:"450",scrolling:"no",frameborder:"0",allowfullscreen:"",allowpaymentrequest:"",name:"CodePen Embed yLJWVdR",title:"CodePen Embed yLJWVdR",class:"cp_embed_iframe",style:{"box-sizing":"border-box","max-width":"100%",display:"block",width:"1010.22px",overflow:"hidden",height:"450px"}},null,-1),o=s("p",null,[s("strong",null,"额外内容："),i(" 在一个简短的几何曲线之后，这是我使用相同技术制作的一个八边形设计：")],-1),y=s("iframe",{id:"cp_embed_JjKqbQj",src:"https://codepen.io/anon/embed/JjKqbQj?height=450&theme-id=1&slug-hash=JjKqbQj&default-tab=result",height:"450",scrolling:"no",frameborder:"0",allowfullscreen:"",allowpaymentrequest:"",name:"CodePen Embed JjKqbQj",title:"CodePen Embed JjKqbQj",class:"cp_embed_iframe",style:{"box-sizing":"border-box","max-width":"100%",display:"block",width:"1010.22px",overflow:"hidden",height:"450px"}},null,-1),c=[e,k,p,d,B,F,r,g,D,o,y];function C(A,m,b,_,f,E){return l(),n("div",null,c)}const x=t(h,[["render",C]]);export{v as __pageData,x as default};
