import{_ as e,c as t,o as n,V as i,m as s,a}from"./chunks/framework.bW6FiXxS.js";const S=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"knowledge/FrontEnd/css/1-基础/59-水平垂直居中深入挖掘.md","filePath":"knowledge/FrontEnd/css/1-基础/59-水平垂直居中深入挖掘.md","lastUpdated":1713838101000}'),l={name:"knowledge/FrontEnd/css/1-基础/59-水平垂直居中深入挖掘.md"},h=i(`<p>本文将讨论 4 种水平垂直居中的方式，分别是，并且每个起个名字方面下面看图：</p><ol><li><strong>absolute</strong>: <code>position: absolute</code> 配合 <code>top:50%;left:50%;transform:translate(-50%, -50%)</code></li><li><strong>autobot</strong>: <code>display:flex</code> 配合 <code>margin:auto</code></li><li><strong>flex</strong>: <code>display:flex</code> 配合 <code>align-items:center</code>、<code>justify-content:center</code></li><li><strong>grid</strong>: <code>display:grid</code> 配合 <code>place-content:center;</code></li></ol><h2 id="居中单个元素" tabindex="-1">居中单个元素 <a class="header-anchor" href="#居中单个元素" aria-label="Permalink to &quot;居中单个元素&quot;">​</a></h2><p>对于如下简单的结构：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">div</span><span style="--shiki-light:#D19A66;--shiki-dark:#C792EA;"> class</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">g-container</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">    &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">div</span><span style="--shiki-light:#D19A66;--shiki-dark:#C792EA;"> class</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">sub</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">div</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">div</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span></code></pre></div><p>居中单个元素而言，上述 4 种方法都很好，没有问题。</p>`,6),p=s("iframe",{height:"300",style:{width:"100%"},scrolling:"no",title:"Centering in CSS",src:"https://codepen.io/mafqla/embed/bGZYNzY?default-tab=html%2Cresult&editable=true&theme-id=light",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"},`
  See the Pen <a href="https://codepen.io/mafqla/pen/bGZYNzY">
  Centering in CSS</a> by mafqla (<a href="https://codepen.io/mafqla">@mafqla</a>)
  on <a href="https://codepen.io">CodePen</a>.
`,-1),k=i(`<h2 id="居中多个元素" tabindex="-1">居中多个元素 <a class="header-anchor" href="#居中多个元素" aria-label="Permalink to &quot;居中多个元素&quot;">​</a></h2><p>对于如下稍微复杂点的结构：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">div</span><span style="--shiki-light:#D19A66;--shiki-dark:#C792EA;"> class</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">g-container</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">    &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">div</span><span style="--shiki-light:#D19A66;--shiki-dark:#C792EA;"> class</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">sub</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">1</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">div</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">    &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">div</span><span style="--shiki-light:#D19A66;--shiki-dark:#C792EA;"> class</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">sub</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">123</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">div</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">    &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">div</span><span style="--shiki-light:#D19A66;--shiki-dark:#C792EA;"> class</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">sub</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">123456</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">div</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">div</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span></code></pre></div><p>那么如果是居中多个子元素，上述 4 种方法，就能体现出明显的不一样。稍微也修改一下子元素，不给它设定宽度，通过 padding 撑开即可：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span style="--shiki-light:#D19A66;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#D19A66;--shiki-dark:#FFCB6B;">sub</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">    border</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 1</span><span style="--shiki-light:#E06C75;--shiki-dark:#F78C6C;">px</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;"> solid</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;"> deeppink</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">    padding</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 10</span><span style="--shiki-light:#E06C75;--shiki-dark:#F78C6C;">px</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">    border-radius</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 5</span><span style="--shiki-light:#E06C75;--shiki-dark:#F78C6C;">px</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span></code></pre></div><p>看看结果如何：</p>`,6),d=s("iframe",{height:"300",style:{width:"100%"},scrolling:"no",title:"Centering in CSS 2",src:"https://codepen.io/mafqla/embed/KKEywJe?default-tab=html%2Cresult&editable=true&theme-id=light",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"},`
  See the Pen <a href="https://codepen.io/mafqla/pen/KKEywJe">
  Centering in CSS 2</a> by mafqla (<a href="https://codepen.io/mafqla">@mafqla</a>)
  on <a href="https://codepen.io">CodePen</a>.
`,-1),o=i(`<p>简单分析分析：</p><ol><li><code>absolute</code> 的方法明显有问题，由于用的绝对定位，其实 3 个子元素都叠在了一起</li><li><code>flex</code> 和 <code>grid</code> 的方法，如果不手动添加边距(margin 或者 gap)，会贴在一起</li><li>不限制方向的话，flex 默认是水平排列，grid 是竖直排列</li><li>非常重要的一点，<code>grid</code> 布局下的子元素的宽度，<strong>所有子元素的宽度会被强行拉伸至最宽的一个子元素的内容的宽度</strong>（也就是拉伸至网格宽度）</li></ol><p>对于多个子元素，<code>absolute</code> 方法明显不适用， 接下来主要看剩余 3 个方法在一些细节上的差异。</p><h3 id="控制间距" tabindex="-1">控制间距 <a class="header-anchor" href="#控制间距" aria-label="Permalink to &quot;控制间距&quot;">​</a></h3><p>如果我们希望控制每个元素之间的间距呢？我们给 <code>autobot</code>、<code>flex</code>、<code>grid</code> 的容器各自加上 <code>gap: 5px</code>，再看看：</p><blockquote><p>flex 布局从 chrome84 开始，也支持使用 <code>gap</code> 进行子元素的间距控制</p></blockquote><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span style="--shiki-light:#D19A66;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#D19A66;--shiki-dark:#FFCB6B;">g-container</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">{</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">    gap</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 5</span><span style="--shiki-light:#E06C75;--shiki-dark:#F78C6C;">px</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span></code></pre></div>`,7),r=s("iframe",{height:"300",style:{width:"100%"},scrolling:"no",title:"Centering in CSS 2",src:"https://codepen.io/mafqla/embed/MWxOYLP?default-tab=html%2Cresult&editable=true&theme-id=light",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"},`
  See the Pen <a href="https://codepen.io/mafqla/pen/MWxOYLP">
  Centering in CSS 2</a> by mafqla (<a href="https://codepen.io/mafqla">@mafqla</a>)
  on <a href="https://codepen.io">CodePen</a>.
`,-1),c=s("ol",null,[s("li",null,[s("code",null,"margin: auto"),a(" 由于需要均分剩余空间，所以表现并不好，无法按照我们设想的 "),s("code",null,"5px"),a(" 宽度进行间隔")])],-1),g=s("h3",{id:"让元素多到溢出",tabindex:"-1"},[a("让元素多到溢出 "),s("a",{class:"header-anchor",href:"#让元素多到溢出","aria-label":'Permalink to "让元素多到溢出"'},"​")],-1),F=s("p",null,"OK，接下来，我们让内容再多一点，多到溢出整个容器，看看有什么不一样。",-1),B=s("p",null,[s("a",{href:"https://user-images.githubusercontent.com/8554143/103790280-f534a680-507b-11eb-9ecf-138b7280f087.png",target:"_blank",rel:"noreferrer"},[s("img",{src:"https://user-images.githubusercontent.com/8554143/103790280-f534a680-507b-11eb-9ecf-138b7280f087.png",alt:"image",loading:"lazy"})])],-1),D=s("p",null,"再来一张竖直方向排列的：",-1),y=s("iframe",{height:"300",style:{width:"100%"},scrolling:"no",title:"Centering in CSS 4",src:"https://codepen.io/mafqla/embed/mdoqyoO?default-tab=html%2Cresult&editable=true&theme-id=light",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"},`
  See the Pen <a href="https://codepen.io/mafqla/pen/mdoqyoO">
  Centering in CSS 4</a> by mafqla (<a href="https://codepen.io/mafqla">@mafqla</a>)
  on <a href="https://codepen.io">CodePen</a>.
`,-1),C=i('<p>可以看到：</p><ol><li>非常重要的一点，由于没有了<strong>剩余空间</strong>，<code>margin: auto</code> 已经无法做到均匀分配，水平垂直居中了，而是一边贴着容器边，另外一边溢出</li><li><code>flex</code> 和 <code>grid</code> 都做到了即便超出容器空间，依然是水平垂直居中的</li></ol><h2 id="总结一下" tabindex="-1">总结一下 <a class="header-anchor" href="#总结一下" aria-label="Permalink to &quot;总结一下&quot;">​</a></h2><p>经由上述几个 DEMO 可以看出来，在目前比较常用的水平垂直居中方案当中。<code>flex</code> 方案应该是目前而言最优的选择，它能够在各种环境下都保持内部元素的水平垂直居中并且不改变子元素的某些特征：</p><ol><li>便捷的水平垂直居中单个元素</li><li>便捷的水平垂直居中多个元素，无论是横向、竖向，亦或内容超出</li><li>非常方便控制子元素之间的间距</li><li>不会改变子元素的宽度</li></ol><p>当然，美中不足的是，可能相对而言，要敲多几个字符。😳</p><p>而 <code>margin: auto</code> 和 <code>grid</code> 则或多或少有一些小问题。<code>absolute</code> 无法应付多个元素。</p>',7),_=[h,p,k,d,o,r,c,g,F,B,D,y,C];function u(m,A,f,b,q,E){return n(),t("div",null,_)}const x=e(l,[["render",u]]);export{S as __pageData,x as default};
