import{_ as i,c as a,o as n,m as s,V as t}from"./chunks/framework.bW6FiXxS.js";const h="/assets/50879862-643c7d80-1417-11e9-8600-4133b0751626.yI_x3S2R.gif",l="/assets/50880203-871b6180-1418-11e9-8588-f0be26721fbe.ysnEXNk-.gif",e="/assets/50880270-d6619200-1418-11e9-97c7-601f7aca01e7.5n5ZMT4g.gif",p="/assets/50880349-19236a00-1419-11e9-8a85-8d14ace2ac86.hcQ03WOt.png",f=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"knowledge/FrontEnd/css/1-基础/42-不可思议的纯 CSS 滚动进度条效果.md","filePath":"knowledge/FrontEnd/css/1-基础/42-不可思议的纯 CSS 滚动进度条效果.md","lastUpdated":1709167965000}'),k={name:"knowledge/FrontEnd/css/1-基础/42-不可思议的纯 CSS 滚动进度条效果.md"},d=s("p",null,"如何使用 CSS 实现下述滚动条效果？",-1),r=s("iframe",{height:"300",style:{width:"100%"},scrolling:"no",title:"使用线性渐变实现滚动进度条",src:"https://codepen.io/mafqla/embed/JjzRNWj?default-tab=html%2Cresult&editable=true&theme-id=light",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"},`
  See the Pen <a href="https://codepen.io/mafqla/pen/JjzRNWj">
  使用线性渐变实现滚动进度条</a> by mafqla (<a href="https://codepen.io/mafqla">@mafqla</a>)
  on <a href="https://codepen.io">CodePen</a>.
`,-1),B=t(`<p>就是顶部黄色的滚动进度条，随着页面的滚动进度而变化长短。在继续阅读下文之前，你可以先缓一缓。尝试思考一下上面的效果或者动手尝试一下，不借助 JS ，能否巧妙的实现上述效果。OK，继续。这个效果是我在业务开发的过程中遇到的一个类似的小问题。其实即便让我借助 Javascript ，我的第一反应也是，感觉很麻烦啊。所以我一直在想，有没有可能只使用 CSS 完成这个效果呢？</p><h2 id="分析需求" tabindex="-1">分析需求 <a class="header-anchor" href="#分析需求" aria-label="Permalink to &quot;分析需求&quot;">​</a></h2><p>第一眼看到这个效果，感觉这个跟随滚动动画，仅靠 CSS 是不可能完成的，因为这里涉及了页面滚动距离的计算。如果想只用 CSS 实现，只能另辟蹊径，使用一些讨巧的方法。好，下面就借助一些奇技淫巧，使用 CSS 一步一步完成这个效果。分析一下难点：<strong>如何得知用户当前滚动页面的距离并且通知顶部进度条？<strong>正常分析应该是这样的，但是这就陷入了传统的思维。进度条就只是进度条，接收页面滚动距离，改变宽度。如果页面滚动和进度条是一个整体呢？实现需求不卖关子了，下面我们运用</strong>线性渐变</strong>来实现这个功能。假设我们的页面被包裹在 <code>&lt;body&gt;</code> 中，可以滚动的是整个 body，给它添加这样一个从左下到到右上角的线性渐变：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#FFCB6B;">body</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  background-image</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#56B6C2;--shiki-dark:#82AAFF;"> linear-gradient</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(to</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;"> right</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;"> top</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#D19A66;--shiki-dark:#89DDFF;"> #</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;">ffcc00</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 50</span><span style="--shiki-light:#E06C75;--shiki-dark:#F78C6C;">%</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#D19A66;--shiki-dark:#89DDFF;"> #</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;">eee</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 50</span><span style="--shiki-light:#E06C75;--shiki-dark:#F78C6C;">%</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">);</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  background-repeat</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;"> no-repeat</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span></code></pre></div><p>那么，我们可以得到一个这样的效果：<img src="`+h+`" alt="scrollbar2" loading="lazy"></p><p>Wow，黄色块的颜色变化其实已经很能表达整体的进度了。其实到这里，聪明的同学应该已经知道下面该怎么做了。我们运用一个伪元素，把多出来的部分遮住：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#FFCB6B;">body</span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;">::</span><span style="--shiki-light:#56B6C2;--shiki-dark:#C792EA;">after</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  content</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;"> &#39;&#39;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  position</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;"> fixed</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  top</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 5</span><span style="--shiki-light:#E06C75;--shiki-dark:#F78C6C;">px</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  left</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 0</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  bottom</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 0</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  right</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 0</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  background</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#89DDFF;"> #</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;">fff</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  z-index</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> -1</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span></code></pre></div><p>为了方便演示，我把上面白色底改成了黑色透明底，：</p><p><img src="`+l+'" alt="scrollbar3" loading="lazy"></p><p>实际效果达成了这样：</p><p><img src="'+e+'" alt="scrollbar4" loading="lazy"></p><p>眼尖的同学可能会发现，这样之后，滑到底的时候，进度条并没有到底：</p><p><img src="'+p+`" alt="image" loading="lazy"></p><p>究其原因，是因为 <code>body</code> 的线性渐变高度设置了整个 body 的大小，我们调整一下渐变的高度：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#FFCB6B;">body</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  background-image</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#56B6C2;--shiki-dark:#82AAFF;"> linear-gradient</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(to</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;"> right</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;"> top</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#D19A66;--shiki-dark:#89DDFF;"> #</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;">ffcc00</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 50</span><span style="--shiki-light:#E06C75;--shiki-dark:#F78C6C;">%</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#D19A66;--shiki-dark:#89DDFF;"> #</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;">eee</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 50</span><span style="--shiki-light:#E06C75;--shiki-dark:#F78C6C;">%</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">);</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  background-size</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 100</span><span style="--shiki-light:#E06C75;--shiki-dark:#F78C6C;">%</span><span style="--shiki-light:#56B6C2;--shiki-dark:#82AAFF;"> calc</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;">100</span><span style="--shiki-light:#E06C75;--shiki-dark:#F78C6C;">%</span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;"> -</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 100</span><span style="--shiki-light:#E06C75;--shiki-dark:#F78C6C;">vh</span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;"> +</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 5</span><span style="--shiki-light:#E06C75;--shiki-dark:#F78C6C;">px</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">);</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  background-repeat</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;"> no-repeat</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span></code></pre></div><p>这里使用了 <code>calc</code> 进行了运算，减去了 <code>100vh</code>，也就是减去一个屏幕的高度，这样渐变刚好在滑动到底部的时候与右上角贴合。而 <code>+ 5px</code> 则是滚动进度条的高度，预留出 <code>5px</code> 的高度。再看看效果</p>`,16),F=s("iframe",{height:"300",style:{width:"100%"},scrolling:"no",title:"使用线性渐变实现滚动进度条",src:"https://codepen.io/mafqla/embed/JjzRNWj?default-tab=html%2Cresult&editable=true&theme-id=light",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"},`
  See the Pen <a href="https://codepen.io/mafqla/pen/JjzRNWj">
  使用线性渐变实现滚动进度条</a> by mafqla (<a href="https://codepen.io/mafqla">@mafqla</a>)
  on <a href="https://codepen.io">CodePen</a>.
`,-1),o=[d,r,B,F];function g(D,c,y,C,A,_){return n(),a("div",null,o)}const b=i(k,[["render",g]]);export{f as __pageData,b as default};
