import{_ as l}from"./chunks/ArticleMetadata.zFq9QYSy.js";import{_ as h,D as k,o as e,c as r,I as d,w as o,k as t,a as c,R as B,b as F,e as g}from"./chunks/framework.qZJwnIgp.js";import"./chunks/index.PnMQBlu7.js";import"./chunks/commonjsHelpers.5-cIlDoe.js";const N=JSON.parse('{"title":"补充","description":"","frontmatter":{"title":"补充","date":"2022-8-21 18:51","tags":["vue3"]},"headers":[],"relativePath":"knowledge/FrontEnd/vue3/01-基础/14-supplement.md","filePath":"knowledge/FrontEnd/vue3/01-基础/14-supplement.md","lastUpdated":1703748620000}'),D={name:"knowledge/FrontEnd/vue3/01-基础/14-supplement.md"},y=t("h1",{id:"补充",tabindex:"-1"},[c("补充 "),t("a",{class:"header-anchor",href:"#补充","aria-label":'Permalink to "补充"'},"​")],-1),A=B(`<h2 id="defineexpose" tabindex="-1">defineExpose <a class="header-anchor" href="#defineexpose" aria-label="Permalink to &quot;defineExpose&quot;">​</a></h2><p>详细请见<a href="https://staging-cn.vuejs.org/api/sfc-script-setup.html#defineprops-defineemits" target="_blank" rel="noreferrer">vue3 文档</a><br> 使用 <code>&lt;script setup&gt;</code> 的组件是默认关闭的——即通过模板引用或者 $parent 链获取到的组件的公开实例，不会暴露任何在 <code>&lt;script setup&gt;</code> 中声明的绑定。</p><p>可以通过 defineExpose 编译器宏来显式指定在 <code>&lt;script setup&gt;</code> 组件中要暴露出去的属性：</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">script</span><span style="--shiki-light:#D19A66;--shiki-dark:#C792EA;"> setup</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">import</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;"> ref</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> }</span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> from</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;"> &#39;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">vue</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C792EA;">const</span><span style="--shiki-light:#E5C07B;--shiki-dark:#BABED8;"> a</span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 1</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C792EA;">const</span><span style="--shiki-light:#E5C07B;--shiki-dark:#BABED8;"> b</span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#61AFEF;--shiki-dark:#82AAFF;"> ref</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;">2</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#82AAFF;">defineExpose</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">(</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">{</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;">  a</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">,</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;">  b</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">)</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">script</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span></code></pre></div><p>当父组件通过模板引用的方式获取到当前组件的实例，获取到的实例会像这样 <code>{ a: number, b: number }</code> (ref 会和在普通实例中一样被自动解包)</p>`,5);function m(s,u,_,f,C,E){const n=l,p=k("ClientOnly");return e(),r("div",null,[y,d(p,null,{default:o(()=>{var i,a;return[(((i=s.$frontmatter)==null?void 0:i.aside)??!0)&&(((a=s.$frontmatter)==null?void 0:a.showArticleMetadata)??!0)?(e(),F(n,{key:0,article:s.$frontmatter},null,8,["article"])):g("",!0)]}),_:1}),A])}const T=h(D,[["render",m]]);export{N as __pageData,T as default};
