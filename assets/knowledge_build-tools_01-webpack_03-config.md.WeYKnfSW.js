import{_ as p}from"./chunks/ArticleMetadata.LFbFf8IL.js";import{_ as k,c as e,J as r,w as F,m as l,a as d,V as B,E as g,o as t,b as D,e as o}from"./chunks/framework.YbGCv4uC.js";import"./chunks/theme.3I2wKBEs.js";import"./chunks/index.YGyFk2XV.js";const y="/assets/image-20210421125257233.MRoSMvft.png",c="/assets/image-20210208100817930.um1-5ZcV.png",C="/assets/image-20210421125602484.T633Ug0i.png",A="/assets/image-20220710172119810.R5IqMJkL.png",E="/assets/image-20220710172419130.mVhSG83X.png",u="/assets/image-20220710172914764.A7o2fjiv.png",V=JSON.parse('{"title":"webpack的配置","description":"","frontmatter":{"title":"webpack的配置","date":"2022-8-21 18:51","tags":["webpack"]},"headers":[],"relativePath":"knowledge/build-tools/01-webpack/03-config.md","filePath":"knowledge/build-tools/01-webpack/03-config.md","lastUpdated":1705886927000}'),b={name:"knowledge/build-tools/01-webpack/03-config.md"},m=l("h1",{id:"_3-webpack的配置",tabindex:"-1"},[d("3. webpack的配置 "),l("a",{class:"header-anchor",href:"#_3-webpack的配置","aria-label":'Permalink to "3. webpack的配置"'},"​")],-1),f=B(`<h2 id="_3-0-webpack-入口和出口" tabindex="-1">3.0_webpack-入口和出口 <a class="header-anchor" href="#_3-0-webpack-入口和出口" aria-label="Permalink to &quot;3.0_webpack-入口和出口&quot;">​</a></h2><blockquote><p>目标: 告诉webpack从哪开始打包, 打包后输出到哪里</p></blockquote><p>默认入口: ./src/index.js</p><p>默认出口: ./dist/main.js</p><p>webpack配置 - webpack.config.js(默认)</p><ol><li>新建src并列处, webpack.config.js</li><li>填入配置项</li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C792EA;">const</span><span style="--shiki-light:#E5C07B;--shiki-dark:#BABED8;"> path</span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#61AFEF;--shiki-dark:#82AAFF;"> require</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">(</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">path</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#89DDFF;">module</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#E5C07B;--shiki-dark:#89DDFF;">exports</span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">    entry</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">./src/main.js</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> // 入口</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">    output</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;"> </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">        path</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#E5C07B;--shiki-dark:#BABED8;"> path</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#82AAFF;">join</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">(</span><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;">__dirname</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">dist</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">)</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> // 出口路径</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">        filename</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">bundle.js</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> // 出口文件名</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">    }</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span></code></pre></div><ol start="3"><li>修改package.json, 自定义打包命令 - 让webpack使用配置文件</li></ol><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">scripts</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">: </span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">{</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#89DDFF;">    &quot;</span><span style="--shiki-light:#E06C75;--shiki-dark:#C792EA;">build</span><span style="--shiki-light:#E06C75;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">webpack</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">,</span></span></code></pre></div><ol start="4"><li>打包观察效果</li></ol><h2 id="_3-1-打包流程图" tabindex="-1">3.1_打包流程图 <a class="header-anchor" href="#_3-1-打包流程图" aria-label="Permalink to &quot;3.1_打包流程图&quot;">​</a></h2><p><img src="`+y+'" alt="image-20210421125257233" loading="lazy"></p><p>==重点: 所有要被打包的资源都要跟入口产生直接/间接的引用关系==</p><h2 id="_3-2-案例-webpack隔行变色" tabindex="-1">3.2_案例-webpack隔行变色 <a class="header-anchor" href="#_3-2-案例-webpack隔行变色" aria-label="Permalink to &quot;3.2_案例-webpack隔行变色&quot;">​</a></h2><blockquote><p>目标: 工程化模块化开发前端项目, webpack会对ES6模块化处理</p></blockquote><ol><li><p>回顾从0准备环境</p><ul><li>初始化包环境</li><li>下载依赖包</li><li>配置自定义打包命令</li></ul></li><li><p>下载jquery, 新建public/index.html</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#FFCB6B;">yarn</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;"> add</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;"> jquery</span></span></code></pre></div><p><img src="'+c+`" alt="image-20210208100817930" loading="lazy"></p></li><li><p>index.html 准备一些li</p><ul><li>==因为import语法浏览器支持性不好, 需要被webpack转换后, 再使用JS代码==</li></ul><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&lt;!</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">DOCTYPE</span><span style="--shiki-light:#D19A66;--shiki-dark:#C792EA;"> html</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">html</span><span style="--shiki-light:#D19A66;--shiki-dark:#C792EA;"> lang</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">en</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">head</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">  &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">meta</span><span style="--shiki-light:#D19A66;--shiki-dark:#C792EA;"> charset</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">UTF-8</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">  &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">meta</span><span style="--shiki-light:#D19A66;--shiki-dark:#C792EA;"> name</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">viewport</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#D19A66;--shiki-dark:#C792EA;"> content</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">width=device-width, initial-scale=1.0</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">  &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">meta</span><span style="--shiki-light:#D19A66;--shiki-dark:#C792EA;"> http-equiv</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">X-UA-Compatible</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#D19A66;--shiki-dark:#C792EA;"> content</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">ie=edge</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">  &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">title</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">Document</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">title</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">head</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">body</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">div</span><span style="--shiki-light:#D19A66;--shiki-dark:#C792EA;"> id</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">app</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">  &lt;!-- ul&gt;li{我是第$个li}*10 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">  &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">ul</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">    &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">li</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">我是第1个li</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">li</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">    &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">li</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">我是第2个li</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">li</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">    &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">li</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">我是第3个li</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">li</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">    &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">li</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">我是第4个li</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">li</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">    &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">li</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">我是第5个li</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">li</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">    &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">li</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">我是第6个li</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">li</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">    &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">li</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">我是第7个li</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">li</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">    &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">li</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">我是第8个li</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">li</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">    &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">li</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">我是第9个li</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">li</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">  &lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">ul</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">div</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">body</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">html</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span></code></pre></div></li><li><p>在src/main.js引入jquery</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#FFCB6B;">yarn</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;"> add</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;"> jquery</span></span></code></pre></div></li><li><p>src/main.js中编写隔行变色代码</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// 引入jquery</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">import</span><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;"> $</span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> from</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;"> &#39;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">jquery</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&#39;</span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#82AAFF;">$</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">(</span><span style="--shiki-light:#C678DD;--shiki-dark:#C792EA;">function</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">()</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#82AAFF;">  $</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;">(</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">#app li:nth-child(odd)</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;">)</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#82AAFF;">css</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;">(</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">color</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;"> &#39;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">red</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;">)</span></span>
<span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#82AAFF;">  $</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;">(</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">#app li:nth-child(even)</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;">)</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#82AAFF;">css</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;">(</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">color</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;"> &#39;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">green</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;">)</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">)</span></span></code></pre></div></li><li><p>执行打包命令观察效果</p></li><li><p>可以在dist下把public/index.html引入过来</p><p><img src="`+C+`" alt="image-20210421125602484" loading="lazy"></p><p>在index.html中==手动==引入js</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">script</span><span style="--shiki-light:#D19A66;--shiki-dark:#C792EA;"> src</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">../dist/bundle.js</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">script</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span></code></pre></div></li></ol><blockquote><p>总结: 前端工程化模块化, 需要的包yarn下, 被webpack打包后引入到html中使用</p></blockquote><h2 id="_3-3-插件-自动生成html文件" tabindex="-1">3.3_插件-自动生成html文件 <a class="header-anchor" href="#_3-3-插件-自动生成html文件" aria-label="Permalink to &quot;3.3_插件-自动生成html文件&quot;">​</a></h2><blockquote><p>目标: html-webpack-plugin插件, 让webpack打包后生成html文件并自动引入打包后的js</p></blockquote><p><a href="https://www.webpackjs.com/plugins/html-webpack-plugin/" target="_blank" rel="noreferrer">html-webpack-plugin插件地址</a></p><ol><li><p>下载插件</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span>yarn add html-webpack-plugin  -D</span></span></code></pre></div></li><li><p>webpack.config.js配置</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// 引入自动生成 html 的插件</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C792EA;">const</span><span style="--shiki-light:#E5C07B;--shiki-dark:#BABED8;"> HtmlWebpackPlugin</span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#61AFEF;--shiki-dark:#82AAFF;"> require</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">(</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">html-webpack-plugin</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#89DDFF;">module</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#E5C07B;--shiki-dark:#89DDFF;">exports</span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    // ...省略其他代码</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">    plugins</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;"> [</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">        new</span><span style="--shiki-light:#61AFEF;--shiki-dark:#82AAFF;"> HtmlWebpackPlugin</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">(</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">{</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">            template</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;"> &#39;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">./public/index.html</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> // 以此为基准生成打包后html文件</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">        }</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">)</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">    ]</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span></code></pre></div></li><li><p>重新打包后观察dist下是否多出html并运行看效果</p><p>==打包后的index.html自动引入打包后的js文件==</p></li></ol><blockquote><p>总结: webpack就像一个人, webpack.config.js是人物属性, 给它穿什么装备它就干什么活</p></blockquote><h2 id="_3-4-加载器-处理css文件问题" tabindex="-1">3.4_加载器 - 处理css文件问题 <a class="header-anchor" href="#_3-4-加载器-处理css文件问题" aria-label="Permalink to &quot;3.4_加载器 - 处理css文件问题&quot;">​</a></h2><blockquote><p>目标: 自己准备css文件, 引入到webpack入口, 测试webpack是否能打包css文件</p></blockquote><p>1.新建 - src/css/index.css</p><p>2.编写去除li圆点样式代码</p><p>3.(重要) 一定要引入到入口才会被webpack打包</p><p>4.执行打包命令观察效果</p><blockquote><p>总结: 保存原因, 因为webpack默认只能处理js类型文件</p></blockquote><h2 id="_3-5-加载器-处理css文件" tabindex="-1">3.5_加载器 - 处理css文件 <a class="header-anchor" href="#_3-5-加载器-处理css文件" aria-label="Permalink to &quot;3.5_加载器 - 处理css文件&quot;">​</a></h2><blockquote><p>目标: loaders加载器, 可让webpack处理其他类型的文件, 打包到js中</p></blockquote><p>原因: webpack默认只认识 js 文件和 json文件</p><p><a href="https://webpack.docschina.org/loaders/style-loader/" target="_blank" rel="noreferrer">style-loader文档</a></p><p><a href="https://webpack.docschina.org/loaders/css-loader/" target="_blank" rel="noreferrer">css-loader文档</a></p><ol><li><p>安装依赖</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span>yarn add style-loader css-loader -D</span></span></code></pre></div></li><li><p>webpack.config.js 配置</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C792EA;">const</span><span style="--shiki-light:#E5C07B;--shiki-dark:#BABED8;"> HtmlWebpackPlugin</span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#61AFEF;--shiki-dark:#82AAFF;"> require</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">(</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">html-webpack-plugin</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#89DDFF;">module</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#E5C07B;--shiki-dark:#89DDFF;">exports</span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    // ...其他代码</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">    module</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;"> </span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">        rules</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;"> [ </span><span style="--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// loader的规则</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">          {</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">            test</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#E06C75;--shiki-dark:#89DDFF;"> /</span><span style="--shiki-light:#56B6C2;--shiki-dark:#BABED8;">\\.</span><span style="--shiki-light:#E06C75;--shiki-dark:#C3E88D;">css</span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">$</span><span style="--shiki-light:#E06C75;--shiki-dark:#89DDFF;">/</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> // 匹配所有的css文件</span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">            // use数组里从右向左运行</span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">            // 先用 css-loader 让webpack能够识别 css 文件的内容并打包</span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">            // 再用 style-loader 将样式, 把css插入到dom中</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">            use</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;"> [ </span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">style-loader</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">css-loader</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">]</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">          }</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">        ]</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">    }</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span></code></pre></div></li><li><p>新建src/css/li.css - 去掉li默认样式</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#FFCB6B;">ul</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#E06C75;--shiki-dark:#FFCB6B;"> li</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">{</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">    list-style</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;"> none</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span></code></pre></div></li><li><p>引入到main.js (因为这里是入口需要产生关系, 才会被找到打包起来)</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">import</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">./css/index.css</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span></span></code></pre></div></li><li><p>运行打包后dist/index.html观察效果和css引入情况</p></li></ol><blockquote><p>总结: 万物皆模块, 引到入口, 才会被webpack打包, css打包进js中, 然后被嵌入在style标签插入dom上</p></blockquote><h2 id="_3-6-加载器-处理less文件" tabindex="-1">3.6_加载器 - 处理less文件 <a class="header-anchor" href="#_3-6-加载器-处理less文件" aria-label="Permalink to &quot;3.6_加载器 - 处理less文件&quot;">​</a></h2><blockquote><p>目标: less-loader让webpack处理less文件, less模块翻译less代码</p></blockquote><p><a href="https://webpack.docschina.org/loaders/less-loader/" target="_blank" rel="noreferrer">less-loader文档</a></p><ol><li><p>下载依赖包</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#FFCB6B;">yarn</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;"> add</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;"> less</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;"> less-loader</span><span style="--shiki-light:#D19A66;--shiki-dark:#C3E88D;"> -D</span></span></code></pre></div></li><li><p>webpack.config.js 配置</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#FFCB6B;">module</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#FFCB6B;">  rules</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;"> [ </span><span style="--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// loader的规则</span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    // ...省略其他</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">    {</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">    	test</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#E06C75;--shiki-dark:#89DDFF;"> /</span><span style="--shiki-light:#56B6C2;--shiki-dark:#BABED8;">\\.</span><span style="--shiki-light:#E06C75;--shiki-dark:#C3E88D;">less</span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">$</span><span style="--shiki-light:#E06C75;--shiki-dark:#89DDFF;">/</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">,</span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    	// 使用less-loader, 让webpack处理less文件, 内置还会用less翻译less代码成css内容</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">        use</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;"> [ </span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">style-loader</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">css-loader</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;"> &#39;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">less-loader</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;">]</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">    }</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;">  ]</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span></code></pre></div></li><li><p>src/less/index.less - 设置li字体大小24px</p><div class="language-less vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">less</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#89DDFF;">@</span><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;">size</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;">24</span><span style="--shiki-light:#E06C75;--shiki-dark:#F78C6C;">px</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#FFCB6B;">ul</span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#E06C75;--shiki-dark:#FFCB6B;"> li</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">{</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#FFCB6B;">    font-size</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#E06C75;--shiki-dark:#89DDFF;"> @</span><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;">size</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span></code></pre></div></li><li><p>引入到main.js中</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">import</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">./less/index.less</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span></span></code></pre></div></li><li><p>打包运行dist/index.html 观察效果</p></li></ol><blockquote><p>总结: 只要找到对应的loader加载器, 就能让webpack处理不同类型文件</p></blockquote><h2 id="_3-7-postcss工具" tabindex="-1">3.7 PostCss工具 <a class="header-anchor" href="#_3-7-postcss工具" aria-label="Permalink to &quot;3.7 PostCss工具&quot;">​</a></h2><ul><li><p>什么是PostCSS呢？</p><ul><li>PostCSS是一个通过JavaScript来转换样式的工具；</li><li>这个工具可以帮助我们进行一些CSS的转换和适配，比如自动添加浏览器前缀、css样式的重置；</li><li>但是实现这些功能，我们需要借助于PostCSS对应的插件；</li></ul></li><li><p>如何使用PostCSS呢？主要就是两个步骤：</p><ul><li><p>第一步：查找PostCSS在构建工具中的扩展，比如webpack中的postcss-loader；</p></li><li><p>第二步：选择可以添加你需要的PostCSS相关的插件；</p></li></ul></li></ul><h3 id="_3-7-0-命令行使用postcss" tabindex="-1">3.7.0 命令行使用PostCss <a class="header-anchor" href="#_3-7-0-命令行使用postcss" aria-label="Permalink to &quot;3.7.0 命令行使用PostCss&quot;">​</a></h3><ul><li><p>当然，我们能不能也直接在终端使用PostCSS呢？</p><ul><li>也是可以的，但是我们需要单独安装一个工具postcss-cli；</li></ul></li><li><p>我们可以安装一下它们：postcss、postcss-cli</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#FFCB6B;">npm</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;"> install</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;"> postcss</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;"> postcss-cli</span><span style="--shiki-light:#D19A66;--shiki-dark:#C3E88D;"> -D</span></span></code></pre></div></li><li><p>我们编写一个需要添加前缀的css：</p><ul><li><p><a href="https://autoprefixer.github.io/" target="_blank" rel="noreferrer">https://autoprefixer.github.io/</a></p></li><li><p>我们可以在上面的网站中查询一些添加css属性的样式；</p><img src="`+A+'" alt="image-20220710172119810" style="zoom:67%;"></li></ul></li></ul><h3 id="_3-7-1-插件autoprefixer" tabindex="-1">3.7.1 插件autoprefixer <a class="header-anchor" href="#_3-7-1-插件autoprefixer" aria-label="Permalink to &quot;3.7.1  插件autoprefixer&quot;">​</a></h3><ul><li><p>因为我们需要添加前缀，所以要安装autoprefixer：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#FFCB6B;">yarn</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;"> add</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;"> autoprefixer</span><span style="--shiki-light:#D19A66;--shiki-dark:#C3E88D;"> -D</span></span></code></pre></div></li><li><p>直接使用使用postcss工具，并且制定使用autoprefixer</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#FFCB6B;"> npx</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;"> postcss</span><span style="--shiki-light:#D19A66;--shiki-dark:#C3E88D;"> --use</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;"> autoprefixer</span><span style="--shiki-light:#D19A66;--shiki-dark:#C3E88D;"> -o</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;"> end.css</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;"> ./src/css/style.css</span></span></code></pre></div></li><li><p>转化之后的css样式如下：</p><img src="'+E+'" alt="image-20220710172419130" style="zoom:67%;"></li></ul><h3 id="_3-7-2-postcss-loader" tabindex="-1">3.7.2 postcss-loader <a class="header-anchor" href="#_3-7-2-postcss-loader" aria-label="Permalink to &quot;3.7.2 postcss-loader&quot;">​</a></h3><ul><li><p>真实开发中我们必然不会直接使用命令行工具来对css进行处理，而是可以借助于构建工具：</p><ul><li>在webpack中使用postcss就是使用postcss-loader来处理的；</li></ul></li><li><p>我们来安装postcss-loader：</p><ul><li><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#FFCB6B;">yarn</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;"> add</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;"> postcss-loader</span><span style="--shiki-light:#D19A66;--shiki-dark:#C3E88D;"> -D</span></span></code></pre></div></li></ul></li><li><p>我们修改加载css的loader：（配置文件已经过多，给出一部分了）</p><ul><li>注意：因为postcss需要有对应的插件才会起效果，所以我们需要配置它的- plugin；</li><li><img src="'+u+`" alt="image-20220710172914764" style="zoom:67%;"></li></ul></li></ul><p><strong>单独的PostCss配置文件</strong></p><ul><li>当然，我们也可以将这些配置信息放到一个单独的文件中进行管理：</li><li>在根目录下创建postcss.config.js</li></ul><h2 id="_3-8-加载器-处理图片文件" tabindex="-1">3.8 加载器 - 处理图片文件 <a class="header-anchor" href="#_3-8-加载器-处理图片文件" aria-label="Permalink to &quot;3.8 加载器 - 处理图片文件&quot;">​</a></h2><blockquote><p>目标: 用asset module方式(webpack5版本新增)</p></blockquote><p><a href="https://webpack.docschina.org/guides/asset-modules/" target="_blank" rel="noreferrer">asset module文档</a></p><p><strong>认识asset module type</strong></p><ul><li><p>我们当前使用的webpack版本是webpack5：</p><ul><li><p>在webpack5之前，加载这些资源我们需要使用一些loader，比如raw-loader 、url-loader、file-loader；</p></li><li><p>在webpack5开始，我们可以直接使用资源模块类型（asset module type），来替代上面的这些loader；</p></li></ul></li><li><p>资源模块类型(asset module type)，通过添加 4 种新的模块类型，来替换所有这些 loader：</p><ul><li><p>asset/resource 发送一个单独的文件并导出 URL。之前通过使用 file-loader 实现；</p></li><li><p>asset/inline 导出一个资源的 data URI。之前通过使用 url-loader 实现；</p></li><li><p>asset/source 导出资源的源代码。之前通过使用 raw-loader 实现；</p></li><li><p>asset 在导出一个 data URI 和发送一个单独的文件之间自动选择。之前通过使用 url-loader，并且配置资源体 积限制实现；</p></li></ul></li></ul><p>如果使用的是webpack5版本的, 直接配置在webpack.config.js - 的 rules里即可</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">{</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#FFCB6B;">    test</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#E06C75;--shiki-dark:#89DDFF;"> /</span><span style="--shiki-light:#56B6C2;--shiki-dark:#BABED8;">\\.</span><span style="--shiki-light:#E06C75;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#E06C75;--shiki-dark:#C3E88D;">png</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">|</span><span style="--shiki-light:#E06C75;--shiki-dark:#C3E88D;">jpg</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">|</span><span style="--shiki-light:#E06C75;--shiki-dark:#C3E88D;">gif</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">|</span><span style="--shiki-light:#E06C75;--shiki-dark:#C3E88D;">jpeg</span><span style="--shiki-light:#E06C75;--shiki-dark:#89DDFF;">)</span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">$</span><span style="--shiki-light:#E06C75;--shiki-dark:#89DDFF;">/</span><span style="--shiki-light:#C678DD;--shiki-dark:#F78C6C;">i</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">,</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#FFCB6B;">    type</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;"> &#39;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">asset</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&#39;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span></code></pre></div><p>如果你用的是webpack4及以前的, 请使用者里的配置</p><p><a href="https://webpack.docschina.org/loaders/url-loader/" target="_blank" rel="noreferrer">url-loader文档</a></p><p><a href="https://webpack.docschina.org/loaders/file-loader/" target="_blank" rel="noreferrer">file-loader文档</a></p><ol><li><p>下载依赖包</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#FFCB6B;">yarn</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;"> add</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;"> url-loader</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;"> file-loader</span><span style="--shiki-light:#D19A66;--shiki-dark:#C3E88D;"> -D</span></span></code></pre></div></li><li><p>webpack.config.js 配置</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">{</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#FFCB6B;">  test</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#E06C75;--shiki-dark:#89DDFF;"> /</span><span style="--shiki-light:#56B6C2;--shiki-dark:#BABED8;">\\.</span><span style="--shiki-light:#E06C75;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#E06C75;--shiki-dark:#C3E88D;">png</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">|</span><span style="--shiki-light:#E06C75;--shiki-dark:#C3E88D;">jpg</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">|</span><span style="--shiki-light:#E06C75;--shiki-dark:#C3E88D;">gif</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">|</span><span style="--shiki-light:#E06C75;--shiki-dark:#C3E88D;">jpeg</span><span style="--shiki-light:#E06C75;--shiki-dark:#89DDFF;">)</span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">$</span><span style="--shiki-light:#E06C75;--shiki-dark:#89DDFF;">/</span><span style="--shiki-light:#C678DD;--shiki-dark:#F78C6C;">i</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">,</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#FFCB6B;">  use</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;"> [</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">    {</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">      loader</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;"> &#39;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">url-loader</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> // 匹配文件, 尝试转base64字符串打包到js中</span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">      // 配置limit, 超过8k, 不转, file-loader复制, 随机名, 输出文件</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">      options</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">        limit</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 8</span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;"> *</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 1024</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">,</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">      },</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">    },</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;">  ]</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">,</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span></code></pre></div><p>图片转成 base64 字符串</p><ul><li>好处就是浏览器不用发请求了，直接可以读取</li><li>坏处就是如果图片太大，再转<code>base64</code>就会让图片的体积增大 30% 左右</li></ul></li><li><p>src/assets/2个图文件</p></li><li><p>在css/less/index.less - 把小图片用做背景图</p><div class="language-less vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">less</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#FFCB6B;">body</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">{</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#FFCB6B;">    background</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#56B6C2;--shiki-dark:#82AAFF;"> url</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">../assets/logo_small.png</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">)</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;"> no-repeat center</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span></code></pre></div></li><li><p>在src/main.js - 把大图插入到创建的img标签上, 添加body上显示</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// 引入图片-使用</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">import</span><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;"> imgUrl</span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> from</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;"> &#39;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">./assets/1.gif</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&#39;</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C792EA;">const</span><span style="--shiki-light:#E5C07B;--shiki-dark:#BABED8;"> theImg</span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#E5C07B;--shiki-dark:#BABED8;"> document</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#82AAFF;">createElement</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">(</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">img</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">)</span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#BABED8;">theImg</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;">src</span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;"> imgUrl</span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#BABED8;">document</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#E5C07B;--shiki-dark:#BABED8;">body</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#82AAFF;">appendChild</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">(</span><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;">theImg</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">)</span></span></code></pre></div></li></ol><blockquote><p>总结: url-loader 把文件转base64 打包进js中, 会有30%的增大, file-loader 把文件直接复制输出</p></blockquote><h2 id="_3-9-webpack加载文件优缺点" tabindex="-1">3.9 webpack加载文件优缺点 <a class="header-anchor" href="#_3-9-webpack加载文件优缺点" aria-label="Permalink to &quot;3.9 webpack加载文件优缺点&quot;">​</a></h2><p>图片转成 base64 字符串</p><ul><li>好处就是浏览器不用发请求了，直接可以读取</li><li>坏处就是如果图片太大，再转<code>base64</code>就会让图片的体积增大 30% 左右</li></ul><h2 id="_3-10-加载器-处理字体文件" tabindex="-1">3.10 加载器 - 处理字体文件 <a class="header-anchor" href="#_3-10-加载器-处理字体文件" aria-label="Permalink to &quot;3.10 加载器 - 处理字体文件&quot;">​</a></h2><blockquote><p>目标: 用asset module技术, asset/resource直接输出到dist目录下</p></blockquote><p>webpack5使用这个配置</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">{</span><span style="--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> // webpack5默认内部不认识这些文件, 所以当做静态资源直接输出即可</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#FFCB6B;">    test</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#E06C75;--shiki-dark:#89DDFF;"> /</span><span style="--shiki-light:#56B6C2;--shiki-dark:#BABED8;">\\.</span><span style="--shiki-light:#E06C75;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#E06C75;--shiki-dark:#C3E88D;">eot</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">|</span><span style="--shiki-light:#E06C75;--shiki-dark:#C3E88D;">svg</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">|</span><span style="--shiki-light:#E06C75;--shiki-dark:#C3E88D;">ttf</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">|</span><span style="--shiki-light:#E06C75;--shiki-dark:#C3E88D;">woff</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">|</span><span style="--shiki-light:#E06C75;--shiki-dark:#C3E88D;">woff2</span><span style="--shiki-light:#E06C75;--shiki-dark:#89DDFF;">)</span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">$</span><span style="--shiki-light:#E06C75;--shiki-dark:#89DDFF;">/</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">,</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#FFCB6B;">    type</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;"> &#39;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">asset/resource</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">,</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#FFCB6B;">    generator</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#FFCB6B;">    	filename</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;"> &#39;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">font/[name].[hash:6][ext]</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&#39;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">    }</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span></code></pre></div><p>webpack4及以前使用下面的配置</p><ol><li><p>webpack.config.js - 准备配置</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span><span style="--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> // 处理字体图标的解析</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#FFCB6B;">     test</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#E06C75;--shiki-dark:#89DDFF;"> /</span><span style="--shiki-light:#56B6C2;--shiki-dark:#BABED8;">\\.</span><span style="--shiki-light:#E06C75;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#E06C75;--shiki-dark:#C3E88D;">eot</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">|</span><span style="--shiki-light:#E06C75;--shiki-dark:#C3E88D;">svg</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">|</span><span style="--shiki-light:#E06C75;--shiki-dark:#C3E88D;">ttf</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">|</span><span style="--shiki-light:#E06C75;--shiki-dark:#C3E88D;">woff</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">|</span><span style="--shiki-light:#E06C75;--shiki-dark:#C3E88D;">woff2</span><span style="--shiki-light:#E06C75;--shiki-dark:#89DDFF;">)</span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">$</span><span style="--shiki-light:#E06C75;--shiki-dark:#89DDFF;">/</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">,</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#FFCB6B;">         use</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;"> [</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">             {</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">                 loader</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;"> &#39;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">url-loader</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">,</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">                 options</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">                     limit</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 2</span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;"> *</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 1024</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">,</span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">                     // 配置输出的文件名</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">                     name</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;"> &#39;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">[name].[ext]</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">,</span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">                     // 配置输出的文件目录</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">                     outputPath</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;"> &quot;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">fonts/</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">                 }</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">             }</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;">         ]</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> }</span></span></code></pre></div></li><li><p>src/assets/ - 放入字体库fonts文件夹</p></li><li><p>在main.js引入iconfont.css</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// 引入字体图标文件</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">import</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;"> &#39;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">./assets/fonts/iconfont.css</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&#39;</span></span></code></pre></div></li><li><p>在public/index.html使用字体图标样式</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">i</span><span style="--shiki-light:#D19A66;--shiki-dark:#C792EA;"> class</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">iconfont icon-weixin</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">i</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span></code></pre></div></li><li><p>执行打包命令-观察打包后网页效果</p></li></ol><blockquote><p>总结: url-loader和file-loader 可以打包静态资源文件</p></blockquote><h2 id="_3-11-加载器-处理高版本js语法" tabindex="-1">3.11 加载器 - 处理高版本js语法 <a class="header-anchor" href="#_3-11-加载器-处理高版本js语法" aria-label="Permalink to &quot;3.11 加载器 - 处理高版本js语法&quot;">​</a></h2><blockquote><p>目标: 让webpack对高版本 的js代码, 降级处理后打包</p></blockquote><p>写代码演示: 高版本的js代码(箭头函数), 打包后, 直接原封不动打入了js文件中, 遇到一些低版本的浏览器就会报错</p><p>原因: <strong>webpack 默认仅内置了 模块化的 兼容性处理</strong> <code>import export</code></p><p>babel 的介绍 =&gt; 用于处理高版本 js语法 的兼容性 <a href="https://www.babeljs.cn/" target="_blank" rel="noreferrer">babel官网</a></p><p>解决: 让webpack配合babel-loader 对js语法做处理</p><p><a href="https://webpack.docschina.org/loaders/babel-loader/" target="_blank" rel="noreferrer">babel-loader文档</a></p><ol><li><p>安装包</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span style="--shiki-light:#61AFEF;--shiki-dark:#FFCB6B;">yarn</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;"> add</span><span style="--shiki-light:#D19A66;--shiki-dark:#C3E88D;"> -D</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;"> babel-loader</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;"> @babel/core</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;"> @babel/preset-env</span></span></code></pre></div></li><li><p>配置规则</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#FFCB6B;">module</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#FFCB6B;">  rules</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;"> [</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">    {</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">        test</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#E06C75;--shiki-dark:#89DDFF;"> /</span><span style="--shiki-light:#56B6C2;--shiki-dark:#BABED8;">\\.</span><span style="--shiki-light:#E06C75;--shiki-dark:#C3E88D;">js</span><span style="--shiki-light:#C678DD;--shiki-dark:#89DDFF;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">$</span><span style="--shiki-light:#E06C75;--shiki-dark:#89DDFF;">/</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">,</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">        exclude</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#E06C75;--shiki-dark:#89DDFF;"> /(</span><span style="--shiki-light:#E06C75;--shiki-dark:#C3E88D;">node_modules</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">|</span><span style="--shiki-light:#E06C75;--shiki-dark:#C3E88D;">bower_components</span><span style="--shiki-light:#E06C75;--shiki-dark:#89DDFF;">)/</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">,</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">        use</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">            loader</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;"> &#39;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">babel-loader</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">,</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">            options</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">                presets</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;"> [</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">@babel/preset-env</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&#39;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;">] </span><span style="--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// 预设:转码规则(用bable开发环境本来预设的)</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">            }</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">        }</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">    }</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;">  ]</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span></code></pre></div></li><li><p>在main.js中使用箭头函数(高版本js)</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// 高级语法</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C792EA;">const</span><span style="--shiki-light:#61AFEF;--shiki-dark:#BABED8;"> fn</span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;"> =</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> ()</span><span style="--shiki-light:#C678DD;--shiki-dark:#C792EA;"> =&gt;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#BABED8;">  console</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#82AAFF;">log</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;">(</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">你好babel</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#F07178;">)</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span>
<span class="line"><span style="--shiki-light:#E5C07B;--shiki-dark:#BABED8;">console</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#82AAFF;">log</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">(</span><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;">fn</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">) </span><span style="--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// 这里必须打印不能调用/不使用, 不然webpack会精简成一句打印不要函数了/不会编译未使用的代码</span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// 没有babel集成时, 原样直接打包进lib/bundle.js</span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">// 有babel集成时, 会翻译成普通函数打包进lib/bundle.js</span></span></code></pre></div></li><li><p>打包后观察lib/bundle.js - 被转成成普通函数使用了 - 这就是babel降级翻译的功能</p></li></ol><blockquote><p>总结: babel-loader 可以让webpack 对高版本js语法做降级处理后打包</p></blockquote>`,82);function v(s,q,_,w,j,x){const n=p,h=g("ClientOnly");return t(),e("div",null,[m,r(h,null,{default:F(()=>{var i,a;return[(((i=s.$frontmatter)==null?void 0:i.aside)??!0)&&(((a=s.$frontmatter)==null?void 0:a.showArticleMetadata)??!0)?(t(),D(n,{key:0,article:s.$frontmatter},null,8,["article"])):o("",!0)]}),_:1}),f])}const z=k(b,[["render",v]]);export{V as __pageData,z as default};
