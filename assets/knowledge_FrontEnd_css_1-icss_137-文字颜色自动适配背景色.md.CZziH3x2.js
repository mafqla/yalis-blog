import{_ as l,c as h,o as n,a5 as a,j as s,a as i}from"./chunks/framework.DFZFlKnm.js";const t="/assets/16382003e81b44fabd9f26071565c033~tplv-k3u1fbpfcp-jj-mark5.B4wiKhyM.awebp",p="/assets/9d1c2ccb1f9d4c22a21b295cebf86d62~tplv-k3u1fbpfcp-jj-markq75.B3Vt9_z_.awebp",k="/assets/889a29140cc0424992d4a69ef9008939~tplv-k3u1fbpfcp-jj-mark5.DllF0g5v.awebp",e="/assets/32b79cb2927447bcbed0d8c078e1ad4a~tplv-k3u1fbpfcp-jq75.BNyxPOkb.awebp",B="/assets/2724fdc95294428fabece52a3d817c1e~tplv-k3u1fbpfcp-jj-mar5.BIo3raN6.awebp",F="/assets/002561376bcf4b688158b858c3b3635a~tplv-k3u1fbpfcp-jj-mark.B_peWOwx.awebp",q=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"knowledge/FrontEnd/css/1-icss/137-文字颜色自动适配背景色.md","filePath":"knowledge/FrontEnd/css/1-icss/137-文字颜色自动适配背景色.md","lastUpdated":1720147898000}'),r={name:"knowledge/FrontEnd/css/1-icss/137-文字颜色自动适配背景色.md"},d=a('<h2 id="快速语法入门" tabindex="-1">快速语法入门 <a class="header-anchor" href="#快速语法入门" aria-label="Permalink to &quot;快速语法入门&quot;">​</a></h2><p>首先，我们通过一张图，一个案例，快速入门 CSS 相对颜色语法：</p><p><img src="'+t+`" alt="img" loading="lazy"></p><p>相对颜色语法的目标是允许从另一种颜色派生颜色。</p><p>上图显示了将原始颜色 green 转换为新颜色的<a href="./https%3A%2F%2Fdeveloper.chrome.com%2Farticles%2Fhigh-definition-css-color-guide%3Fhl%3Dzh-cn%23a-review-of-the-classic-color-spaces">颜色空间</a>后，该颜色会转换为以 r、g、b 和 alpha 变量表示的各个数字，这些数字随后会直接用作新的 rgb() 颜色的值。</p><p>举个例子：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">p</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">CSS Relative Color</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">p</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span></code></pre></div><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#FFCB6B;">p</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  color</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#56B6C2;--shiki-dark:#82AAFF;"> rgb</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;">255</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 0</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 0</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">);</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span></code></pre></div><p>实现一个 color 为红色（rgb 值为 <code>rgb(255, 0, 0)</code>）的字体：</p><p><img src="`+p+`" alt="img" loading="lazy"></p><p>基于上面的相对颜色语法，我如何通过一个红色生成绿色文字呢？示意如下：</p><div class="language-CSS vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">CSS</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#FFCB6B;">p</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;">    --color</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#56B6C2;--shiki-dark:#82AAFF;"> rgb</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;">255</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 0</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 0</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">);</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">    color</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#56B6C2;--shiki-dark:#82AAFF;"> rgb</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">from </span><span style="--shiki-light:#56B6C2;--shiki-dark:#82AAFF;">var</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;">--color</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">)</span><span style="--shiki-light:#56B6C2;--shiki-dark:#82AAFF;"> calc</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">r </span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;">-</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 255</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">)</span><span style="--shiki-light:#56B6C2;--shiki-dark:#82AAFF;"> calc</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">g </span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;">+</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 255</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">)</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;"> b</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">);</span><span style="--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">  /* result = rgb(0, 255, 0) */</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span></code></pre></div><p>效果如下，我们就得到绿色字体：</p><p><img src="`+k+`" alt="img" loading="lazy"></p><p>解释一下：</p><ol><li>原本的红色颜色，我们把它设置为 CSS 变量 <code>--color: rgb(255, 0, 0)</code></li><li>想通过红色得到绿色，对于红色的 rgb 值 <code>rgb(255, 0, 0)</code> 而言，需要转换成 <code>rgb(0, 255, 0)</code></li><li>使用 CSS 相对颜色语法，就是 <code>rgb(from var(--color) calc(r - 255) calc(g + 255) b)</code></li></ol><p>通过这个 DEMO，我们把几个核心基础语法点学习一下：</p><ol><li><strong>from 关键字</strong></li></ol><p><code>from</code> 关键字，它是相对颜色的核心。它表示<strong>会将 from 关键字后的颜色定义转换为相对颜色！在 from 关键字后面，CSS 会期待一种颜色，即能够启发生成另一种颜色</strong>。</p><ol><li><strong>from 关键字</strong> 后的颜色表示，支持不同颜色表示或者是 CSS 变量</li></ol><p>第二个关键点，from 后面通常会接一个颜色值，这个颜色值可以是任意颜色表示法，或者是一个 CSS 变量，下面的写法都是合法的：</p><div class="language-CSS vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">CSS</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#FFCB6B;">p</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">    color</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#56B6C2;--shiki-dark:#82AAFF;"> rgba</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">from </span><span style="--shiki-light:#D19A66;--shiki-dark:#89DDFF;">#</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;">ff0000</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">)</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;"> r g b)</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">    color</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#56B6C2;--shiki-dark:#82AAFF;"> rgb</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">from </span><span style="--shiki-light:#56B6C2;--shiki-dark:#82AAFF;">rgb</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;">255</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 0</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 0</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">)</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;"> r g b</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">);</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">    color</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#56B6C2;--shiki-dark:#82AAFF;"> rgb</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">from </span><span style="--shiki-light:#56B6C2;--shiki-dark:#82AAFF;">hsl</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;">0</span><span style="--shiki-light:#E06C75;--shiki-dark:#F78C6C;">deg</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 100</span><span style="--shiki-light:#E06C75;--shiki-dark:#F78C6C;">%</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 50</span><span style="--shiki-light:#E06C75;--shiki-dark:#F78C6C;">%</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">)</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;"> r g b</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">);</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">    color</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#56B6C2;--shiki-dark:#82AAFF;"> rgb</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">from </span><span style="--shiki-light:#56B6C2;--shiki-dark:#82AAFF;">var</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;">--hotpink</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">)</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;"> r g b</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">);</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span></code></pre></div><ol><li>对转换后的变量使用 calc() 或其他 CSS 函数</li></ol><p>另外一个非常重要的基础概念就是，我们可以对 <code>(from color r g b)</code> 后的转换变量 <code>r g b</code> 使用 calc() 或其他 CSS 函数。</p><p>就是我们上面的例子：</p><div class="language-CSS vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">CSS</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#FFCB6B;">p</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;">    --color</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#56B6C2;--shiki-dark:#82AAFF;"> rgb</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;">255</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 0</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 0</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">);</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">    color</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#56B6C2;--shiki-dark:#82AAFF;"> rgb</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">from </span><span style="--shiki-light:#56B6C2;--shiki-dark:#82AAFF;">var</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;">--color</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">)</span><span style="--shiki-light:#56B6C2;--shiki-dark:#82AAFF;"> calc</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">r </span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;">-</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 255</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">)</span><span style="--shiki-light:#56B6C2;--shiki-dark:#82AAFF;"> calc</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">g </span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;">+</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 255</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">)</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;"> b</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">);</span><span style="--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">  /* result = rgb(0, 255, 0) */</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span></code></pre></div><ol><li>相对颜色语法支持，各种颜色表示函数：</li></ol><p>相对颜色的基础的使用规则就是这样，它不仅支持 <code>rgb</code> 颜色表示法，它支持所有的颜色表示法：</p><ul><li><a href="./https%3A%2F%2Fzh.wikipedia.org%2Fwiki%2FSRGB色彩空间">sRGB</a> 颜色空间：<a href="./https%3A%2F%2Fdeveloper.mozilla.org%2Fzh-CN%2Fdocs%2FWeb%2FCSS%2Fcolor_value%2Fhsl">hsl()</a>、<a href="./https%3A%2F%2Fdeveloper.mozilla.org%2Fen-US%2Fdocs%2FWeb%2FCSS%2Fcolor_value%2Fhwb">hwb()</a>、<a href="./https%3A%2F%2Fdeveloper.mozilla.org%2Fzh-CN%2Fdocs%2FWeb%2FCSS%2Fcolor_value%2Frgb">rgb()</a>；</li><li><a href="./https%3A%2F%2Fzh.wikipedia.org%2Fwiki%2FCIELAB色彩空间">CIELAB</a> 颜色空间：<a href="./https%3A%2F%2Fdeveloper.mozilla.org%2Fzh-CN%2Fdocs%2FWeb%2FCSS%2Fcolor_value%2Flab">lab()</a>、<a href="./https%3A%2F%2Fdeveloper.mozilla.org%2Fzh-CN%2Fdocs%2FWeb%2FCSS%2Fcolor_value%2Flch">lch()</a>；</li><li><a href="./https%3A%2F%2Fbottosson.github.io%2Fposts%2Foklab%2F">Oklab</a> 颜色空间：<a href="./https%3A%2F%2Fdeveloper.mozilla.org%2Fzh-CN%2Fdocs%2FWeb%2FCSS%2Fcolor_value%2Foklab">oklab()</a>、<a href="./https%3A%2F%2Fdeveloper.mozilla.org%2Fzh-CN%2Fdocs%2FWeb%2FCSS%2Fcolor_value%2Foklch">oklch()</a>；</li></ul><h2 id="使用-css-相对颜色-实现统一按钮点击背景切换" tabindex="-1">使用 CSS 相对颜色，实现统一按钮点击背景切换 <a class="header-anchor" href="#使用-css-相对颜色-实现统一按钮点击背景切换" aria-label="Permalink to &quot;使用 CSS 相对颜色，实现统一按钮点击背景切换&quot;">​</a></h2><p>通常页面上的按钮，都会有 hover/active 的颜色变化，以增强与用户的交互。</p><p>像是这样：</p><p><img src="`+e+`" alt="img" loading="lazy"></p><p>最常见的写法，就是我们需要在 Normal 状态、Hover 状态、Active 状态下写 3 种颜色：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">p { color: #ffcc00; transition: .3s all; }</span></span></code></pre></div><div class="language-CSS vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">CSS</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">/* Hover 伪类下为 B 颜色 */</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#FFCB6B;">p</span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#56B6C2;--shiki-dark:#C792EA;">hover</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">    color</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#89DDFF;"> #</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;">ffd21f</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">/** Active 伪类下为 C 颜色 **/</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#FFCB6B;">p</span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#56B6C2;--shiki-dark:#C792EA;">active</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">    color</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#89DDFF;"> #</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;">ab8a05</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span></code></pre></div><p>在之前，我们介绍过一种利用滤镜 <code>filter: contrast()</code> 或者 <code>filter: brightness()</code> 的统一解决方案，无需写多个颜色值，可以根据 Normal 状态下的色值，通过滤镜统一实现更亮、或者更暗的伪类颜色。</p><p>在今天，我们也可以利用 CSS 相对颜色来做这个事情：</p><div class="language-CSS vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">CSS</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#FFCB6B;">div</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;">    --bg</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#89DDFF;"> #</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;">fc0</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">    background</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#56B6C2;--shiki-dark:#82AAFF;"> var</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;">--bg</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">);</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">    transition</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> .3</span><span style="--shiki-light:#E06C75;--shiki-dark:#F78C6C;">s</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;"> all</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#FFCB6B;">div</span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#56B6C2;--shiki-dark:#C792EA;">hover</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">    background</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#56B6C2;--shiki-dark:#82AAFF;"> hsl</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">from </span><span style="--shiki-light:#56B6C2;--shiki-dark:#82AAFF;">var</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;">--bg</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">)</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;"> h s </span><span style="--shiki-light:#56B6C2;--shiki-dark:#82AAFF;">calc</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">l </span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;">*</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 1.2</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">));</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#FFCB6B;">div</span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#56B6C2;--shiki-dark:#C792EA;">active</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">    background</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#56B6C2;--shiki-dark:#82AAFF;"> hsl</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">from </span><span style="--shiki-light:#56B6C2;--shiki-dark:#82AAFF;">var</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;">--bg</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">)</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;"> h s </span><span style="--shiki-light:#56B6C2;--shiki-dark:#82AAFF;">calc</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">l </span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;">*</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 0.8</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">));</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span></code></pre></div><p>我们通过 <code>hsl</code> 色相、饱和度、亮度颜色表示法表示颜色。实现：</p><ol><li>在 <code>:hover</code> 状态下，根据背景色，将背景亮度 l 调整为原背景色的 1.2 倍</li><li>在 <code>:avtive</code> 状态下，根据背景色，将背景亮度 l 调整为原背景色的 0.8 倍</li></ol><p>在实际业务中，这是一个非常有用的用法。</p>`,42),o=s("iframe",{height:"300",style:{width:"100%"},scrolling:"no",title:"CSS Relative Color",src:"https://codepen.io/mafqla/embed/pomvVVG?default-tab=html%2Cresult&editable=true&theme-id=light",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"},[i(" See the Pen "),s("a",{href:"https://codepen.io/mafqla/pen/pomvVVG"}," CSS Relative Color"),i(" by mafqla ("),s("a",{href:"https://codepen.io/mafqla"},"@mafqla"),i(") on "),s("a",{href:"https://codepen.io"},"CodePen"),i(". ")],-1),g=a('<h2 id="使用-css-相对颜色-实现文字颜色自适应背景" tabindex="-1">使用 CSS 相对颜色，实现文字颜色自适应背景 <a class="header-anchor" href="#使用-css-相对颜色-实现文字颜色自适应背景" aria-label="Permalink to &quot;使用 CSS 相对颜色，实现文字颜色自适应背景&quot;">​</a></h2><p>相对颜色，还有一个非常有意思的场景 -- <strong>让文字颜色能够自适应背景颜色</strong>进行展示。</p><p>有这么一种场景，有的时候，无法确定文案的背景颜色的最终表现值（因为背景颜色的值可能是后台配置，通过接口传给前端），但是，我们又需要能够让文字在任何背景颜色下都正常展现（譬如当底色为黑色时文字应该是白色，当背景为白色时，文字应该为黑色）。</p><p>像是这样：</p><p><img src="'+B+`" alt="img" loading="lazy"></p><p>在不确定背景颜色的情况下，无论什么情况，文字颜色都能够适配背景的颜色。</p><p>在之前，纯 CSS 没有特别好的方案，可以利用 <code>mix-blend-mode: difference</code> 进行一定程度的适配：</p><div class="language-CSS vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">CSS</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#FFCB6B;">div</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">    // 不确定的背景色</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#FFCB6B;">p</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">    color</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#89DDFF;"> #</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;">fff</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">    mix-blend-mode</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;"> difference</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span></code></pre></div><p>实操过这个方案的同学都会知道，在一定情况下，前景文字颜色还是会有一点瑕疵。并且，<strong>混合模式这个方案最大的问题是会影响清晰度</strong>。</p><p>有了 CSS 相对颜色后，我们有了更多的纯 CSS 方案。</p><h3 id="利用-css-相对颜色-反转颜色" tabindex="-1">利用 CSS 相对颜色，反转颜色 <a class="header-anchor" href="#利用-css-相对颜色-反转颜色" aria-label="Permalink to &quot;利用 CSS 相对颜色，反转颜色&quot;">​</a></h3><p>我们可以利用相对颜色的能力，基于背景色颜色进行反转，赋值给 color。</p><p>一种方法是将颜色转换为 RGB，然后从 1 中减去每个通道的值。</p><p>代码非常简单：</p><div class="language-CSS vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">CSS</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#FFCB6B;">p</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    /** 任意背景色 **/</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;">    --bg</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#89DDFF;"> #</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;">ffcc00</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">    background</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#56B6C2;--shiki-dark:#82AAFF;"> var</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;">--bg</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">    color</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#56B6C2;--shiki-dark:#82AAFF;"> rgb</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">from </span><span style="--shiki-light:#56B6C2;--shiki-dark:#82AAFF;">var</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;">--bg</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">)</span><span style="--shiki-light:#56B6C2;--shiki-dark:#82AAFF;"> calc</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;">1</span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;"> -</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;"> r</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">)</span><span style="--shiki-light:#56B6C2;--shiki-dark:#82AAFF;"> calc</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;">1</span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;"> -</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;"> g</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">)</span><span style="--shiki-light:#56B6C2;--shiki-dark:#82AAFF;"> calc</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;">1</span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;"> -</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;"> b</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">));</span><span style="--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">  /** 基于背景反转颜色 **/</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span></code></pre></div><blockquote><p>用 1 去减，而不是用 255 去，是因为此刻，会将 <code>rgb()</code> 表示法中的 <code>0~255</code> 映射到 <code>0~1</code>。</p></blockquote><p>效果如下：</p><p><img src="`+F+'" alt="img" loading="lazy"></p><p>配个动图，我们利用背景色的反色当 Color 颜色，适配所有背景情况：</p>',19),D=s("iframe",{height:"300",style:{width:"100%"},scrolling:"no",title:"CSS Relatvie Color Adapt BG",src:"https://codepen.io/mafqla/embed/xxNbjzw?default-tab=html%2Cresult&editable=true&theme-id=light",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"},[i(" See the Pen "),s("a",{href:"https://codepen.io/mafqla/pen/xxNbjzw"}," CSS Relatvie Color Adapt BG"),i(" by mafqla ("),s("a",{href:"https://codepen.io/mafqla"},"@mafqla"),i(") on "),s("a",{href:"https://codepen.io"},"CodePen"),i(". ")],-1),c=a(`<p>当然，这个方案还有两个问题：</p><ol><li>如果颜色恰好是在 <code>#808080</code> 灰色附近，它的反色，其实还是它自己！会导致在灰色背景下，前景文字不可见；</li><li>绝大部分情况虽然可以正常展示，但是并不是非常美观好看</li></ol><p>为了解决这两个问题，CSS 颜色规范在 <a href="./https%3A%2F%2Fdrafts.csswg.org%2Fcss-color-6%2F%23colorcontrast">CSS Color Module Level 6</a> 又推出了一个新的规范 -- <strong>color-contrast()</strong>。</p><h3 id="利用-color-contrast-选择高对比度颜色" tabindex="-1">利用 <code>color-contrast()</code>，选择高对比度颜色 <a class="header-anchor" href="#利用-color-contrast-选择高对比度颜色" aria-label="Permalink to &quot;利用 \`color-contrast()\`，选择高对比度颜色&quot;">​</a></h3><p>color-contrast() 函数标记接收一个 <a href="./https%3A%2F%2Fdeveloper.mozilla.org%2Fzh-CN%2Fdocs%2FWeb%2FCSS%2Fcolor_value">color</a> 值，并将其与其他的 <a href="./https%3A%2F%2Fdeveloper.mozilla.org%2Fzh-CN%2Fdocs%2FWeb%2FCSS%2Fcolor_value">color</a> 值比较，从列表中选择最高对比度的颜色。</p><p>利用这个 CSS 颜色函数，可以完美的解决上述的问题。</p><p>我们只需要提供 <code>#fff</code> 白色和 <code>#000</code> 黑色两种可选颜色，将这两种颜色和提供的背景色进行比较，系统会自动选取对比度更高的颜色。</p><p>改造一下，上面的代码，它就变成了：</p><div class="language-CSS vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">CSS</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#FFCB6B;">p</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    /** 任意背景色 **/</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;">    --bg</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#89DDFF;"> #</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;">ffcc00</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">    background</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#56B6C2;--shiki-dark:#82AAFF;"> var</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;">--bg</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">    color</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;"> color-contrast(</span><span style="--shiki-light:#56B6C2;--shiki-dark:#82AAFF;">var</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;">--bg</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">)</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;"> vs </span><span style="--shiki-light:#D19A66;--shiki-dark:#89DDFF;">#</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;">fff</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#D19A66;--shiki-dark:#89DDFF;"> #</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;">000</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">)</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span><span style="--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">  /** 基于背景色，自动选择对比度更高的颜色 **/</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span></code></pre></div><p>这样，上面的 DEMO 最终效果就变成了：</p>`,10),A=s("iframe",{height:"300",style:{width:"100%"},scrolling:"no",title:"CSS Relatvie Color Adapt BG",src:"https://codepen.io/mafqla/embed/vYwEjrm?default-tab=html%2Cresult&editable=true&theme-id=light",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"},[i(" See the Pen "),s("a",{href:"https://codepen.io/mafqla/pen/vYwEjrm"}," CSS Relatvie Color Adapt BG"),i(" by mafqla ("),s("a",{href:"https://codepen.io/mafqla"},"@mafqla"),i(") on "),s("a",{href:"https://codepen.io"},"CodePen"),i(". ")],-1),y=s("p",null,"此方案的优势在于：",-1),C=s("ol",null,[s("li",null,"可以限定前景 color 颜色为固定的几个色值，以保证 UI 层面的统一及美观"),s("li",null,"满足任何情况下的背景色")],-1),b=s("p",null,[i("当然，唯一限制这个方案的最大问题在于，当前，"),s("code",null,"color-contrast"),i(" 还只是一个实验室功能，未大规模被兼容。")],-1),m=[d,o,g,D,c,A,y,C,b];function f(v,E,S,_,u,w){return n(),h("div",null,m)}const x=l(r,[["render",f]]);export{q as __pageData,x as default};
