import{_ as a,c as t,o as e,V as s,m as i}from"./chunks/framework.bW6FiXxS.js";const l="/assets/123500228-1b242680-d66f-11eb-8743-14a522730447.SHQImeuH.png",n="/assets/140598990-6421640c-4f94-4b0f-a570-bda31102ce2f.Es_snMV9.gif",h="/assets/50085117-19728000-0234-11e9-9184-218fb907fb88.n0xxu2hm.gif",u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"knowledge/FrontEnd/css/1-基础/88-深入探讨 filter 与 backdrop-filter 的异同.md","filePath":"knowledge/FrontEnd/css/1-基础/88-深入探讨 filter 与 backdrop-filter 的异同.md","lastUpdated":1709772126000}'),p={name:"knowledge/FrontEnd/css/1-基础/88-深入探讨 filter 与 backdrop-filter 的异同.md"},k=s('<h2 id="filter-vs-backdrop-filter" tabindex="-1"><code>filter</code> VS <code>backdrop-filter</code> <a class="header-anchor" href="#filter-vs-backdrop-filter" aria-label="Permalink to &quot;`filter` VS `backdrop-filter`&quot;">​</a></h2><p>在 CSS 中，有两个和滤镜相关的属性 -- <code>filter</code> 和 <code>backdrop-filter</code>。</p><blockquote><p><a href="https://drafts.fxtf.org/filter-effects-2/#BackdropFilterProperty" target="_blank" rel="noreferrer">backdrop-filter</a> 是更为新的规范推出的新属性，可以点击查看 Filter Effects Module Level 2。</p></blockquote><ul><li><code>filter</code>：该属性将模糊或颜色偏移等图形效果应用于元素。</li><li><code>backdrop-filter</code>： 该属性可以让你为一个元素后面区域添加图形效果（如模糊或颜色偏移）。 它适用于元素背后的所有元素，为了看到效果，必须使元素或其背景至少部分透明。</li></ul><p>注意两者之间的差异，<code>filter</code> 是作用于元素本身，而 <code>backdrop-filter</code> 是作用于元素背后的区域所覆盖的所有元素。</p><p>它们所支持的滤镜种类：</p><table><thead><tr><th></th><th>filter</th><th>backdrop-filter</th><th>备注</th></tr></thead><tbody><tr><td>url</td><td>√</td><td>√</td><td>获取指向 SVG 过滤器的 URI</td></tr><tr><td>blur</td><td>√</td><td>√</td><td>高斯模糊滤镜</td></tr><tr><td>brightness</td><td>√</td><td>√</td><td>图像明亮度的滤镜</td></tr><tr><td>contrast</td><td>√</td><td>√</td><td>图像的对比度滤镜</td></tr><tr><td>drop-shadow</td><td>√</td><td>√</td><td>图像的阴影滤镜</td></tr><tr><td>grayscale</td><td>√</td><td>√</td><td>图像灰度滤镜</td></tr><tr><td>hue-rotate</td><td>√</td><td>√</td><td>图像色相滤镜</td></tr><tr><td>invert</td><td>√</td><td>√</td><td>反转滤镜</td></tr><tr><td>opacity</td><td>√</td><td>√</td><td>透明度滤镜</td></tr><tr><td>sepia</td><td>√</td><td>√</td><td>深褐色滤镜</td></tr><tr><td>saturate</td><td>√</td><td>√</td><td>图像饱和度滤镜</td></tr></tbody></table><p>可以看到，两者所支持的滤镜种类是一模一样的。</p><p>也就是说，它们必然存在诸多差异，下面就让我们逐一探讨。</p><h2 id="作用对象的差异" tabindex="-1">作用对象的差异 <a class="header-anchor" href="#作用对象的差异" aria-label="Permalink to &quot;作用对象的差异&quot;">​</a></h2><p><code>backdrop-filter</code> 最常用的功能，就是用于实现毛玻璃效果。</p><p>我们通过实现毛玻璃效果来理解 <code>filter</code> 和 <code>backdrop-filter</code> 使用上的一些差异。</p><p>在 <code>backdrop-filter</code> 没有诞生前，我们想实现这样一个毛玻璃效果，是比较困难的：</p><p><a href="https://user-images.githubusercontent.com/8554143/123500228-1b242680-d66f-11eb-8743-14a522730447.png" target="_blank" rel="noreferrer"><img src="'+l+`" alt="img" loading="lazy"></a></p><p>有了它，实现毛玻璃效果就非常 Easy 了，看这样一段代码：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">div</span><span style="--shiki-light:#D19A66;--shiki-dark:#C792EA;"> class</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">bg</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">  &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">div</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">Normal</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">div</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">  &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">div</span><span style="--shiki-light:#D19A66;--shiki-dark:#C792EA;"> class</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">g-filter</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">filter</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">div</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">  &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">div</span><span style="--shiki-light:#D19A66;--shiki-dark:#C792EA;"> class</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">g-backdrop-filter</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">backdrop-filter</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">div</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">div</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span></code></pre></div><div class="language-scss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span style="--shiki-light:#D19A66;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#D19A66;--shiki-dark:#FFCB6B;">bg</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  background</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#56B6C2;--shiki-dark:#82AAFF;"> url</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">image</span><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">.png</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#FFCB6B;">  &amp;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;"> &gt; </span><span style="--shiki-light:#E06C75;--shiki-dark:#FFCB6B;">div</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">    width</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 300</span><span style="--shiki-light:#E06C75;--shiki-dark:#F78C6C;">px</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">    height</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 200</span><span style="--shiki-light:#E06C75;--shiki-dark:#F78C6C;">px</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">    background</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#56B6C2;--shiki-dark:#82AAFF;"> rgba</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;">255</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 255</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 255</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 0.7</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">);</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">  }</span></span>
<span class="line"><span style="--shiki-light:#D19A66;--shiki-dark:#89DDFF;">  .</span><span style="--shiki-light:#D19A66;--shiki-dark:#FFCB6B;">g-filter</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#FFCB6B;">    filter</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#56B6C2;--shiki-dark:#82AAFF;"> blur</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;">6</span><span style="--shiki-light:#E06C75;--shiki-dark:#F78C6C;">px</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">);</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">  }</span></span>
<span class="line"><span style="--shiki-light:#D19A66;--shiki-dark:#89DDFF;">  .</span><span style="--shiki-light:#D19A66;--shiki-dark:#FFCB6B;">g-backdrop-filter</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">    backdrop-filter</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#56B6C2;--shiki-dark:#82AAFF;"> blur</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;">6</span><span style="--shiki-light:#E06C75;--shiki-dark:#F78C6C;">px</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">);</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">  }</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span></code></pre></div>`,17),d=i("iframe",{height:"300",style:{width:"100%"},scrolling:"no",title:"filter 与 backdrop-filter 对比",src:"https://codepen.io/mafqla/embed/yLrLNMr?default-tab=html%2Cresult&editable=true&theme-id=light",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"},`
  See the Pen <a href="https://codepen.io/mafqla/pen/yLrLNMr">
  filter 与 backdrop-filter 对比</a> by mafqla (<a href="https://codepen.io/mafqla">@mafqla</a>)
  on <a href="https://codepen.io">CodePen</a>.
`,-1),r=s('<p><code>filter</code> 和 <code>backdrop-filter</code> 使用上最明显的差异在于：</p><ul><li><code>filter</code> 作用于当前元素，并且它的后代元素也会继承这个属性</li><li><code>backdrop-filter</code> 作用于元素背后的所有元素</li></ul><p>仔细区分理解，一个是<strong>当前元素和它的后代元素</strong>，一个是<strong>元素背后的所有元素</strong>。</p><p>理解了这个，就能够明白为什么有了 <code>filter</code>，还会有 <code>backdrop-filter</code>。</p><h2 id="效果上的差异" tabindex="-1">效果上的差异 <a class="header-anchor" href="#效果上的差异" aria-label="Permalink to &quot;效果上的差异&quot;">​</a></h2><p>下面来看一些实际使用上，效果的差异。</p><p>譬如，我们想实现这样一个图片的蒙版 Hover 效果：</p><p><a href="https://user-images.githubusercontent.com/8554143/140598990-6421640c-4f94-4b0f-a570-bda31102ce2f.gif" target="_blank" rel="noreferrer"><img src="'+n+`" alt="img" loading="lazy"></a></p><p>使用 <code>backdrop-filter</code> 可以轻松的胜任，因为它就是用于产生蒙版，作用于蒙版背后的元素，其核心伪代码如下：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">div</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">div</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span></code></pre></div><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#FFCB6B;">div</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  position</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;"> relative</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  background</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#56B6C2;--shiki-dark:#82AAFF;"> url</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#E06C75;--shiki-dark:#BABED8;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">https://www.wptunnel.com/wp-content/uploads/2021/07/wptunnel-hd-beautiful-wallpaper-4.jpg</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">);</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#FFCB6B;">div</span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;">::</span><span style="--shiki-light:#56B6C2;--shiki-dark:#C792EA;">before</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  content</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;"> &#39;&#39;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  position</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;"> absolute</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  top</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 0</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  left</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 0</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  bottom</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 0</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  right</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 0</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  backdrop-filter</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#56B6C2;--shiki-dark:#82AAFF;"> grayscale</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;">100</span><span style="--shiki-light:#E06C75;--shiki-dark:#F78C6C;">%</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">);</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  transition</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 0.3</span><span style="--shiki-light:#E06C75;--shiki-dark:#F78C6C;">s</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;"> transform</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#FFCB6B;">div</span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#56B6C2;--shiki-dark:#C792EA;">hover</span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;">::</span><span style="--shiki-light:#56B6C2;--shiki-dark:#C792EA;">before</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  transform</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#56B6C2;--shiki-dark:#82AAFF;"> translate</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;">100</span><span style="--shiki-light:#E06C75;--shiki-dark:#F78C6C;">%</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">,</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 0</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">);</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span></code></pre></div><p>思考如果使用 <code>filter</code>，如何实现上述的效果呢？比较麻烦，因为 <code>filter</code> 是作用于元素上的，所以，它只能是实现类似于这样的 Hover 效果：</p>`,12),o=i("iframe",{height:"300",style:{width:"100%"},scrolling:"no",title:"filter VS backdrop-filter",src:"https://codepen.io/mafqla/embed/zYXYGwG?default-tab=html%2Cresult&editable=true&theme-id=light",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"},`
  See the Pen <a href="https://codepen.io/mafqla/pen/zYXYGwG">
  filter VS backdrop-filter</a> by mafqla (<a href="https://codepen.io/mafqla">@mafqla</a>)
  on <a href="https://codepen.io">CodePen</a>.
`,-1),B=s(`<p>核心代码：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#FFCB6B;">div</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  filter</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#56B6C2;--shiki-dark:#82AAFF;"> grayscale</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;">100</span><span style="--shiki-light:#E06C75;--shiki-dark:#F78C6C;">%</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">);</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  transition</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 0.3</span><span style="--shiki-light:#E06C75;--shiki-dark:#F78C6C;">s</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;"> filter</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#FFCB6B;">div</span><span style="--shiki-light:#56B6C2;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#56B6C2;--shiki-dark:#C792EA;">hover</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  filter</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#56B6C2;--shiki-dark:#82AAFF;"> grayscale</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;">0</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">);</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span></code></pre></div><p>通过这个例子，应该可以更好的理解它们之间的差异。</p><h2 id="性能的差异" tabindex="-1">性能的差异 <a class="header-anchor" href="#性能的差异" aria-label="Permalink to &quot;性能的差异&quot;">​</a></h2><p>最早想写这篇文章的初衷，是因为认为 <code>filter</code> 和 <code>backdrop-filter</code> 可能实际存在性能上的差异。</p><p>但是随着我使用多个 DEMO 验证， 利用 <code>filter</code> 和 <code>backdrop-filter</code> 实现相同的动画效果，获取在动画期间的页面的帧率变化。</p><blockquote><p>除了 Chrome 自带的页面帧率控制面板，还有一种利用 rAF 近似计算页面帧率的方案，可以戳这里 -- <a href="https://github.com/chokcoco/cnblogsArticle/issues/17" target="_blank" rel="noreferrer">Web 动画帧率（FPS）计算</a></p></blockquote><p>实际对比之后，发现其实两者并无多大性能上的差异。（当然，也可能是我的实验不够严谨。欢迎有更为准确的数据的同学指出）。</p><p>因此，如果利用 <code>filter</code> 和 <code>backdrop-filter</code> 都可以实现同一个效果，仅仅是性能这个角度，两者在性能上其实不会有多大差异，二者选其一即可。</p><h2 id="backdrop-root" tabindex="-1">Backdrop Root <a class="header-anchor" href="#backdrop-root" aria-label="Permalink to &quot;Backdrop Root&quot;">​</a></h2><p>接下来这一点很有意思。有必要再好好讲一讲。</p><p>当然，这一点 <code>filter</code> 和 <code>backdrop-filter</code> 都一样，那就是作用了 <code>filter</code> 和 <code>backdrop-filter</code> 的元素（值不为 <code>none</code>），都会生成 <code>Backdrop Root</code>。</p><p>什么是 <code>Backdrop Root</code> 呢？也就是我们常说的，生成了自己的堆叠上下文（Stacking Context）。</p><p>我们直接来看，它会造成什么问题：</p><h3 id="生成了-backdrop-root-的元素会使-css-3d-失效" tabindex="-1">生成了 <code>Backdrop Root</code> 的元素会使 CSS 3D 失效 <a class="header-anchor" href="#生成了-backdrop-root-的元素会使-css-3d-失效" aria-label="Permalink to &quot;生成了 \`Backdrop Root\` 的元素会使 CSS 3D 失效&quot;">​</a></h3><p>我之前写过一个 3D 球的旋转动画，大概是这样：</p>`,16),F=i("iframe",{height:"300",style:{width:"100%"},scrolling:"no",title:"3D ball",src:"https://codepen.io/mafqla/embed/vYMYOmJ?default-tab=html%2Cresult&editable=true&theme-id=light",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"},`
  See the Pen <a href="https://codepen.io/mafqla/pen/vYMYOmJ">
  3D ball</a> by mafqla (<a href="https://codepen.io/mafqla">@mafqla</a>)
  on <a href="https://codepen.io">CodePen</a>.
`,-1),c=s(`<p>然而，如果我们给上述动画的容器，添加一个 <code>filter</code> 或者 <code>backdrop-filter</code>：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  filter</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#56B6C2;--shiki-dark:#82AAFF;"> blur</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">(</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;">1</span><span style="--shiki-light:#E06C75;--shiki-dark:#F78C6C;">px</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">);</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span></code></pre></div><p>整个 3D 动画就会坍缩为 2D 动画：</p><p><img src="`+h+'" alt="img" loading="lazy"></p><h3 id="作用了-filter-和-backdrop-filter-的元素会使内部的-fixed-定位失效" tabindex="-1">作用了 <code>filter</code> 和 <code>backdrop-filter</code> 的元素会使内部的 fixed 定位失效 <a class="header-anchor" href="#作用了-filter-和-backdrop-filter-的元素会使内部的-fixed-定位失效" aria-label="Permalink to &quot;作用了 `filter` 和 `backdrop-filter` 的元素会使内部的 fixed 定位失效&quot;">​</a></h3><p>另外这个问题也是比较常见的问题。</p><p>我们都知道，CSS 中 <code>position: fixed</code> 是相对于屏幕视口进行定位的。</p><p>然而，作用了 <code>filter</code> 和 <code>backdrop-filter</code> 的元素的元素会使得其内部的 <code>position: fixed</code> 元素不再相对于屏幕视口进行定位，而是相对这个 <code>Backdrop Root</code> 元素进行定位，其表现就是 <code>position: fixed</code> 定位的元素退化为了 <code>position: absolute</code>。</p><p>当然，除了 <code>filter</code> 和 <code>backdrop-filter</code> 之外，在 CSS 中目前一共有 7 种方式可以让元素内部的 <code>position: fixed</code> 基于该元素定位：</p><ol><li><code>transform</code> 属性值不为 none 的元素</li><li>设置了 <code>transform-style</code>: preserve-3d 的元素</li><li><code>perspective</code> 值不为 none 的元素</li><li>在 <code>will-change</code> 中指定了任意 CSS 属性</li><li>设置了 <code>contain: paint</code></li><li>filter 值不为 <code>none</code> 的元素</li><li>backdrop-filter 值不为 <code>none</code>的元素</li></ol>',10),g=[k,d,r,o,B,F,c];function D(y,C,A,f,b,m){return e(),t("div",null,g)}const E=a(p,[["render",D]]);export{u as __pageData,E as default};
