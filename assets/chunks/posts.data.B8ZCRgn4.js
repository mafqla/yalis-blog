const s=JSON.parse(`[{"title":"vue3 父子组件异步数据获取解决","url":"/blogs/2024/07/05/vue3父子组件异步数据获取解决","author":"yalis","editLink":false,"lastUpdated":true,"showComment":true,"excerpt":"","date":{"time":1720190040,"string":"2024-07-05 14:34"},"tags":["vue3"],"categories":["vue3"],"description":"","cover":""},{"title":"GitHub Action脚本","url":"/blogs/2024/01/06/GitHub Action 脚本","author":"yalis","lastUpdated":true,"showComment":true,"excerpt":"","date":{"time":1704554700,"string":"2024-01-06 15:25"},"tags":["github"],"categories":["github"],"description":"GitHub Action - 自动部署及发布版本及生成更新日志","cover":""},{"title":"Vercel 配置跨域","url":"/blogs/2023/12/28/vercel配置跨域","author":"yalis","lastUpdated":true,"showComment":true,"excerpt":"","date":{"time":1703778240,"string":"2023-12-28 15:44"},"tags":["vercel"],"categories":["vercel"],"description":"部署前端项目到Vercel，解决跨域的问题","cover":""},{"title":"mermaid的使用","url":"/blogs/2023/03/04/mermaid的使用","author":"yalis","editLink":false,"lastUpdated":true,"excerpt":"","date":{"time":1677968280,"string":"2023-03-04 22:18"},"tags":["mermaid"],"categories":["mermaid"],"description":"mermaid的使用","cover":""},{"title":"模板","url":"/blogs/2023/03/04/模板","author":"yalis","isTop":true,"lastUpdated":true,"excerpt":"<h1 id=\\"模板\\" tabindex=\\"-1\\">模板 <Badge text=\\"持续更新\\" type=\\"warning\\" /> <a class=\\"header-anchor\\" href=\\"#模板\\" aria-label=\\"Permalink to &quot;模板 &lt;Badge text=&quot;持续更新&quot; type=&quot;warning&quot; /&gt;&quot;\\">&ZeroWidthSpace;</a></h1>\\n\\n<ClientOnly><ArticleMetadata v-if=\\"($frontmatter?.aside ?? true) \\n        && ($frontmatter?.showArticleMetadata ?? true)\\" :article=\\"$frontmatter\\"\\n        :readTime=\\"1\\" :words=\\"8\\"  /></ClientOnly><h2 id=\\"md文件头\\" tabindex=\\"-1\\">md文件头 <a class=\\"header-anchor\\" href=\\"#md文件头\\" aria-label=\\"Permalink to &quot;md文件头&quot;\\">&ZeroWidthSpace;</a></h2>\\n<div class=\\"language-yaml vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">yaml</span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"></span></code></pre>\\n</div>","date":{"time":1677968280,"string":"2023-03-04 22:18"},"tags":["template"],"categories":["template"],"description":"","cover":""},{"title":"TypeScript 快速上手","url":"/knowledge/FrontEnd/typescript/1-get-started-quickly","excerpt":"","date":{"time":1661107860,"string":"2022-08-21 18:51"},"tags":["typescript"],"description":"","cover":""},{"title":"TypeScript 声明变量","url":"/knowledge/FrontEnd/typescript/2-declare-variables","excerpt":"","date":{"time":1661107860,"string":"2022-08-21 18:51"},"tags":["typescript"],"description":"","cover":""},{"title":"TypeScript 常用基础类型","url":"/knowledge/FrontEnd/typescript/3-common-foundation-types","excerpt":"<h2 id=\\"_3-typescript-常用基础类型\\" tabindex=\\"-1\\">3 TypeScript 常用基础类型 <a class=\\"header-anchor\\" href=\\"#_3-typescript-常用基础类型\\" aria-label=\\"Permalink to &quot;3 TypeScript 常用基础类型&quot;\\">&ZeroWidthSpace;</a></h2>\\n<p>可以将 TS 中的常用基础类型分为两类</p>\\n<ol>\\n<li>JavaScript 已有类型</li>\\n</ol>\\n<ul>\\n<li>原始类型： <strong><code>number/string/boolean/null/undefined/symbol</code></strong></li>\\n<li>对象类型：<strong><code>object</code></strong>(数组、对象、函数等)</li>\\n</ul>\\n<ol>\\n<li>TypeScript 新增类型</li>\\n</ol>\\n<ul>\\n<li>联合类型、自定义类型（类型别名）、接口、元祖、字面量类型、枚举、void、any 等</li>\\n</ul>\\n<blockquote>\\n<p>注意：原始类型在 TS 和 JS 中写法一致， 对象类型在 TS 中更加细化，每个具体对象都有自己的类型语法</p>\\n</blockquote>\\n<h2 id=\\"_3-1-原始类型\\" tabindex=\\"-1\\">3.1 原始类型 <a class=\\"header-anchor\\" href=\\"#_3-1-原始类型\\" aria-label=\\"Permalink to &quot;3.1 原始类型&quot;\\">&ZeroWidthSpace;</a></h2>\\n<p><strong><code>number/string/boolean/null/undefined/symbol</code></strong></p>\\n<blockquote>\\n<p>特点：可完全按照 JavaScript 中的名称来书写</p>\\n</blockquote>\\n<div class=\\"language-ts vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">ts</span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">let</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\"> age</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> number</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#F78C6C\\"> 18</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">let</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\"> username</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> string</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> '</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">张三</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">let</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\"> isMerry</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> boolean</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#FF9CAC\\"> false</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">let</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\"> unique</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> Symbol</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\"> Symbol</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">(</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">shuiruohanyu</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">)</span></span></code></pre>\\n</div><h2 id=\\"_3-2-数组类型\\" tabindex=\\"-1\\">3.2 数组类型 <a class=\\"header-anchor\\" href=\\"#_3-2-数组类型\\" aria-label=\\"Permalink to &quot;3.2 数组类型&quot;\\">&ZeroWidthSpace;</a></h2>\\n<p>数组两种写法</p>\\n<ol>\\n<li><code>类型[]</code>写法， 如</li>\\n</ol>\\n<div class=\\"language-ts vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">ts</span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">let</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\"> userList</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> string</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">[] </span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\">=</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\"> [</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">John</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> '</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">Bob</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> '</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">Tony</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">]</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">let</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\"> peopleList</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> object</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">[] </span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\">=</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\"> [</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">{</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\"> name</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> '</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">张三</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\"> age</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#F78C6C\\"> 18</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> }</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">]</span></span></code></pre>\\n</div><ol>\\n<li>Array&lt;类型&gt;写法， 如</li>\\n</ol>\\n<div class=\\"language-ts vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">ts</span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">let</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\"> user2List</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> Array</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">&#x3C;</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\">string</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">></span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\"> [</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">John</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> '</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">Bob</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> '</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">Tony</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">]</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">let</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\"> people2List</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> Array</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">&#x3C;</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\">object</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">></span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\"> [</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">{</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\"> name</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> '</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">张三</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\"> age</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#F78C6C\\"> 18</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> }</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">]</span></span></code></pre>\\n</div><h2 id=\\"_3-3-联合类型\\" tabindex=\\"-1\\">3.3 联合类型 <a class=\\"header-anchor\\" href=\\"#_3-3-联合类型\\" aria-label=\\"Permalink to &quot;3.3 联合类型&quot;\\">&ZeroWidthSpace;</a></h2>\\n<blockquote>\\n<p>组中既有 number 类型，又有 string 类型，这个数组的类型应该如何写?</p>\\n</blockquote>\\n<p>可以用<code>|</code>(竖线)分割多个类型， 如</p>\\n<div class=\\"language-ts vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">ts</span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">let</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\"> str</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> string</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> |</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> number</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#F78C6C\\"> 1</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">str</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> '</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">张三</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span></span></code></pre>\\n</div><p>如果数组中可以是字符串或者数字，则可以这么写</p>\\n<div class=\\"language-ts vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">ts</span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">let</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\"> arr</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> Array</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">&#x3C;</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\">number</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> |</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> string</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">></span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\"> [</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#F78C6C\\">1</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#F78C6C\\"> 2</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> '</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">张三</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">]</span></span></code></pre>\\n</div><h2 id=\\"类型别名\\" tabindex=\\"-1\\">类型别名 <a class=\\"header-anchor\\" href=\\"#类型别名\\" aria-label=\\"Permalink to &quot;类型别名&quot;\\">&ZeroWidthSpace;</a></h2>\\n<blockquote>\\n<p>当一个复杂类型或者联合类型过多或者被频繁使用时，可以通过类型别名来简化该类型的使用</p>\\n</blockquote>\\n<p>用法：<code>type</code> 名称 = 具体类型</p>\\n<div class=\\"language-ts vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">ts</span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">type</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> CustomArray</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> Array</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">&#x3C;</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\">number</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> |</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> string</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">></span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">let</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\"> arr1</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> CustomArray</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\"> [</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#F78C6C\\">1</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#F78C6C\\"> 2</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> '</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">张三</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">]</span></span></code></pre>\\n</div><p>以上代码中，<code>type</code>作为创建自定义类型的关键字</p>\\n<ul>\\n<li>类型别名可以使任意合法的变量名称</li>\\n<li>推荐大驼峰的命名写法</li>\\n</ul>\\n<h2 id=\\"_3-4-函数类型\\" tabindex=\\"-1\\">3.4 函数类型 <a class=\\"header-anchor\\" href=\\"#_3-4-函数类型\\" aria-label=\\"Permalink to &quot;3.4 函数类型&quot;\\">&ZeroWidthSpace;</a></h2>\\n<blockquote>\\n<p>除了变量，我们常见的类型指定还有针对函数的类型声明</p>\\n</blockquote>\\n<p>函数类型需要指的是 <code>函数参数</code>和<code>返回值</code>的类型，这里分为两种写法</p>\\n<ul>\\n<li>第一种： 单独指定参数，返回值类型</li>\\n</ul>\\n<div class=\\"language-ts vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">ts</span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">// 单独指定函数返回值和函数参数</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">function</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\"> add</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">(</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">num1</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> number</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\"> num2</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> number</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">):</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> number</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#89DDFF;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\\">  return</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\"> num1</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> +</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\"> num2</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">}</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">// 指定变量形式的</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">const</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#BABED8\\"> add2</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> (</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">num1</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> number</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\"> num2</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> number</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">):</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> number</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\"> =></span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#89DDFF;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\\">  return</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\"> num1</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> +</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\"> num2</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">}</span></span></code></pre>\\n</div><ul>\\n<li>第二种， 同时指定参数和返回值</li>\\n</ul>\\n<div class=\\"language-ts vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">ts</span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">// 同时指定参数和返回值</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">type</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> CustomFunc</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> (</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">num1</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> number</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\"> num2</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> number</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">)</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\"> =></span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> number</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">const</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#BABED8\\"> add3</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> CustomFunc</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> (</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">num1</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\"> num2</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">)</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\"> =></span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#89DDFF;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\\">  return</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\"> num1</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> +</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\"> num2</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">}</span></span></code></pre>\\n</div><p>注意： 当函数作为表达式时，可以通过类似箭头函数形式的语法来为函数添加类型，这种形式<code>只适用于函数表达式</code></p>\\n<h3 id=\\"void-类型\\" tabindex=\\"-1\\">void 类型 <a class=\\"header-anchor\\" href=\\"#void-类型\\" aria-label=\\"Permalink to &quot;void 类型&quot;\\">&ZeroWidthSpace;</a></h3>\\n<p>当我们的函数定义为没有返回值的类型时，可用关键字<code>void</code>表示</p>\\n<div class=\\"language-ts vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">ts</span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">// 没有返回值的函数</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">type</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> CustomFunc1</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> (</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">num1</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> string</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\"> num2</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> number</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">)</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\"> =></span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> void</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">const</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#BABED8\\"> combinStr</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> CustomFunc1</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> ()</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\"> =></span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {}</span></span></code></pre>\\n</div><p>如果一个函数没有返回值，此时，在 TS 的类型中，应该使用 <code>void</code> 类型</p>\\n<div class=\\"language-ts vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">ts</span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">const</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#BABED8\\"> add4</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> ()</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\"> =></span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {}</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">// 如果什么都不写 表示add4函数的类型为void</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">const</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#BABED8\\"> add5</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> ():</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> void</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\"> =></span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {}</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">// 这种写法明确指定返回值为void与上方的类型相同</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">const</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#BABED8\\"> add6</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> ():</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> undefined</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\"> =></span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#89DDFF;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\\">  return</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#89DDFF\\"> undefined</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">}</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">// 如果指定返回值为undefined  return undefined</span></span></code></pre>\\n</div><h3 id=\\"函数可选参数\\" tabindex=\\"-1\\">函数可选参数 <a class=\\"header-anchor\\" href=\\"#函数可选参数\\" aria-label=\\"Permalink to &quot;函数可选参数&quot;\\">&ZeroWidthSpace;</a></h3>\\n<p>当我们定义函数时，有的参数可传可不传，这种情况下，可以使用 TS 的可选参数来指定类型</p>\\n<p>比如，在使用数组的<code>slice</code>方法时，我们可以直接使用<code>slice()</code> 也可以传入参数 <code>slice(1)</code> 也可以<code>slice(1,3)</code></p>\\n<div class=\\"language-ts vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">ts</span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">const</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#BABED8\\"> slice</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> (</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">start</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#89DDFF\\">?</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> number</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\"> end</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#89DDFF\\">?</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> number</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">):</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> void</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\"> =></span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {}</span></span></code></pre>\\n</div><p><code>?</code> 表示该参数或者变量可传可不传</p>\\n<p>注意：<strong>可选参数只能出现在参数列表的最后</strong>， 即必须参数必须在可选参数之前</p>\\n<h2 id=\\"_3-5-对象类型\\" tabindex=\\"-1\\">3.5 对象类型 <a class=\\"header-anchor\\" href=\\"#_3-5-对象类型\\" aria-label=\\"Permalink to &quot;3.5 对象类型&quot;\\">&ZeroWidthSpace;</a></h2>\\n<p>JS 中的对象是由属性和方法组成的，TS 的对象类型是<strong>对象中属性和方法的描述</strong></p>\\n<p>写法</p>\\n<div class=\\"language-ts vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">ts</span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">// 如果有多个属性 可以换行 去掉间隔符号</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">let</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\"> person3</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">  name</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> string</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#F07178\\">  sayHello</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> Function</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">}</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">  name</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> '</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">王五</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#F07178\\">  sayHello</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">()</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {}</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">}</span></span></code></pre>\\n</div><p>总结： 可是使用<code>{}</code>来描述对象结构</p>\\n<p>属性采用<code>属性名：类型</code>形式</p>\\n<p>函数可以采用 <code>方法名(): 返回值类型</code> 或者 <code>函数名: Function</code>（不指定返回值）的形式</p>\\n<h3 id=\\"使用类型别名\\" tabindex=\\"-1\\">使用类型别名 <a class=\\"header-anchor\\" href=\\"#使用类型别名\\" aria-label=\\"Permalink to &quot;使用类型别名&quot;\\">&ZeroWidthSpace;</a></h3>\\n<p>直接使用<code>{}</code>会降低代码可读性，不具有辨识度，更推荐使用类型别名添加对象类型</p>\\n<div class=\\"language-ts vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">ts</span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">type</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> PersonObj</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">  name</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> string</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#F07178\\">  sayHello</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">():</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> string</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">}</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">const</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\"> p1</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> PersonObj</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">  name</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> '</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">高大大</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#F07178\\">  sayHello</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">()</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#89DDFF;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\\">    return</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#89DDFF\\"> this</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">name</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">  }</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">}</span></span></code></pre>\\n</div><h3 id=\\"带有参数的方法的类型\\" tabindex=\\"-1\\">带有参数的方法的类型 <a class=\\"header-anchor\\" href=\\"#带有参数的方法的类型\\" aria-label=\\"Permalink to &quot;带有参数的方法的类型&quot;\\">&ZeroWidthSpace;</a></h3>\\n<p>如果对象中的函数带有参数，可以在函数中指定参数类型</p>\\n<div class=\\"language-ts vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">ts</span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">// 带参数的函数方法</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">type</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> PersonObj2</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">  name</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> string</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#F07178\\">  sayHello</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">(</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">start</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> number</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">):</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> string</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">}</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">const</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\"> p2</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> PersonObj2</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">  name</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> '</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">高大大</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#F07178\\">  sayHello</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">(</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">start</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">)</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#89DDFF;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\\">    return</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#89DDFF\\"> this</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">name</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">  }</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">}</span></span></code></pre>\\n</div><h3 id=\\"箭头函数形式的方法类型\\" tabindex=\\"-1\\">箭头函数形式的方法类型 <a class=\\"header-anchor\\" href=\\"#箭头函数形式的方法类型\\" aria-label=\\"Permalink to &quot;箭头函数形式的方法类型&quot;\\">&ZeroWidthSpace;</a></h3>\\n<div class=\\"language-ts vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">ts</span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">// 箭头函数形式定义类型</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">type</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> People</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#F07178\\">  sayHello</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> (</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">start</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> number</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">)</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\"> =></span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> string</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">}</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">const</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\"> p3</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> People</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#F07178\\">  sayHello</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">()</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#89DDFF;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\\">    return</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> ''</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">  }</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">}</span></span></code></pre>\\n</div><h3 id=\\"对象可选属性\\" tabindex=\\"-1\\">对象可选属性 <a class=\\"header-anchor\\" href=\\"#对象可选属性\\" aria-label=\\"Permalink to &quot;对象可选属性&quot;\\">&ZeroWidthSpace;</a></h3>\\n<p>对象中的若干属性，有时也是可选的，此时我们依然可以使用<code>?</code>来表示</p>\\n<div class=\\"language-ts vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">ts</span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">type</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> Config</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">  method</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#89DDFF\\">?</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> string</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">  url</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> string</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">}</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">const</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#BABED8\\"> func</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> (</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">config</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> Config</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">)</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\"> =></span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {}</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\">func</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">(</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">{</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\"> url</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> '</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">/a</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> }</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">)</span></span></code></pre>\\n</div><h2 id=\\"_3-7-接口-interface\\" tabindex=\\"-1\\">3.7 接口 interface <a class=\\"header-anchor\\" href=\\"#_3-7-接口-interface\\" aria-label=\\"Permalink to &quot;3.7 接口 interface&quot;\\">&ZeroWidthSpace;</a></h2>\\n<p>当一个对象类型被多次使用时，一般使用接口（interface）描述对象的类型，达到复用的目的</p>\\n<ul>\\n<li>我们使用<code>interface</code>关键字来声明接口</li>\\n<li>接口名称推荐以<code>I</code>为开头</li>\\n<li>声明接口之后，直接使用接口名称作为变量的类型</li>\\n</ul>\\n<blockquote>\\n<p>接口后不需要分号</p>\\n</blockquote>\\n<div class=\\"language-ts vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">ts</span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">// 接口</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">interface</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> IPeople</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">  name</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> string</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">  age</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> number</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#F07178\\">  sayHello</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">():</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> void</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">}</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">let</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\"> p</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> IPeople</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">  name</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> '</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">老高</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">  age</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#F78C6C\\"> 18</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#F07178\\">  sayHello</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">()</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {}</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">}</span></span></code></pre>\\n</div><h3 id=\\"接口和自定义类型的区别\\" tabindex=\\"-1\\">接口和自定义类型的区别 <a class=\\"header-anchor\\" href=\\"#接口和自定义类型的区别\\" aria-label=\\"Permalink to &quot;接口和自定义类型的区别&quot;\\">&ZeroWidthSpace;</a></h3>\\n<p>相同点：都可以给对象指定类型</p>\\n<p>不同点： 接口只能为对象指定类型， 类型别名可以为任意类型指定别名</p>\\n<ul>\\n<li>推荐用 type 来定义</li>\\n</ul>\\n<h3 id=\\"接口继承\\" tabindex=\\"-1\\">接口继承 <a class=\\"header-anchor\\" href=\\"#接口继承\\" aria-label=\\"Permalink to &quot;接口继承&quot;\\">&ZeroWidthSpace;</a></h3>\\n<ul>\\n<li>如果两个接口之间有相同的属性和方法，可以讲<strong>公共的属性和方法抽离出来，通过继承来实现复用</strong></li>\\n</ul>\\n<p>比如，这两个接口都有 x、y 两个属性，重复写两次，可以，但很繁琐</p>\\n<div class=\\"language-ts vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">ts</span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">interface</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> Point2D</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">  x</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> number</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">  y</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> number</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">}</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">interface</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> Point3D</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">  x</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> number</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">  y</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> number</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">  z</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> number</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">}</span></span></code></pre>\\n</div><ul>\\n<li>更好的方式</li>\\n</ul>\\n<div class=\\"language-ts vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">ts</span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">interface</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> Point2D</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">  x</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> number</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">  y</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> number</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">}</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">interface</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> Point3D</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\"> extends</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> Point2D</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">  z</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> number</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">}</span></span></code></pre>\\n</div><p>我们使用<code>extends</code>关键字实现了 Point3D 继承了 Point2D 的所有属性的定义， 同时拥有继承的属性和自身自定义的属性</p>\\n<h3 id=\\"交叉类型\\" tabindex=\\"-1\\">交叉类型 <a class=\\"header-anchor\\" href=\\"#交叉类型\\" aria-label=\\"Permalink to &quot;交叉类型&quot;\\">&ZeroWidthSpace;</a></h3>\\n<p>交叉类型（Intersection Types）：</p>\\n<ul>\\n<li>交叉类似表示需要满足多个类型的条件；</li>\\n<li>交叉类型使用 &amp; 符号</li>\\n</ul>\\n<div class=\\"language-typescript vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">typescript</span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">type</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> MyType</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> nnumber</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> &#x26;</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> string</span></span></code></pre>\\n</div><p><strong>表示同时满足</strong></p>\\n<p><code>应用：</code></p>\\n<div class=\\"language-typescript vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">typescript</span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">interface</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> ISwim</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#F07178\\">  swimming</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> ()</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\"> =></span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> void</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">}</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">interface</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> IFly</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#F07178\\">  flying</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> ()</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\"> =></span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> void</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">}</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">type</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> MyType</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> ISwim</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> &#x26;</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> IFly</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">const</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\"> obj</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> MyType</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#F07178\\">  swimming</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">()</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {},</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#F07178\\">  flying</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">()</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {}</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">}</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#89DDFF;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\\">export</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {}</span></span></code></pre>\\n</div><h2 id=\\"_3-8-类的使用\\" tabindex=\\"-1\\">3.8 类的使用 <a class=\\"header-anchor\\" href=\\"#_3-8-类的使用\\" aria-label=\\"Permalink to &quot;3.8 类的使用&quot;\\">&ZeroWidthSpace;</a></h2>\\n<h3 id=\\"类的定义\\" tabindex=\\"-1\\">类的定义 <a class=\\"header-anchor\\" href=\\"#类的定义\\" aria-label=\\"Permalink to &quot;类的定义&quot;\\">&ZeroWidthSpace;</a></h3>\\n<ul>\\n<li>\\n<p>我们来定义一个 Person 类：</p>\\n</li>\\n<li>\\n<p>使用 class 关键字来定义一个类；</p>\\n</li>\\n<li>\\n<p>我们可以声明一些类的属性：在类的内部声明类的属性以及对应的类型</p>\\n<ul>\\n<li>\\n<p>如果类型没有声明，那么它们默认是 any 的； 我们也可以给属性设置初始化值；</p>\\n</li>\\n<li>\\n<p>在默认的 strictPropertyInitialization 模式下面我们的属性是必须初始化的，如果没有初始化，那么编译时就会报错；</p>\\n<ul>\\n<li>如果我们在 strictPropertyInitialization 模式下确实不希望给属性初始化，可以使用 name!: string 语法；</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li>\\n<p>类可以有自己的构造函数 constructor，当我们通过 new 关键字创建一个 实例时，构造函数会被调用；</p>\\n<ul>\\n<li>构造函数不需要返回任何值，默认返回当前创建出来的实例；</li>\\n</ul>\\n</li>\\n<li>\\n<p>类中可以有自己的函数，定义的函数称之为方法</p>\\n</li>\\n</ul>\\n<div class=\\"language-ts vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">ts</span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">class</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> Person</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">  name</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> string</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">  age</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> number</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">  constructor</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">(</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">name</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> string</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\"> age</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> number</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">)</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#89DDFF\\">    this</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">name</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\"> name</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#89DDFF\\">    this</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">age</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\"> age</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">  }</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#F07178\\">  eating</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">()</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\">    console</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\">log</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#F07178\\">(</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#89DDFF\\">this</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">name</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> +</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> '</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\"> eating</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#F07178\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">  }</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">}</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">const</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\"> p</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#89DDFF\\"> new</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\"> Person</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">(</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">why</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#F78C6C\\"> 18</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\">console</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\">log</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">(</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\">p</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">name</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\">console</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\">log</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">(</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\">p</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">age</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\">p</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\">eating</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">()</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#89DDFF;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\\">export</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {}</span></span></code></pre>\\n</div><h3 id=\\"类的继承\\" tabindex=\\"-1\\">类的继承 <a class=\\"header-anchor\\" href=\\"#类的继承\\" aria-label=\\"Permalink to &quot;类的继承&quot;\\">&ZeroWidthSpace;</a></h3>\\n<ul>\\n<li>面向对象的其中一大特性就是继承，继承不仅仅可以减少我们的代码量，也是多态的使用前提。</li>\\n<li>我们使用 extends 关键字来实现继承，子类中使用 super 来访问父类。</li>\\n<li>我们来看一下 Student 类继承自 Person：\\n<ul>\\n<li>Student 类可以有自己的属性和方法，并且会继承 Person 的属性和方法；</li>\\n<li>在构造函数中，我们可以通过 super 来调用父类的构造方法，对父类中的属性进行初始化类的多态</li>\\n</ul>\\n</li>\\n</ul>\\n<div class=\\"language-ts vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">ts</span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">class</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> Person</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">  name</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> string</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> ''</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">  age</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> number</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#F78C6C\\"> 0</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#F07178\\">  eating</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">()</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\">    console</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\">log</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#F07178\\">(</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">eating</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#F07178\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">  }</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">}</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">class</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> Student</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\"> extends</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> Person</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">  sno</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> number</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#F78C6C\\"> 0</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#F07178\\">  studying</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">()</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\">    console</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\">log</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#F07178\\">(</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">studying</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#F07178\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">  }</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">}</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">const</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\"> stu</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#89DDFF\\"> new</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\"> Student</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">()</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\">stu</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">name</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> '</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">code</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\">stu</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">age</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#F78C6C\\"> 10</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\">console</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\">log</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">(</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\">stu</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">name</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\">console</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\">log</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">(</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\">stu</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">age</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\">stu</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\">eating</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">()</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">//输出</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">//coder</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">//10</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">//eating</span></span></code></pre>\\n</div><div class=\\"language-ts vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">ts</span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">class</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> Person</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">  name</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> string</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">  age</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> number</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">  constructor</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">(</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">name</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> string</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\"> age</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> number</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">)</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#89DDFF\\">    this</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">name</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\"> name</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#89DDFF\\">    this</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">age</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\"> age</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">  }</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#F07178\\">  eating</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">()</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\">    console</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\">log</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#F07178\\">(</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">eating 100行</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#F07178\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">  }</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">}</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">class</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> Student</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\"> extends</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> Person</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">  sno</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> number</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">  constructor</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">(</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">name</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> string</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\"> age</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> number</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\"> sno</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> number</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">)</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">    // super调用父类的构造器</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit\\">    super</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#F07178\\">(</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">name</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\"> age</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#F07178\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#89DDFF\\">    this</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">sno</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\"> sno</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">  }</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#F07178\\">  eating</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">()</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\">    console</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\">log</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#F07178\\">(</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">student eating</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#F07178\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit\\">    super</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\">eating</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#F07178\\">()</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">  }</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#F07178\\">  studying</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">()</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\">    console</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\">log</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#F07178\\">(</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">studying</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#F07178\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">  }</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">}</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">const</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\"> stu</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#89DDFF\\"> new</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\"> Student</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">(</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">why</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#F78C6C\\"> 18</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#F78C6C\\"> 111</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\">console</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\">log</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">(</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\">stu</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">name</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\">console</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\">log</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">(</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\">stu</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">age</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\">console</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\">log</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">(</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\">stu</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">sno</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">)</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\">stu</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\">eating</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">()</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">//输出</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">//why</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">//18</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">//111</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">//student eating</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">//eating 100行</span></span></code></pre>\\n</div><h3 id=\\"类的多态\\" tabindex=\\"-1\\">类的多态 <a class=\\"header-anchor\\" href=\\"#类的多态\\" aria-label=\\"Permalink to &quot;类的多态&quot;\\">&ZeroWidthSpace;</a></h3>\\n<div class=\\"language-ts vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">ts</span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">class</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> Animal</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#F07178\\">  action</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">()</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\">    console</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\">log</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#F07178\\">(</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">animal action</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#F07178\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">  }</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">}</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">class</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> Dog</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\"> extends</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> Animal</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#F07178\\">  action</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">()</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\">    console</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\">log</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#F07178\\">(</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">dog running!!!</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#F07178\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">  }</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">}</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">class</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> Fish</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\"> extends</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> Animal</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#F07178\\">  action</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">()</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\">    console</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\">log</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#F07178\\">(</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">fish swimming</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#F07178\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">  }</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">}</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">class</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> Person</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\"> extends</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> Animal</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {}</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">// animal: dog/fish</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">// 多态的目的是为了写出更加具备通用性的代码</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">function</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\"> makeActions</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">(</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">animals</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> Animal</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">[]</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">)</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\">  animals</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\">forEach</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#F07178\\">(</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">animal</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\"> =></span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\">    animal</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\">action</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#F07178\\">()</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">  }</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#F07178\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">}</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\">makeActions</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">([</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#89DDFF\\">new</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\"> Dog</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">()</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#89DDFF\\"> new</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\"> Fish</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">()</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#89DDFF\\"> new</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\"> Person</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">()])</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#89DDFF;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\\">export</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {}</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">//输出</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">//dog running!!!</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">//fish swimming</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">//animal action</span></span></code></pre>\\n</div><h3 id=\\"类的修饰符\\" tabindex=\\"-1\\">类的修饰符 <a class=\\"header-anchor\\" href=\\"#类的修饰符\\" aria-label=\\"Permalink to &quot;类的修饰符&quot;\\">&ZeroWidthSpace;</a></h3>\\n<ul>\\n<li>\\n<p>在 TypeScript 中，类的属性和方法支持三种修饰符： public、private、protected</p>\\n<ul>\\n<li>\\n<p>public 修饰的是在任何地方可见、公有的属性或方法，默认编写的属性就是 public 的；</p>\\n</li>\\n<li>\\n<p>private 修饰的是仅在同一类中可见、私有的属性或方法；</p>\\n</li>\\n<li>\\n<p>protected 修饰的是仅在类自身及子类中可见、受保护的属性或方法；</p>\\n</li>\\n</ul>\\n</li>\\n<li>\\n<p>public 是默认的修饰符，也是可以直接访问的</p>\\n</li>\\n</ul>\\n<p><code>private</code></p>\\n<div class=\\"language-ts vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">ts</span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">class</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> Person</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">  private</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\"> name</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> string</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> ''</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">  // 封装了两个方法, 通过方法来访问name</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#F07178\\">  getName</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">()</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#89DDFF;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\\">    return</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#89DDFF\\"> this</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">name</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">  }</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#F07178\\">  setName</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">(</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">newName</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">)</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#89DDFF\\">    this</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">name</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\"> newName</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">  }</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">}</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">const</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\"> p</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#89DDFF\\"> new</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\"> Person</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">()</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\">console</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\">log</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">(</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\">p</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\">getName</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">())</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\">p</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\">setName</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">(</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">why</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">)</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#89DDFF;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\\">export</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {}</span></span></code></pre>\\n</div><p><code>protected</code></p>\\n<div class=\\"language-ts vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">ts</span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">// protected: 在类内部和子类中可以访问</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">class</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> Person</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">  protected</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\"> name</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> string</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> '</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">123</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">}</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">class</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> Student</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\"> extends</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> Person</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#F07178\\">  getName</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">()</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#89DDFF;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\\">    return</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#89DDFF\\"> this</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">name</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">  }</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">}</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">const</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\"> stu</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#89DDFF\\"> new</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\"> Student</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">()</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\">console</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\">log</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">(</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\">stu</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\">getName</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">())</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#89DDFF;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\\">export</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {}</span></span></code></pre>\\n</div><p><code>只读属性readonly</code></p>\\n<ul>\\n<li>\\n<p>如果有一个属性我们不希望外界可以任意的修改，只希望确定值后直接使用，那么可以使用 readonly：</p>\\n<div class=\\"language-ts vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">ts</span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">class</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> Person</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">  // 1.只读属性是可以在构造器中赋值, 赋值之后就不可以修改</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">  // 2.属性本身不能进行修改, 但是如果它是对象类型, 对象中的属性是可以修改</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">  readonly</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\"> name</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> string</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">  constructor</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">(</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">name</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> string</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\"> friend</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#89DDFF\\">?</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> Person</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">)</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#89DDFF\\">    this</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">name</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\"> name</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#89DDFF\\">    this</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">friend</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\"> friend</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">  }</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">}</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">const</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\"> p</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#89DDFF\\"> new</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\"> Person</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">(</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">why</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#89DDFF\\"> new</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\"> Person</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">(</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">kobe</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">))</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\">console</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\">log</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">(</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\">p</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">name</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">)</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#89DDFF;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\\">export</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {}</span></span></code></pre>\\n</div></li>\\n</ul>\\n<p><code>getters/setter</code></p>\\n<ul>\\n<li>\\n<p>在前面一些私有属性我们是不能直接访问的，或者某些属性我们想要监听它的获取(getter)和设置(setter)的过程， 这个时候我们可以使用存取器.</p>\\n<div class=\\"language-typescript vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">typescript</span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">class</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> Person</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">  private</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\"> _name</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> string</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">  constructor</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">(</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">name</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> string</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">)</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#89DDFF\\">    this</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">_name</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\"> name</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">  }</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">  // 访问器setter/getter</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">  // setter</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">  set</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#F07178\\"> name</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">(</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">newName</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">)</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#89DDFF\\">    this</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">_name</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\"> newName</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">  }</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">  // getter</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">  get</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#F07178\\"> name</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">()</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#89DDFF;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\\">    return</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#89DDFF\\"> this</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">_name</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">  }</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">}</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">const</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\"> p</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#89DDFF\\"> new</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\"> Person</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">(</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">why</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\">p</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">name</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> '</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">why</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\">console</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\">log</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">(</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\">p</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">name</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">)</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#89DDFF;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\\">export</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {}</span></span></code></pre>\\n</div></li>\\n</ul>\\n<h3 id=\\"类的静态成员\\" tabindex=\\"-1\\">类的静态成员 <a class=\\"header-anchor\\" href=\\"#类的静态成员\\" aria-label=\\"Permalink to &quot;类的静态成员&quot;\\">&ZeroWidthSpace;</a></h3>\\n<ul>\\n<li>\\n<p>在 TypeScript 中通过关键字 static 来定义：</p>\\n<div class=\\"language-typescript vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">typescript</span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">class</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> Student</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">  static</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\"> time</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> string</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> '</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">20:00</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">  static</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#F07178\\"> attendClass</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">()</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\">    console</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\">log</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#F07178\\">(</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">去学习~</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#F07178\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">  }</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">}</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\">console</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\">log</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">(</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\">Student</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">time</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\">Student</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\">attendClass</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">()</span></span></code></pre>\\n</div></li>\\n</ul>\\n<h3 id=\\"类的抽象类\\" tabindex=\\"-1\\">类的抽象类 <a class=\\"header-anchor\\" href=\\"#类的抽象类\\" aria-label=\\"Permalink to &quot;类的抽象类&quot;\\">&ZeroWidthSpace;</a></h3>\\n<ul>\\n<li>\\n<p>我们知道，继承是多态使用的前提。</p>\\n<ul>\\n<li>\\n<p>所以在定义很多通用的调用接口时, 我们通常会让调用者传入父类，通过多态来实现更加灵活的调用方式。</p>\\n</li>\\n<li>\\n<p>但是，父类本身可能并不需要对某些方法进行具体的实现，所以父类中定义的方法,，我们可以定义为抽象方法。</p>\\n</li>\\n</ul>\\n</li>\\n<li>\\n<p>什么是 抽象方法? 在 TypeScript 中没有具体实现的方法(没有方法体)，就是抽象方法。</p>\\n<ul>\\n<li>\\n<p>抽象方法，必须存在于抽象类中；</p>\\n</li>\\n<li>\\n<p>抽象类是使用 abstract 声明的类；</p>\\n</li>\\n</ul>\\n</li>\\n<li>\\n<p>抽象类有如下的特点：</p>\\n<ul>\\n<li>\\n<p>抽象类是不能被实例的话（也就是不能通过 new 创建）</p>\\n</li>\\n<li>\\n<p>抽象方法必须被子类实现，否则该类必须是一个抽象类；</p>\\n</li>\\n</ul>\\n</li>\\n</ul>\\n<div class=\\"language-typescript vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">typescript</span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">function</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\"> makeArea</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">(</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">shape</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> Shape</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">)</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#89DDFF;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\\">  return</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\"> shape</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\">getArea</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#F07178\\">()</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">}</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">abstract</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\"> class</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> Shape</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">  abstract</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#F07178\\"> getArea</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">():</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> number</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">}</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">class</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> Rectangle</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\"> extends</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> Shape</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">  private</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\"> width</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> number</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">  private</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\"> height</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> number</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">  constructor</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">(</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">width</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> number</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\"> height</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> number</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">)</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit\\">    super</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#F07178\\">()</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#89DDFF\\">    this</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">width</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\"> width</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#89DDFF\\">    this</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">height</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\"> height</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">  }</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#F07178\\">  getArea</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">()</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#89DDFF;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\\">    return</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#89DDFF\\"> this</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">width</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> *</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#89DDFF\\"> this</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">height</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">  }</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">}</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">class</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> Circle</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\"> extends</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> Shape</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">  private</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\"> r</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> number</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">  constructor</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">(</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">r</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> number</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">)</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8;--shiki-light-font-style:italic;--shiki-dark-font-style:inherit\\">    super</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#F07178\\">()</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#89DDFF\\">    this</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">r</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\"> r</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">  }</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#F07178\\">  getArea</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">()</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#89DDFF;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\\">    return</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#89DDFF\\"> this</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">r</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> *</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#89DDFF\\"> this</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">r</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> *</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#F78C6C\\"> 3.14</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">  }</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">}</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">const</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\"> rectangle</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#89DDFF\\"> new</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\"> Rectangle</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">(</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#F78C6C\\">20</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#F78C6C\\"> 30</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">const</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\"> circle</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#89DDFF\\"> new</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\"> Circle</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">(</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#F78C6C\\">10</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">)</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\">console</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\">log</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">(</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\">makeArea</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">(</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">rectangle</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">))</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\">console</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\">log</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">(</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\">makeArea</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">(</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">circle</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">))</span></span></code></pre>\\n</div><h2 id=\\"_3-9-元组\\" tabindex=\\"-1\\">3.9 元组 <a class=\\"header-anchor\\" href=\\"#_3-9-元组\\" aria-label=\\"Permalink to &quot;3.9 元组&quot;\\">&ZeroWidthSpace;</a></h2>\\n<p>当我们想定义一个数组中具体索引位置的类型时，可以使用元祖。</p>\\n<blockquote>\\n<p>原有的数组模式只能宽泛的定义数组中的普遍类型，无法精确到位置</p>\\n</blockquote>\\n<p>元组是另一种类型的数组，它确切知道包含多少个元素，以及特定索引对应的类型</p>\\n<div class=\\"language-ts vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">ts</span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">let</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\"> position</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\"> [</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\">number</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> number</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">] </span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\">=</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\"> [</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#F78C6C\\">39.5427</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#F78C6C\\"> 116.2317</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">]</span></span></code></pre>\\n</div><h2 id=\\"_3-10-类型推论\\" tabindex=\\"-1\\">3.10 类型推论 <a class=\\"header-anchor\\" href=\\"#_3-10-类型推论\\" aria-label=\\"Permalink to &quot;3.10 类型推论&quot;\\">&ZeroWidthSpace;</a></h2>\\n<p>在 TS 中，某些没有明确指出类型的地方，<strong>TS 的类型推论机制会帮助提供类型</strong></p>\\n<p>也就是说，由于类型推论的存在，在某些地址类型注解可以省略不写。</p>\\n<ul>\\n<li>发生类型推论的常见场景</li>\\n</ul>\\n<ol>\\n<li>声明变量并初始化时</li>\\n<li>决定函数返回值时</li>\\n</ol>\\n<div class=\\"language-ts vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">ts</span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">// 变量creater_name自动被推断为 string</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">let</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\"> creater_name</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> '</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">gaoly</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">// 函数返回值的类型被自动推断为 number</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">function</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\"> addCount</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">(</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">num1</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> number</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\"> num2</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> number</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">)</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#89DDFF;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\\">  return</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\"> num1</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> +</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\"> num2</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">}</span></span></code></pre>\\n</div><p>推荐：<strong>能省略类型注解的地方就省略</strong>（<s>偷懒</s>，充分利用 TS 类型推论的能力，提升开发效率）</p>\\n<p>技巧：如果不知道类型，可以通过鼠标放在变量名称上，利用 VSCode 的提示来查看类型</p>\\n<h2 id=\\"_3-11-字面量类型\\" tabindex=\\"-1\\">3.11 字面量类型 <a class=\\"header-anchor\\" href=\\"#_3-11-字面量类型\\" aria-label=\\"Permalink to &quot;3.11 字面量类型&quot;\\">&ZeroWidthSpace;</a></h2>\\n<blockquote>\\n<p>下面的代码类型分别是什么？</p>\\n</blockquote>\\n<div class=\\"language-ts vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">ts</span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">// 字面量类型</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">let</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\"> str1</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> '</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">张三</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">const</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\"> str2</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> '</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">张三</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span></span></code></pre>\\n</div><p>通过 TS 的类型推导可以得到答案</p>\\n<p>1.变量 str1 的变量类型为： string</p>\\n<p>2.变量 str2 的变量类型为 '张三'</p>\\n<p>解释：str1 是一个变量(let)，它的值可以是任意字符串，所以类型为:string</p>\\n<p>str2 是一个常量(const)，它的值不能变化只能是 '张三'，所以，它的类型为:'张三'</p>\\n<p>此时，‘张三’就是一个<strong>字面量类型</strong>，即某个特殊的字符串也可以作为 TS 中的类型</p>\\n<p>任意的 JS 字面量（对象，数组，数字）都可以作为类型使用</p>\\n<h3 id=\\"使用场景和模式\\" tabindex=\\"-1\\">使用场景和模式 <a class=\\"header-anchor\\" href=\\"#使用场景和模式\\" aria-label=\\"Permalink to &quot;使用场景和模式&quot;\\">&ZeroWidthSpace;</a></h3>\\n<ul>\\n<li>使用模式：<strong>字面量类型配合联合类型一起使用</strong></li>\\n<li>使用场景：用来表示一组明确的可选值列表</li>\\n<li>比如，在贪吃蛇游戏中，游戏的方向的可选值只能是上、下、左、右中的任意一个</li>\\n</ul>\\n<div class=\\"language-ts vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">ts</span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">type</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> Direction</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> '</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">left</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> |</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> '</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">right</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> |</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> '</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">up</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> |</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> '</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">down</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">// 使用自定义类型:</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">function</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\"> changeDirection</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">(</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">direction</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> Direction</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">)</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\">  console</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\">log</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#F07178\\">(</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">direction</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#F07178\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">}</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">// 调用函数时，会有类型提示：</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\">changeDirection</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">(</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">up</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">)</span></span></code></pre>\\n</div><ul>\\n<li>解释：参数 direction 的值只能是 up/down/left/right 中的任意一个</li>\\n<li>优势：相比于 string 类型，使用字面量类型更加精确、严谨</li>\\n</ul>\\n<h2 id=\\"_3-12-枚举\\" tabindex=\\"-1\\">3.12 枚举 <a class=\\"header-anchor\\" href=\\"#_3-12-枚举\\" aria-label=\\"Permalink to &quot;3.12 枚举&quot;\\">&ZeroWidthSpace;</a></h2>\\n<ul>\\n<li>枚举的功能类似于<strong>字面量类型+联合类型组合</strong>的功能，也可以表示一组明确的可选值</li>\\n<li>枚举：定义一组命名常量。它描述一个值，该值可以是这些命名常量中的一个</li>\\n</ul>\\n<div class=\\"language-ts vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">ts</span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">// 枚举</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">// 创建枚举</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">enum</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> Direction2</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">  Up</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">  Down</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">  Left</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">  Right</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">}</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">// 使用枚举类型</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">function</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\"> changeDirection2</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">(</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">direction</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> Direction2</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">)</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\">  console</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\">log</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#F07178\\">(</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">direction</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#F07178\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">}</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">// 调用函数时，需要应该传入：枚举 Direction 成员的任意一个</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">// 类似于 JS 中的对象，直接通过 点（.）语法 访问枚举的成员</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\">changeDirection2</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">(</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\">Direction2</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">Up</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">)</span></span></code></pre>\\n</div><h3 id=\\"数字枚举\\" tabindex=\\"-1\\">数字枚举 <a class=\\"header-anchor\\" href=\\"#数字枚举\\" aria-label=\\"Permalink to &quot;数字枚举&quot;\\">&ZeroWidthSpace;</a></h3>\\n<ul>\\n<li>问题：我们把枚举成员作为了函数的实参，它的值是什么呢?</li>\\n<li>解释：通过将鼠标移入 Direction.Up，可以看到枚举成员 Up 的值为 0</li>\\n<li>注意：枚举成员是有值的，默认为：从 0 开始自增的数值</li>\\n<li>我们把，枚举成员的值为数字的枚举，称为：<code>数字枚举</code></li>\\n<li>当然，也可以给枚举中的成员初始化值</li>\\n</ul>\\n<div class=\\"language-ts vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">ts</span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">// Down -> 11、Left -> 12、Right -> 13</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">enum</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> Direction</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">  Up</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#F78C6C\\"> 10</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">  Down</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">  Left</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">  Right</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">}</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">enum</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> Direction</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">  Up</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#F78C6C\\"> 2</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">  Down</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#F78C6C\\"> 4</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">  Left</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#F78C6C\\"> 8</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">  Right</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#F78C6C\\"> 16</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">}</span></span></code></pre>\\n</div><h3 id=\\"字符串枚举\\" tabindex=\\"-1\\">字符串枚举 <a class=\\"header-anchor\\" href=\\"#字符串枚举\\" aria-label=\\"Permalink to &quot;字符串枚举&quot;\\">&ZeroWidthSpace;</a></h3>\\n<ul>\\n<li>字符串枚举：枚举成员的值是字符串</li>\\n<li>注意：字符串枚举没有自增长行为，因此，<strong>字符串枚举的每个成员必须有初始值</strong></li>\\n</ul>\\n<div class=\\"language-ts vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">ts</span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">enum</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> Direction</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">  Up</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> '</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">UP</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">  Down</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> '</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">DOWN</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">  Left</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> '</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">LEFT</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">  Right</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> '</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">RIGHT</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">}</span></span></code></pre>\\n</div><h3 id=\\"枚举实现原理\\" tabindex=\\"-1\\">枚举实现原理 <a class=\\"header-anchor\\" href=\\"#枚举实现原理\\" aria-label=\\"Permalink to &quot;枚举实现原理&quot;\\">&ZeroWidthSpace;</a></h3>\\n<ul>\\n<li>枚举是 TS 为数不多的非 JavaScript 类型级扩展(不仅仅是类型)的特性之一</li>\\n<li>因为：其他类型仅仅被当做类型，而枚举不仅用作类型，还提供值(枚举成员都是有值的)</li>\\n<li>也就是说，其他的类型会在编译为 JS 代码时自动移除。但是，<strong>枚举类型会被编译为 JS 代码</strong></li>\\n</ul>\\n<div class=\\"language-ts vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">ts</span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">enum</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> Direction</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">  Up</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> '</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">UP</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">  Down</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> '</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">DOWN</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">  Left</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> '</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">LEFT</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">  Right</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> '</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">RIGHT</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">}</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">// 会被编译为以下 JS 代码：</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">var</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\"> Direction</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">;</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">(</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">function</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> (</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">Direction</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">)</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">  Direction</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#F07178\\">[</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">Up</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#F07178\\">] </span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\">=</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> '</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">UP</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">  Direction</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#F07178\\">[</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">Down</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#F07178\\">] </span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\">=</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> '</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">DOWN</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">  Direction</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#F07178\\">[</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">Left</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#F07178\\">] </span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\">=</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> '</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">LEFT</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">  Direction</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#F07178\\">[</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">Right</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#F07178\\">] </span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\">=</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> '</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">RIGHT</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">}</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">)(</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">Direction</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> ||</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\"> Direction</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {}</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">)</span></span></code></pre>\\n</div><ul>\\n<li>说明：枚举与前面讲到的字面量类型+联合类型组合的功能类似，都用来表示一组明确的可选值列表</li>\\n<li>一般情况下，<strong>推荐使用字面量类型+联合类型组合的方式</strong>，因为相比枚举，这种方式更加直观、简洁、高效</li>\\n</ul>\\n<h2 id=\\"_3-13-any-类型\\" tabindex=\\"-1\\">3.13 any 类型 <a class=\\"header-anchor\\" href=\\"#_3-13-any-类型\\" aria-label=\\"Permalink to &quot;3.13 any 类型&quot;\\">&ZeroWidthSpace;</a></h2>\\n<ul>\\n<li><strong>原则:不推荐使用 any</strong>!这会让 TypeScript 变为 “AnyScript”(失去 TS 类型保护的优势)</li>\\n<li>因为当值的类型为 any 时，可以对该值进行任意操作，并且不会有代码提示</li>\\n</ul>\\n<div class=\\"language-ts vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">ts</span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">let</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\"> obj</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> any</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\"> x</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#F78C6C\\"> 0</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> }</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\">obj</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">bar</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#F78C6C\\"> 100</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\">obj</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">()</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">const</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\"> n</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> number</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\"> obj</span></span></code></pre>\\n</div><ul>\\n<li>解释:以上操作都不会有任何类型错误提示，即使可能存在错误</li>\\n<li>尽可能的避免使用 any 类型，除非临时使用 any 来“避免”书写很长、很复杂的类型</li>\\n<li>其他隐式具有 any 类型的情况\\n<ol>\\n<li>声明变量不提供类型也不提供默认值</li>\\n<li>函数参数不加类型</li>\\n</ol>\\n</li>\\n<li>注意：因为不推荐使用 any，所以，这两种情况下都应该提供类型</li>\\n</ul>\\n<p>在项目开发中，尽量少用 any 类型</p>\\n","date":{"time":1661107860,"string":"2022-08-21 18:51"},"tags":["typescript"],"description":"","cover":""},{"title":"TypeScript 高级类型","url":"/knowledge/FrontEnd/typescript/4-advanced-type","excerpt":"<h1 id=\\"_4-typescript-高级类型\\" tabindex=\\"-1\\">4. TypeScript 高级类型 <a class=\\"header-anchor\\" href=\\"#_4-typescript-高级类型\\" aria-label=\\"Permalink to &quot;4. TypeScript 高级类型&quot;\\">&ZeroWidthSpace;</a></h1>\\n\\n<ClientOnly><ArticleMetadata v-if=\\"($frontmatter?.aside ?? true) \\n        && ($frontmatter?.showArticleMetadata ?? true)\\" :article=\\"$frontmatter\\"\\n        :readTime=\\"1\\" :words=\\"145\\"  /></ClientOnly><h2 id=\\"_4-1-ts-中的类型兼容性\\" tabindex=\\"-1\\">4.1 TS 中的类型兼容性 <a class=\\"header-anchor\\" href=\\"#_4-1-ts-中的类型兼容性\\" aria-label=\\"Permalink to &quot;4.1 TS 中的类型兼容性&quot;\\">&ZeroWidthSpace;</a></h2>\\n<p><a href=\\"https://www.typescriptlang.org/docs/handbook/type-compatibility.html\\" target=\\"_blank\\" rel=\\"noreferrer\\">TS 类型兼容性参考文档</a></p>\\n<p>两种类型系统：1 <strong>Structural Type System(结构化类型系统)</strong> 2 Nominal Type System(标明类型系统)</p>\\n<p><strong>TS 采用的是结构化类型系统，也叫做 duck typing(鸭子类型)，类型检查关注的是值所具有的形状</strong></p>\\n<p>也就是说，在结构类型系统中，如果两个对象具有相同的形状，则认为它们属于同一类型。比如：</p>\\n<div class=\\"language-ts vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">ts</span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">interface</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> Point</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">  x</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> number</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">  y</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> number</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">}</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">interface</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> Point2D</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">  x</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> number</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">  y</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> number</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">}</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">let</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\"> p2</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> Point2D</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">  x</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#F78C6C\\"> 1</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">  y</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#F78C6C\\"> 2</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">}</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">// 不会报错</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">let</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\"> p</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> Point</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\"> p2</span></span></code></pre>\\n</div><p>对于对象类型来说，y 的成员至少与 x 相同，则 x 兼容 y（<strong>成员多的可以赋值给少的</strong>，或者说：只要满足必须的类型就行，多了也没事）</p>\\n<div class=\\"language-ts vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">ts</span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">interface</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> Point2D</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">  x</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> number</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">  y</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> number</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">}</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">interface</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> Point3D</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">  x</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> number</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">  y</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> number</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">  z</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> number</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">}</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">let</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\"> p3</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> Point3D</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">  x</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#F78C6C\\"> 1</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">  y</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#F78C6C\\"> 2</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">  z</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#F78C6C\\"> 3</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">}</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">// 不会报错</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">let</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\"> p2</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#FFCB6B\\"> Point2D</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\"> p3</span></span></code></pre>\\n</div><p>函数类型的类型兼容性比较复杂，需要考虑：1 参数个数 2 返回值类型 等等</p>\\n<ol>\\n<li>\\n<p>参数个数：参数多的兼容参数少的(或者说，</p>\\n<p>参数少的可以赋值给多的</p>\\n<p>)</p>\\n<ul>\\n<li><strong>在 JS 中省略用不到的函数参数实际上是很常见的，这样的使用方式，促成了 TS 中函数类型之间的兼容性</strong></li>\\n</ul>\\n</li>\\n</ol>\\n<div class=\\"language-ts vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">ts</span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">const</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\"> arr</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\"> [</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">a</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> '</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">b</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> '</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">c</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">]</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">// arr.forEach 第一个参数的类型为： (value: string, index: number, array: string[]) => void</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\">arr</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\">forEach</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">(</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">()</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\"> =></span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {}</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\">arr</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\">forEach</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">(</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">item</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\"> =></span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {}</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\">arr</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\">forEach</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">(</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">(</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">item</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\"> index</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">)</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\"> =></span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {}</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">)</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">//</span></span></code></pre>\\n</div>","date":{"time":1661107860,"string":"2022-08-21 18:51"},"tags":["typescript"],"description":"","cover":""},{"title":"vue3 基础概念","url":"/knowledge/FrontEnd/vue3/01-基础/01-basicConcepts","excerpt":"","date":{"time":1661107860,"string":"2022-08-21 18:51"},"tags":["vue3"],"description":"","cover":""},{"title":"vue-cli","url":"/knowledge/FrontEnd/vue3/01-基础/02-vue-cli","excerpt":"","date":{"time":1661107860,"string":"2022-08-21 18:51"},"tags":["vue3"],"description":"","cover":""},{"title":"vue基础用法与模板语法","url":"/knowledge/FrontEnd/vue3/01-基础/03-basicUsageAndTemplateSyntax","excerpt":"","date":{"time":1661107860,"string":"2022-08-21 18:51"},"tags":["vue3"],"description":"","cover":""},{"title":"vue基本指令","url":"/knowledge/FrontEnd/vue3/01-基础/04-basicinStruction","excerpt":"","date":{"time":1661107860,"string":"2022-08-21 18:51"},"tags":["vue3"],"description":"","cover":""},{"title":"v-bind和v-on","url":"/knowledge/FrontEnd/vue3/01-基础/05-v-bindAndv-on","excerpt":"","date":{"time":1661107860,"string":"2022-08-21 18:51"},"tags":["vue3"],"description":"","cover":""},{"title":"条件渲染","url":"/knowledge/FrontEnd/vue3/01-基础/06-conditionalRendering","excerpt":"","date":{"time":1661107860,"string":"2022-08-21 18:51"},"tags":["vue3"],"description":"","cover":""},{"title":"列表渲染","url":"/knowledge/FrontEnd/vue3/01-基础/07-listRendering","excerpt":"","date":{"time":1661107860,"string":"2022-08-21 18:51"},"tags":["vue3"],"description":"","cover":""},{"title":"计算属性","url":"/knowledge/FrontEnd/vue3/01-基础/08-calculationProperties","excerpt":"","date":{"time":1661107860,"string":"2022-08-21 18:51"},"tags":["vue3"],"description":"","cover":""},{"title":"侦听器 watch","url":"/knowledge/FrontEnd/vue3/01-基础/09-watch","excerpt":"","date":{"time":1661107860,"string":"2022-08-21 18:51"},"tags":["vue3"],"description":"","cover":""},{"title":"v-model","url":"/knowledge/FrontEnd/vue3/01-基础/10-v-model","excerpt":"","date":{"time":1661107860,"string":"2022-08-21 18:51"},"tags":["vue3"],"description":"","cover":""},{"title":"组件化基础","url":"/knowledge/FrontEnd/vue3/01-基础/11-componentFoundationt","excerpt":"","date":{"time":1661107860,"string":"2022-08-21 18:51"},"tags":["vue3"],"description":"","cover":""},{"title":"Composition API","url":"/knowledge/FrontEnd/vue3/01-基础/13-compositionApi","excerpt":"","date":{"time":1661107860,"string":"2022-08-21 18:51"},"tags":["vue3"],"description":"","cover":""},{"title":"补充","url":"/knowledge/FrontEnd/vue3/01-基础/14-supplement","excerpt":"","date":{"time":1661107860,"string":"2022-08-21 18:51"},"tags":["vue3"],"description":"","cover":""},{"title":"pinia","url":"/knowledge/FrontEnd/vue3/02-相关生态/pinia","excerpt":"","date":{"time":1661107860,"string":"2022-08-21 18:51"},"tags":["pinia"],"description":"","cover":""},{"title":"vue-router","url":"/knowledge/FrontEnd/vue3/02-相关生态/vue-router","excerpt":"<h2 id=\\"路由介绍\\" tabindex=\\"-1\\">路由介绍 <a class=\\"header-anchor\\" href=\\"#路由介绍\\" aria-label=\\"Permalink to &quot;路由介绍&quot;\\">&ZeroWidthSpace;</a></h2>\\n<h2 id=\\"_1-1-什么是前端路由\\" tabindex=\\"-1\\">1.1  什么是前端路由 <a class=\\"header-anchor\\" href=\\"#_1-1-什么是前端路由\\" aria-label=\\"Permalink to &quot;1.1  什么是前端路由&quot;\\">&ZeroWidthSpace;</a></h2>\\n<ul>\\n<li>路由其实是网络工程中的一个术语：\\n<ul>\\n<li>在架构一个网络时，非常重要的两个设备就是路由器和交换机。</li>\\n<li>当然，目前在我们生活中路由器也是越来越被大家所熟知，因为我们生活中都会用到路由器：</li>\\n<li>事实上，路由器主要维护的是一个映射表；</li>\\n<li>映射表会决定数据的流向；</li>\\n</ul>\\n</li>\\n<li>路由的概念在软件工程中出现，最早是在后端路由中实现的，原因是web的发展主要经历了这样一些阶段：\\n<ul>\\n<li>后端路由阶段；</li>\\n<li>前后端分离阶段；</li>\\n<li>单页面富应用（SPA）；</li>\\n</ul>\\n</li>\\n</ul>\\n<h2 id=\\"_1-2-url的hash\\" tabindex=\\"-1\\">1.2 URL的hash <a class=\\"header-anchor\\" href=\\"#_1-2-url的hash\\" aria-label=\\"Permalink to &quot;1.2 URL的hash&quot;\\">&ZeroWidthSpace;</a></h2>\\n<ul>\\n<li>\\n<p>URL的hash</p>\\n<ul>\\n<li>\\n<p>URL的hash也就是锚点(#), 本质上是改变<code>window.location</code>的<code>href</code>属性；</p>\\n</li>\\n<li>\\n<p>我们可以通过直接赋值<code>location.hash</code>来改变<code>href</code>, 但是页面不发生刷新；</p>\\n</li>\\n</ul>\\n</li>\\n</ul>\\n<div class=\\"language-html vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">html</span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">&#x3C;!</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">DOCTYPE</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#C792EA\\"> html</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">></span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">&#x3C;</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">html</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#C792EA\\"> lang</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">=</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">en</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">></span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">&#x3C;</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">head</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">></span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">  &#x3C;</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">meta</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#C792EA\\"> charset</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">=</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">UTF-8</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">></span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">  &#x3C;</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">meta</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#C792EA\\"> http-equiv</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">=</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">X-UA-Compatible</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#C792EA\\"> content</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">=</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">IE=edge</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">></span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">  &#x3C;</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">meta</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#C792EA\\"> name</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">=</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">viewport</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#C792EA\\"> content</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">=</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">width=device-width, initial-scale=1.0</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">></span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">  &#x3C;</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">title</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">></span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">Document</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">&#x3C;/</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">title</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">></span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">&#x3C;/</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">head</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">></span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">&#x3C;</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">body</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">></span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">  </span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">  &#x3C;</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">div</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#C792EA\\"> id</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">=</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">app</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">></span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">    &#x3C;</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">a</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#C792EA\\"> href</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">=</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">#/home</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">></span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">home</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">&#x3C;/</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">a</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">></span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">    &#x3C;</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">a</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#C792EA\\"> href</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">=</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">#/about</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">></span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">about</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">&#x3C;/</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">a</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">></span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">    &#x3C;</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">div</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#C792EA\\"> class</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">=</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">content</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">></span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">Default</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">&#x3C;/</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">div</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">></span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">  &#x3C;/</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">div</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">></span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">  &#x3C;</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">script</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">></span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">    const</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\"> contentEl</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\"> document</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\">querySelector</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">(</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">.content</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">)</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\">    window</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\">addEventListener</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">(</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">hashchange</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> ()</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\"> =></span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#89DDFF;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\\">      switch</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#F07178\\">(</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\">location</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">hash</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#F07178\\">) </span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">{</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#89DDFF;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\\">        case</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> \\"</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">#/home</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\">          contentEl</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">innerHTML</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> \\"</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">Home</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#89DDFF;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\\">          break</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#89DDFF;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\\">        case</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> \\"</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">#/about</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\">          contentEl</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">innerHTML</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> \\"</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">About</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#89DDFF;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\\">          break</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#89DDFF;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\\">        default</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\">          contentEl</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">innerHTML</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> \\"</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">Default</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">      }</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">    }</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">  &#x3C;/</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">script</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">></span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">&#x3C;/</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">body</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">></span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">&#x3C;/</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">html</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">></span></span></code></pre>\\n</div><h2 id=\\"_1-3-html5的history\\" tabindex=\\"-1\\">1.3 HTML5的History <a class=\\"header-anchor\\" href=\\"#_1-3-html5的history\\" aria-label=\\"Permalink to &quot;1.3 HTML5的History&quot;\\">&ZeroWidthSpace;</a></h2>\\n<ul>\\n<li>history接口是HTML5新增的, 它有六种模式改变URL而不刷新页面：\\n<ul>\\n<li><code>replaceState</code>：替换原来的路径；</li>\\n<li><code>pushState</code>：使用新的路径；</li>\\n<li><code>popState</code>：路径的回退；</li>\\n<li><code>go</code>：向前或向后改变路径；</li>\\n<li><code>forward</code>：向前改变路径；</li>\\n<li><code>back</code>：向后改变路径；</li>\\n</ul>\\n</li>\\n</ul>\\n<div class=\\"language-html vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">html</span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">&#x3C;!</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">DOCTYPE</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#C792EA\\"> html</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">></span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">&#x3C;</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">html</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#C792EA\\"> lang</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">=</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">en</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">></span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">&#x3C;</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">head</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">></span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">  &#x3C;</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">meta</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#C792EA\\"> charset</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">=</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">UTF-8</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">></span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">  &#x3C;</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">meta</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#C792EA\\"> http-equiv</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">=</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">X-UA-Compatible</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#C792EA\\"> content</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">=</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">IE=edge</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">></span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">  &#x3C;</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">meta</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#C792EA\\"> name</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">=</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">viewport</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#C792EA\\"> content</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">=</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">width=device-width, initial-scale=1.0</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">></span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">  &#x3C;</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">title</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">></span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">Document</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">&#x3C;/</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">title</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">></span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">&#x3C;/</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">head</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">></span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">&#x3C;</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">body</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">></span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">  &#x3C;</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">div</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#C792EA\\"> id</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">=</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">app</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">></span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">    &#x3C;</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">a</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#C792EA\\"> href</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">=</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">/home</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">></span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">home</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">&#x3C;/</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">a</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">></span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">    &#x3C;</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">a</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#C792EA\\"> href</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">=</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">/about</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">></span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">about</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">&#x3C;/</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">a</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">></span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">    &#x3C;</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">div</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#C792EA\\"> class</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">=</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">content</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">></span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">Default</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">&#x3C;/</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">div</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">></span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">  &#x3C;/</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">div</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">></span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">  &#x3C;</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">script</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">></span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">    const</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\"> contentEl</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\"> document</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\">querySelector</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">(</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">.content</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">)</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">;</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">    const</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#BABED8\\"> changeContent</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> ()</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\"> =></span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\">      console</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\">log</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#F07178\\">(</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span></span></code></pre>\\n</div>","date":{"time":1661107860,"string":"2022-08-21 18:51"},"tags":["vue-router"],"description":"","cover":""},{"title":"vuex","url":"/knowledge/FrontEnd/vue3/02-相关生态/vuex","excerpt":"","date":{"time":1661107860,"string":"2022-08-21 18:51"},"tags":["vuex"],"description":"","cover":""},{"title":"webpack","url":"/knowledge/build-tools/01-webpack/01-basic","excerpt":"","date":{"time":1661107860,"string":"2022-08-21 18:51"},"tags":["webpack"],"description":"","cover":""},{"title":"webpack的使用步骤","url":"/knowledge/build-tools/01-webpack/02-useSteps","excerpt":"","date":{"time":1661107860,"string":"2022-08-21 18:51"},"tags":["webpack"],"description":"","cover":""},{"title":"webpack的配置","url":"/knowledge/build-tools/01-webpack/03-config","excerpt":"","date":{"time":1661107860,"string":"2022-08-21 18:51"},"tags":["webpack"],"description":"","cover":""},{"title":"webpack 开发服务器","url":"/knowledge/build-tools/01-webpack/04-webpackService","excerpt":"","date":{"time":1661107860,"string":"2022-08-21 18:51"},"tags":["webpack"],"description":"","cover":""},{"title":"补充","url":"/knowledge/build-tools/01-webpack/05-support","excerpt":"","date":{"time":1661107860,"string":"2022-08-21 18:51"},"tags":["webpack"],"description":"","cover":""},{"title":"什么是 vite","url":"/knowledge/build-tools/02-vite/01-basic","excerpt":"","date":{"time":1661107860,"string":"2022-08-21 18:51"},"tags":["vite"],"description":"","cover":""},{"title":"vite 的安装和使用","url":"/knowledge/build-tools/02-vite/02-installUse","excerpt":"","date":{"time":1661107860,"string":"2022-08-21 18:51"},"tags":["vite"],"description":"","cover":""},{"title":"vite 的支持","url":"/knowledge/build-tools/02-vite/03-support","excerpt":"","date":{"time":1661107860,"string":"2022-08-21 18:51"},"tags":["vite"],"description":"","cover":""},{"title":"vite打包项目","url":"/knowledge/build-tools/02-vite/04-build","excerpt":"","date":{"time":1661107860,"string":"2022-08-21 18:51"},"tags":["vite"],"description":"","cover":""},{"title":"ESBuild","url":"/knowledge/build-tools/02-vite/05-esBuild","excerpt":"","date":{"time":1661107860,"string":"2022-08-21 18:51"},"tags":["vite","ESBuild"],"description":"","cover":""},{"title":"代码规范","url":"/knowledge/build-tools/project-build/01-code-specification","excerpt":"<h2 id=\\"一-代码规范\\" tabindex=\\"-1\\">一. 代码规范 <a class=\\"header-anchor\\" href=\\"#一-代码规范\\" aria-label=\\"Permalink to &quot;一. 代码规范&quot;\\">&ZeroWidthSpace;</a></h2>\\n<h2 id=\\"_1-1-集成editorconfig配置\\" tabindex=\\"-1\\">1.1. 集成editorconfig配置 <a class=\\"header-anchor\\" href=\\"#_1-1-集成editorconfig配置\\" aria-label=\\"Permalink to &quot;1.1. 集成editorconfig配置&quot;\\">&ZeroWidthSpace;</a></h2>\\n<p>EditorConfig 有助于为不同 IDE 编辑器上处理同一项目的多个开发人员维护一致的编码风格。</p>\\n<div class=\\"language-yaml vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">yaml</span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\"># http://editorconfig.org</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">root = true</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">[</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">*</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">]</span><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\"> # 表示所有文件适用</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">charset = utf-8</span><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\"> # 设置文件字符集为 utf-8</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">indent_style = space</span><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\"> # 缩进风格（tab | space）</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">indent_size = 2</span><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\"> # 缩进大小</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">end_of_line = lf</span><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\"> # 控制换行类型(lf | cr | crlf)</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">trim_trailing_whitespace = true</span><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\"> # 去除行首的任意空白字符</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">insert_final_newline = true</span><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\"> # 始终在文件末尾插入一个新行</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">[</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#89DDFF;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic\\">*</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">.md</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">]</span><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\"> # 表示仅 md 文件适用以下规则</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">max_line_length = off</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">trim_trailing_whitespace = false</span></span></code></pre>\\n</div><p>VSCode需要安装一个插件：EditorConfig for VS Code</p>\\n<p><img src=\\"./images/008i3skNgy1gsq2gh989yj30pj05ggmb.jpg\\" alt=\\"image-20210722215138665\\" loading=\\"lazy\\"></p>\\n<h2 id=\\"_1-2-使用prettier工具\\" tabindex=\\"-1\\">1.2. 使用prettier工具 <a class=\\"header-anchor\\" href=\\"#_1-2-使用prettier工具\\" aria-label=\\"Permalink to &quot;1.2. 使用prettier工具&quot;\\">&ZeroWidthSpace;</a></h2>\\n<p>Prettier 是一款强大的代码格式化工具，支持 JavaScript、TypeScript、CSS、SCSS、Less、JSX、Angular、Vue、GraphQL、JSON、Markdown 等语言，基本上前端能用到的文件格式它都可以搞定，是当下最流行的代码格式化工具。</p>\\n<p><a href=\\"https://www.prettier.cn/\\" target=\\"_blank\\" rel=\\"noreferrer\\"><code>prettier</code> 中文官网</a></p>\\n<p>1.安装prettier</p>\\n<div class=\\"language-shell vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">shell</span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#FFCB6B\\">npm</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\"> install</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\"> prettier</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#C3E88D\\"> -D</span></span></code></pre>\\n</div><p>2.配置.prettierrc文件：</p>\\n<ul>\\n<li>useTabs：使用tab缩进还是空格缩进，选择false；</li>\\n<li>tabWidth：tab是空格的情况下，是几个空格，选择2个；</li>\\n<li>printWidth：当行字符的长度，推荐80，也有人喜欢100或者120；</li>\\n<li>singleQuote：使用单引号还是双引号，选择true，使用单引号；</li>\\n<li>trailingComma：在多行输入的尾逗号是否添加，设置为 <code>none</code>；</li>\\n<li>semi：语句末尾是否要加分号，默认值true，选择false表示不加；</li>\\n</ul>\\n<div class=\\"language-json vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">json</span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">{</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#89DDFF\\">  \\"</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#C792EA\\">useTabs</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#89DDFF\\"> false</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#89DDFF\\">  \\"</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#C792EA\\">tabWidth</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#F78C6C\\"> 2</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#89DDFF\\">  \\"</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#C792EA\\">printWidth</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#F78C6C\\"> 80</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#89DDFF\\">  \\"</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#C792EA\\">singleQuote</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#89DDFF\\"> true</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#89DDFF\\">  \\"</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#C792EA\\">trailingComma</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> \\"</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">none</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#89DDFF\\">  \\"</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#C792EA\\">semi</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#89DDFF\\"> false</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">}</span></span></code></pre>\\n</div><p>3.创建.prettierignore忽略文件</p>\\n<div class=\\"language- vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\"></span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span>/dist/*</span></span>\\n<span class=\\"line\\"><span>.local</span></span>\\n<span class=\\"line\\"><span>.output.js</span></span>\\n<span class=\\"line\\"><span>/node_modules/**</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>**/*.svg</span></span>\\n<span class=\\"line\\"><span>**/*.sh</span></span>\\n<span class=\\"line\\"><span></span></span>\\n<span class=\\"line\\"><span>/public/*</span></span></code></pre>\\n</div><p>4.VSCode需要安装prettier的插件</p>\\n<p><img src=\\"./images/008i3skNgy1gsq2acx21rj30ow057mxp.jpg\\" alt=\\"image-20210722214543454\\" loading=\\"lazy\\"></p>\\n<p>5.测试prettier是否生效</p>\\n<ul>\\n<li>测试一：在代码中保存代码；</li>\\n<li>测试二：配置一次性修改的命令；</li>\\n</ul>\\n<p>在package.json中配置一个scripts：</p>\\n<div class=\\"language-json vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">json</span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">    \\"</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">prettier</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">: </span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">prettier --write .</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span></span></code></pre>\\n</div><h2 id=\\"_1-3-使用eslint检测\\" tabindex=\\"-1\\">1.3. 使用ESLint检测 <a class=\\"header-anchor\\" href=\\"#_1-3-使用eslint检测\\" aria-label=\\"Permalink to &quot;1.3. 使用ESLint检测&quot;\\">&ZeroWidthSpace;</a></h2>\\n<p>在前面创建项目的时候，我们就选择了ESLint，所以Vue会默认帮助我们配置需要的ESLint环境。</p>\\n<p><code>.eslintrc.js配置文件</code></p>\\n<div class=\\"language-js vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">js</span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#89DDFF\\">module</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#89DDFF\\">exports</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">  // 表示当前目录即为根目录，ESLint 规则将被限制到该目录下</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">  root</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#FF9CAC\\"> true</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">  // env 表示启用 ESLint 检测的环境</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">  env</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">    // 在 node 环境下启动 ESLint 检测</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">    node</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#FF9CAC\\"> true</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">  },</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">  // ESLint 中基础配置需要继承的配置</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">  extends</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\"> [</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">plugin:vue/vue3-essential</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> \\"</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">@vue/standard</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">]</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">  // 解析器</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">  parserOptions</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">    parser</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> \\"</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">babel-eslint</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">  },</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">  // 需要修改的启用规则及其各自的错误级别</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">  /**</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">   * 错误级别分为三种：</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">   * \\"off\\" 或 0 - 关闭规则</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">   * \\"warn\\" 或 1 - 开启规则，使用警告级别的错误：warn (不会导致程序退出)</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">   * \\"error\\" 或 2 - 开启规则，使用错误级别的错误：error (当被触发的时候，程序会退出)</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\">   */</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#E06C75;--shiki-dark:#F07178\\">  rules</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">    \\"</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#F07178\\">no-console</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\"> process</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\">env</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">NODE_ENV</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> ===</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> \\"</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">production</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#89DDFF\\"> ?</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> \\"</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">warn</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#89DDFF\\"> :</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> \\"</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">off</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">    \\"</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#F07178\\">no-debugger</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">:</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\"> process</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#E5C07B;--shiki-dark:#BABED8\\">env</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">.</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">NODE_ENV</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> ===</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> \\"</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">production</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#89DDFF\\"> ?</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> \\"</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">warn</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#89DDFF\\"> :</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> \\"</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">off</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">  }</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">};</span></span></code></pre>\\n</div><p><strong>修改 <code>ESLint</code> 的验证规则：</strong></p>\\n<ol>\\n<li>\\n<p>在 <code>.eslintrc.js</code> 文件中，新增一条验证规则</p>\\n<div class=\\"language-json vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">json</span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">quotes</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">: </span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">error</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\"> // 默认</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">quotes</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">: </span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">warn</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\"> // 修改为警告</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">quotes</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">: </span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">off</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#7F848E;--shiki-dark:#676E95;--shiki-light-font-style:italic;--shiki-dark-font-style:italic\\"> // 修改不校验</span></span></code></pre>\\n</div></li>\\n</ol>\\n<p>2.VSCode需要安装ESLint插件：</p>\\n<p><img src=\\"./images/008i3skNgy1gsq2oq26odj30pw05faaq.jpg\\" alt=\\"image-20210722215933360\\" loading=\\"lazy\\"></p>\\n<p>3.解决eslint和prettier冲突的问题：</p>\\n<p>安装插件：（vue在创建项目时，如果选择prettier，那么这两个插件会自动安装）</p>\\n<div class=\\"language-shell vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">shell</span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#FFCB6B\\">npm</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\"> i</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\"> eslint-plugin-prettier</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\"> eslint-config-prettier</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#C3E88D\\"> -D</span></span></code></pre>\\n</div><p>添加prettier插件：</p>\\n<div class=\\"language-json vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">json</span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">  extends: </span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">[</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">    \\"</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">plugin:vue/vue3-essential</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">    \\"</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">eslint:recommended</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">    \\"</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">@vue/typescript/recommended</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">    \\"</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">@vue/prettier</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">    \\"</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">@vue/prettier/@typescript-eslint</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">,</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#FFFFFF;--shiki-dark:#BABED8\\">    'plugin:prettier/recommended'</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\">  ]</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">,</span></span></code></pre>\\n</div><p><code>prettier</code> 和 <code>ESLint</code> 的其他冲突问题。</p>\\n<ol>\\n<li>\\n<p>打开 <code>.eslintrc.js</code> 配置文件</p>\\n</li>\\n<li>\\n<p>在 <code>rules</code> 规则下，新增一条规则</p>\\n<div class=\\"language-json vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">json</span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">'space-before-function-paren': 'off'</span></span></code></pre>\\n</div></li>\\n<li>\\n<p>该规则表示关闭《方法名后增加空格》的规则</p>\\n</li>\\n</ol>\\n<h2 id=\\"_1-4-git-husky和eslint\\" tabindex=\\"-1\\">1.4. git Husky和eslint <a class=\\"header-anchor\\" href=\\"#_1-4-git-husky和eslint\\" aria-label=\\"Permalink to &quot;1.4. git Husky和eslint&quot;\\">&ZeroWidthSpace;</a></h2>\\n<p>虽然我们已经要求项目使用eslint了，但是不能保证组员提交代码之前都将eslint中的问题解决掉了：</p>\\n<ul>\\n<li>\\n<p>也就是我们希望保证代码仓库中的代码都是符合eslint规范的；</p>\\n</li>\\n<li>\\n<p>那么我们需要在组员执行 <code>git commit </code> 命令的时候对其进行校验，如果不符合eslint规范，那么自动通过规范进行修复；</p>\\n</li>\\n</ul>\\n<p>那么如何做到这一点呢？可以通过Husky工具：</p>\\n<ul>\\n<li>husky是一个git hook工具，可以帮助我们触发git提交的各个阶段：pre-commit、commit-msg、pre-push</li>\\n</ul>\\n<p>如何使用husky呢？</p>\\n<p>这里我们可以使用自动配置命令：</p>\\n<div class=\\"language-shell vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">shell</span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#FFCB6B\\">npx</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\"> husky-init</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> &#x26;&#x26;</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#FFCB6B\\"> npm</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\"> install</span></span></code></pre>\\n</div><p>这里会做三件事：</p>\\n<p>1.安装husky相关的依赖：</p>\\n<p><code>限定版本：</code></p>\\n<div class=\\"language-shell vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">shell</span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#FFCB6B\\">npm</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\"> install</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\"> husky@7.0.1</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#C3E88D\\"> --save-dev</span></span></code></pre>\\n</div><p><code>直接安装</code></p>\\n<div class=\\"language-shell vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">shell</span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#FFCB6B\\">npm</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\"> install</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\"> husky</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#C3E88D\\"> --save-dev</span></span></code></pre>\\n</div><p><img src=\\"./images/008i3skNgy1gsqq0o5jxmj30bb04qwen.jpg\\" alt=\\"image-20210723112648927\\" loading=\\"lazy\\"></p>\\n<p>2.在项目目录下创建 <code>.husky</code> 文件夹：</p>\\n<div class=\\"language- vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\"></span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span>npx huksy install</span></span></code></pre>\\n</div><p><img src=\\"./images/008i3skNgy1gsqq16zo75j307703mt8m.jpg\\" alt=\\"image-20210723112719634\\" loading=\\"lazy\\"></p>\\n<p>3.在 <code>package.json</code> 中生成 <code>prepare</code> 指令（ <strong>需要 npm &gt; 7.0 版本</strong> ）：</p>\\n<div class=\\"language-shell vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">shell</span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#FFCB6B\\">npm</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\"> set-script</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\"> prepare</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> \\"</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">husky install</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\\"</span></span></code></pre>\\n</div><p><img src=\\"./images/008i3skNgy1gsqq26phpxj30dj06fgm3.jpg\\" alt=\\"image-20210723112817691\\" loading=\\"lazy\\"></p>\\n<p>接下来，我们需要去完成一个操作：在进行commit时，执行lint脚本：</p>\\n<ol>\\n<li>\\n<p>执行 <code>npx husky add .husky/pre-commit &quot;npx eslint --ext .js,.vue src&quot;</code> 添加 <code>commit</code> 时的 <code>hook</code> （<code>npx eslint --ext .js,.vue src</code> 会在执行到该 hook 时运行）</p>\\n</li>\\n<li>\\n<p>该操作会生成对应文件 <code>pre-commit</code>：</p>\\n</li>\\n</ol>\\n<p><img src=\\"./images/008i3skNgy1gsqq3hn229j30nf04z74q.jpg\\" alt=\\"image-20210723112932943\\" loading=\\"lazy\\"></p>\\n<p>这个时候我们执行git commit的时候会自动对代码进行lint校验。</p>\\n<h2 id=\\"_1-5-git-commit规范\\" tabindex=\\"-1\\">1.5. git commit规范 <a class=\\"header-anchor\\" href=\\"#_1-5-git-commit规范\\" aria-label=\\"Permalink to &quot;1.5. git commit规范&quot;\\">&ZeroWidthSpace;</a></h2>\\n<h3 id=\\"_1-5-1-代码提交风格\\" tabindex=\\"-1\\">1.5.1. 代码提交风格 <a class=\\"header-anchor\\" href=\\"#_1-5-1-代码提交风格\\" aria-label=\\"Permalink to &quot;1.5.1. 代码提交风格&quot;\\">&ZeroWidthSpace;</a></h3>\\n<p>通常我们的git commit会按照统一的风格来提交，这样可以快速定位每次提交的内容，方便之后对版本进行控制。</p>\\n<p><img src=\\"./images/008i3skNgy1gsqw17gaqjj30to0cj3zp.jpg\\" alt=\\"\\" loading=\\"lazy\\"></p>\\n<p>但是如果每次手动来编写这些是比较麻烦的事情，我们可以使用一个工具：Commitizen</p>\\n<ul>\\n<li>Commitizen 是一个帮助我们编写规范 commit message 的工具；</li>\\n</ul>\\n<p>1.安装Commitizen</p>\\n<div class=\\"language-shell vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">shell</span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#FFCB6B\\">npm</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\"> install</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#C3E88D\\"> -g</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\"> commitizen@4.2.4</span></span></code></pre>\\n</div><div class=\\"tip custom-block\\"><p class=\\"custom-block-title\\">TIP</p>\\n<p>使用自定义提交风格的话,不需要执行下一步。直接按照<a href=\\"###1.5.2自定义提交风格\\">1.5.2</a>的步骤即可。</p>\\n</div>\\n<p>2.安装cz-conventional-changelog，并且初始化cz-conventional-changelog：</p>\\n<div class=\\"language-shell vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">shell</span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#FFCB6B\\">npx</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\"> commitizen</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\"> init</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\"> cz-conventional-changelog</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#C3E88D\\"> --save-dev</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#C3E88D\\"> --save-exact</span></span></code></pre>\\n</div><p>这个命令会帮助我们安装cz-conventional-changelog：</p>\\n<p><img src=\\"./images/008i3skNgy1gsqvz2odi4j30ek00zmx2.jpg\\" alt=\\"image-20210723145249096\\" loading=\\"lazy\\"></p>\\n<p>并且在package.json中进行配置：</p>\\n<p><img src=\\"./images/008i3skNgy1gsqvzftay5j30iu04k74d.jpg\\" alt=\\"\\" loading=\\"lazy\\"></p>\\n<p>这个时候我们提交代码需要使用 <code>npx cz</code>：</p>\\n<ul>\\n<li>第一步是选择type，本次更新的类型</li>\\n</ul>\\n<p>| Type     | 作用                                                         |\\n|</p>\\n","date":{"time":1661107860,"string":"2022-08-21 18:51"},"description":"","cover":""},{"title":"第三方库集成","url":"/knowledge/build-tools/project-build/02-third-party-library-integration","excerpt":"","date":{"time":1661107860,"string":"2022-08-21 18:51"},"description":"","cover":""},{"title":"默认配置","url":"/knowledge/build-tools/project-build/03-default-configuration","excerpt":"","date":{"time":1661107860,"string":"2022-08-21 18:51"},"description":"","cover":""},{"title":"Axios","url":"/knowledge/build-tools/project-build/axios","excerpt":"","date":{"time":1661107860,"string":"2022-08-21 18:51"},"tags":["axios","http"],"description":"","cover":""},{"title":"Babel","url":"/knowledge/build-tools/project-build/babel","excerpt":"","date":{"time":1661107860,"string":"2022-08-21 18:51"},"description":"","cover":""},{"title":"个人 SQL 优化技巧","url":"/blogs/2023/03/04/个人SQL优化技巧","author":"查尔斯","isOriginal":false,"isTop":true,"excerpt":"<h1 id=\\"个人-sql-优化技巧\\" tabindex=\\"-1\\">个人 SQL 优化技巧 <Badge text=\\"持续更新\\" type=\\"warning\\" /> <a class=\\"header-anchor\\" href=\\"#个人-sql-优化技巧\\" aria-label=\\"Permalink to &quot;个人 SQL 优化技巧 &lt;Badge text=&quot;持续更新&quot; type=&quot;warning&quot; /&gt;&quot;\\">&ZeroWidthSpace;</a></h1>\\n\\n<ClientOnly><ArticleMetadata v-if=\\"($frontmatter?.aside ?? true) \\n        && ($frontmatter?.showArticleMetadata ?? true)\\" :article=\\"$frontmatter\\"\\n        :readTime=\\"1\\" :words=\\"283\\"  /></ClientOnly><!-- more -->\\n<h2 id=\\"查询优化\\" tabindex=\\"-1\\">查询优化 <a class=\\"header-anchor\\" href=\\"#查询优化\\" aria-label=\\"Permalink to &quot;查询优化&quot;\\">&ZeroWidthSpace;</a></h2>\\n<h3 id=\\"如果确定结果只有一条-使用-limit-1\\" tabindex=\\"-1\\">如果确定结果只有一条，使用 LIMIT 1 <Badge text=\\"建议\\" /> <a class=\\"header-anchor\\" href=\\"#如果确定结果只有一条-使用-limit-1\\" aria-label=\\"Permalink to &quot;如果确定结果只有一条，使用 LIMIT 1 &lt;Badge text=&quot;建议&quot; /&gt;&quot;\\">&ZeroWidthSpace;</a></h3>\\n<p>我们在根据一个或多个条件查询数据时，如果确定查询结果只有一条，可以在结尾处添加 LIMIT 1 进行限制。</p>\\n<p>这样既可以让 EXPLAIN 中的 type 达到 const 类型，又可以免去担忧在程序中出现接收是单个对象却返回了一个集合对象的异常问题。</p>\\n<div class=\\"vp-code-group vp-adaptive-theme\\"><div class=\\"tabs\\"><input type=\\"radio\\" name=\\"group-E2kNT\\" id=\\"tab-j2RA1Xs\\" checked><label for=\\"tab-j2RA1Xs\\">正例</label><input type=\\"radio\\" name=\\"group-E2kNT\\" id=\\"tab-3F9zTYg\\" ><label for=\\"tab-3F9zTYg\\">反例</label></div><div class=\\"blocks\\">\\n<div class=\\"language-sql vp-adaptive-theme active\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">sql</span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\"># email 不是主键，也没有设置唯一约束，根据熵增定律，查询结果是有可能会出现多条的</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#F78C6C\\">SELECT</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> *</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#F78C6C\\"> FROM</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> \`</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">sys_user</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\`</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#F78C6C\\"> WHERE</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> \`</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">email</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\`</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> '</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">charles7c@126.com</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#F78C6C\\"> LIMIT</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#F78C6C\\"> 1</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">;</span></span></code></pre>\\n</div><div class=\\"language-sql vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">sql</span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\"># user_id 是主键，主键是非空唯一的，那么不需要添加 </span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#F78C6C\\">LIMIT</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\"> 进行限制</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#F78C6C\\">SELECT</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> *</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#F78C6C\\"> FROM</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> \`</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">sys_user</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\`</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#F78C6C\\"> WHERE</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> \`</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">user_id</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\`</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#F78C6C\\"> 1</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">;</span></span></code></pre>\\n</div></div></div>\\n<h3 id=\\"避免隐式类型转换\\" tabindex=\\"-1\\">避免隐式类型转换 <Badge text=\\"强制\\" type=\\"danger\\" /> <a class=\\"header-anchor\\" href=\\"#避免隐式类型转换\\" aria-label=\\"Permalink to &quot;避免隐式类型转换 &lt;Badge text=&quot;强制&quot; type=&quot;danger&quot; /&gt;&quot;\\">&ZeroWidthSpace;</a></h3>\\n<p>我们在使用 MySQL 时，或多或少都感受过 MySQL 的隐式类型转换。例如：user_id 是整数类型，但是依然可以使用字符串类型数据来进行判断。MySQL 帮你做完这种隐式类型转换是有代价的，什么代价呢？ <strong>索引不再生效了而已</strong> 。</p>\\n<div class=\\"vp-code-group vp-adaptive-theme\\"><div class=\\"tabs\\"><input type=\\"radio\\" name=\\"group-iAB6h\\" id=\\"tab-NIki_mn\\" checked><label for=\\"tab-NIki_mn\\">正例</label><input type=\\"radio\\" name=\\"group-iAB6h\\" id=\\"tab-VybsUgk\\" ><label for=\\"tab-VybsUgk\\">反例</label></div><div class=\\"blocks\\">\\n<div class=\\"language-sql vp-adaptive-theme active\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">sql</span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#F78C6C\\">SELECT</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> *</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#F78C6C\\"> FROM</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> \`</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">sys_user</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\`</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#F78C6C\\"> WHERE</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> \`</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">user_id</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\`</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#F78C6C\\"> 10</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">;</span></span></code></pre>\\n</div><div class=\\"language-sql vp-adaptive-theme\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">sql</span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#F78C6C\\">SELECT</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> *</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#F78C6C\\"> FROM</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> \`</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">sys_user</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\`</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#F78C6C\\"> WHERE</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> \`</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">user_id</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\`</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> '</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">10</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">;</span></span></code></pre>\\n</div></div></div>\\n<h2 id=\\"数据库表设计\\" tabindex=\\"-1\\">数据库表设计 <a class=\\"header-anchor\\" href=\\"#数据库表设计\\" aria-label=\\"Permalink to &quot;数据库表设计&quot;\\">&ZeroWidthSpace;</a></h2>\\n<h3 id=\\"列名带上前缀\\" tabindex=\\"-1\\">列名带上前缀 <Badge text=\\"建议\\" /> <a class=\\"header-anchor\\" href=\\"#列名带上前缀\\" aria-label=\\"Permalink to &quot;列名带上前缀 &lt;Badge text=&quot;建议&quot; /&gt;&quot;\\">&ZeroWidthSpace;</a></h3>\\n<p>部分列名带上前缀或缩写，可以有效减少在连接查询、ORM 映射等场景下刻意起别名或思考区分不同的问题。</p>\\n<div class=\\"vp-code-group vp-adaptive-theme\\"><div class=\\"tabs\\"><input type=\\"radio\\" name=\\"group-pAGvH\\" id=\\"tab-bCO2Pll\\" checked><label for=\\"tab-bCO2Pll\\">正例</label></div><div class=\\"blocks\\">\\n<div class=\\"language-sql vp-adaptive-theme active\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">sql</span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#F78C6C\\">CREATE</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#F78C6C\\"> TABLE</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\"> \`</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\">sys_customer</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">\` (</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">  \`</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">customer_id</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\`</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\"> bigint</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">(</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#F78C6C\\">20</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">) UNSIGNED </span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#F78C6C\\">NOT NULL</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\"> AUTO_INCREMENT COMMENT </span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">客户ID</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">,</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">  \`</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">customer_name</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\`</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\"> varchar</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">(</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#F78C6C\\">255</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">) </span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#F78C6C\\">NOT NULL</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\"> COMMENT </span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">客户名称</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">,</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">  PRIMARY KEY</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\"> (</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\`</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">customer_id</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\`</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">) </span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#F78C6C\\">USING</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\"> BTREE,</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">) COMMENT </span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\">=</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> '</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">客户表</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">;</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#F78C6C\\">CREATE</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#F78C6C\\"> TABLE</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\"> \`</span><span style=\\"--shiki-light:#61AFEF;--shiki-dark:#82AAFF\\">sys_contact_user</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">\` (</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">  \`</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">contact_user_id</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\`</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\"> bigint</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">(</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#F78C6C\\">20</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">) UNSIGNED </span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#F78C6C\\">NOT NULL</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\"> AUTO_INCREMENT COMMENT </span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">联系人ID</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">,</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">  \`</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">contact_user_name</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\`</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\"> varchar</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">(</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#F78C6C\\">255</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">) </span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#F78C6C\\">NOT NULL</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\"> COMMENT </span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">联系人名称</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">,</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">  \`</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">customer_id</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\`</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\"> bigint</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">(</span><span style=\\"--shiki-light:#D19A66;--shiki-dark:#F78C6C\\">20</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">) UNSIGNED </span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#F78C6C\\">NOT NULL</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\"> COMMENT </span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">客户ID</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">,</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#C792EA\\">  PRIMARY KEY</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\"> (</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\`</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">contact_user_id</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\`</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">) </span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#F78C6C\\">USING</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\"> BTREE,</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">) COMMENT </span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\">=</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> '</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">联系人表</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">'</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">;</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\"># 连接查询，你完全不需要用脑去考虑到底是 c.</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\`</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">id</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\`</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\"> 还是 cu.</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\`</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">customer_id</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\`</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\"> 的问题，都是 </span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\`</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">customer_id</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\`</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#F78C6C\\">SELECT</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#89DDFF\\"> *</span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#F78C6C\\"> FROM</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> \`</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">sys_customer</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\`</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\"> c </span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#F78C6C\\">LEFT JOIN</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\"> \`</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">sys_contact_user</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\`</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\"> cu </span><span style=\\"--shiki-light:#C678DD;--shiki-dark:#F78C6C\\">ON</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\"> c.</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\`</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">customer_id</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\`</span><span style=\\"--shiki-light:#56B6C2;--shiki-dark:#89DDFF\\"> =</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\"> cu.</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\`</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#C3E88D\\">customer_id</span><span style=\\"--shiki-light:#98C379;--shiki-dark:#89DDFF\\">\`</span></span></code></pre>\\n</div></div></div>\\n<h3 id=\\"非负数列添加unsigned无符号约束\\" tabindex=\\"-1\\">非负数列添加UNSIGNED无符号约束 <Badge text=\\"建议\\" /> <a class=\\"header-anchor\\" href=\\"#非负数列添加unsigned无符号约束\\" aria-label=\\"Permalink to &quot;非负数列添加UNSIGNED无符号约束 &lt;Badge text=&quot;建议&quot; /&gt;&quot;\\">&ZeroWidthSpace;</a></h3>\\n<p>在大部分的数据存储场景中，我们只会使用正整数，如果能确定该列为非负数，建议添加 <code>UNSIGNED</code> 无符号约束。</p>\\n<div class=\\"vp-code-group vp-adaptive-theme\\"><div class=\\"tabs\\"><input type=\\"radio\\" name=\\"group-afA8w\\" id=\\"tab-vujwV9N\\" checked><label for=\\"tab-vujwV9N\\">正例</label></div><div class=\\"blocks\\">\\n<div class=\\"language-sql vp-adaptive-theme active\\"><button title=\\"Copy Code\\" class=\\"copy\\"></button><span class=\\"lang\\">sql</span><pre class=\\"shiki shiki-themes one-dark-pro material-theme-palenight vp-code\\" tabindex=\\"0\\" v-pre=\\"\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\"># 不添加 UNSIGNED 约束，取值范围</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#F78C6C\\">TINYINT</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">：</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">[-128, 127]</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\"># 添加 UNSIGNED 约束，取值范围</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#C678DD;--shiki-dark:#F78C6C\\">TINYINT</span><span style=\\"--shiki-light:#ABB2BF;--shiki-dark:#BABED8\\">：</span><span style=\\"--shiki-light:#E06C75;--shiki-dark:#BABED8\\">[0, 255]</span></span></code></pre>\\n</div></div></div>\\n<h3 id=\\"合理采用整数类型\\" tabindex=\\"-1\\">合理采用整数类型 <Badge text=\\"建议\\" /> <a class=\\"header-anchor\\" href=\\"#合理采用整数类型\\" aria-label=\\"Permalink to &quot;合理采用整数类型 &lt;Badge text=&quot;建议&quot; /&gt;&quot;\\">&ZeroWidthSpace;</a></h3>\\n<p>例如：状态类的信息，状态再多能有多少个，采用 <code>TINYINT</code> 即可，减少存储空间占用。</p>\\n<p>下方表数据整理于：<a href=\\"https://dev.mysql.com/doc/refman/5.7/en/integer-types.html\\" target=\\"_blank\\" rel=\\"noreferrer\\">MySQL 5.7官方文档/数据类型/数值数据类型/整数类型</a></p>\\n<p>| 类型      | 存储（字节） | 取值范围                  | 取值范围（无符号） |\\n| :</p>\\n","date":{"time":1577527200,"string":"2019-12-28 10:00"},"tags":["SQL","SQL优化"],"categories":["杂碎逆袭史"],"description":"","cover":""}]`);export{s as d};
