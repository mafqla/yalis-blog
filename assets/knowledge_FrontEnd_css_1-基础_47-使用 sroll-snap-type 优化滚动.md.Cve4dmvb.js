import{_ as l,o as n,c as e,U as i,k as s,a}from"./chunks/framework.5FtAyiyV.js";const t="/assets/69897003-b3b5d000-1380-11ea-973e-1cd4efac0430.uvmcebEn.gif",p="/assets/70125593-0f01fe00-16b2-11ea-9262-433595e0581d.Prqyb-I2.png",h="/assets/70130027-c13dc380-16ba-11ea-878b-b90426fdbf81.7SweeLWM.gif",r="/assets/69909886-f806a600-143c-11ea-9935-2d77718ac9d4.xy_rauLY.gif",o="/assets/69909891-fd63f080-143c-11ea-8d1b-b7fd9c1e4384.9TbCJVEp.gif",d="/assets/69909951-102af500-143e-11ea-9cd9-005bb02f93cb.s0XjJobK.gif",k="/assets/70129667-27761680-16ba-11ea-96a6-964dca68d9da.dUtcIxsN.png",V=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"knowledge/FrontEnd/css/1-基础/47-使用 sroll-snap-type 优化滚动.md","filePath":"knowledge/FrontEnd/css/1-基础/47-使用 sroll-snap-type 优化滚动.md","lastUpdated":1705386503000}'),c={name:"knowledge/FrontEnd/css/1-基础/47-使用 sroll-snap-type 优化滚动.md"},B=i(`<h2 id="sroll-snap-type" tabindex="-1">sroll-snap-type <a class="header-anchor" href="#sroll-snap-type" aria-label="Permalink to &quot;sroll-snap-type&quot;">​</a></h2><p>首先看看 <code>sroll-snap-type</code> 可能算得上是新的滚动规范里面最核心的一个属性样式。</p><p><strong><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/scroll-snap-type" target="_blank" rel="noreferrer">scroll-snap-type</a></strong>：属性定义在滚动容器中的一个临时点（snap point）如何被严格的执行。</p><p>光看定义有点难理解，简单而言，这个属性规定了一个容器是否对内部滚动动作进行捕捉，并且规定了如何去处理滚动结束状态。</p><h3 id="语法" tabindex="-1">语法 <a class="header-anchor" href="#语法" aria-label="Permalink to &quot;语法&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span>{</span></span>
<span class="line"><span>    scroll-snap-type: none | [ x | y | block | inline | both ] [ mandatory | proximity ]?</span></span>
<span class="line"><span>}</span></span></code></pre></div><p>举个例子，假设，我们希望一个横向可滚动容器，每次滚动之后，子元素最终的停留位置不是尴尬的被分割，而是完整的呈现在容器内，可以这样写：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">ul</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">  &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">li</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">1</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">li</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">  &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">li</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">2</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">li</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">  &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">li</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">3</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">li</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">ul</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span></code></pre></div><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#FFCB6B;">ul</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  scroll-snap-type</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;"> x</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;"> mandatory</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#FFCB6B;">li</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  scroll-snap-align</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;"> center</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span></code></pre></div><p>上面 <code>scroll-snap-type: x mandatory</code> 中，<code>x</code> 表示捕捉 x 轴方向上的滚动，<code>mandatory</code> 表示强制将滚动结束后元素的停留位置设置到我们规定的地方。</p><p>左边是正常滚动容器的写法，右边是添加了 <code>scroll-snap-</code> 之后：</p><p><img src="`+t+`" alt="scrollsnaptypeh" loading="lazy"></p><p>如果是 y 轴方向的滚动也是一样的，只需要简单改一下 scroll-snap-type：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#FFCB6B;">ul</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  scroll-snap-type</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;"> y</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;"> mandatory</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span></code></pre></div>`,14),g=s("iframe",{height:"300",style:{width:"100%"},scrolling:"no",title:"CSS Scroll Snap Demo",src:"https://codepen.io/mafqla/embed/rNRjOag?default-tab=html%2Cresult&editable=true&theme-id=light",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"},`
  See the Pen <a href="https://codepen.io/mafqla/pen/rNRjOag">
  CSS Scroll Snap Demo</a> by mafqla (<a href="https://codepen.io/mafqla">@mafqla</a>)
  on <a href="https://codepen.io">CodePen</a>.
`,-1),F=i('<h3 id="scroll-snap-type-中的-mandatory-与-proximity" tabindex="-1">scroll-snap-type 中的 mandatory 与 proximity <a class="header-anchor" href="#scroll-snap-type-中的-mandatory-与-proximity" aria-label="Permalink to &quot;scroll-snap-type 中的 mandatory 与 proximity&quot;">​</a></h3><p><code>scroll-snap-type</code> 中的另外一个重点就是 mandatory 与 proximity。</p><ul><li>mandatory: 通常在 CSS 代码中我们都会使用这个，mandatory 的英文意思是<strong>强制性的</strong>，表示滚动结束后，滚动停止点一定会强制停在我们指定的地方</li><li>proximity: 英文意思是<strong>接近、临近、大约</strong>，在这个属性中的意思是滚动结束后，滚动停止点可能就是滚动停止的地方，也可能会再进行额外移动，停在我们指定的地方</li></ul><p>也就是说，如上指定了 <code>scroll-snap-type: y proximity</code> 的滚动容器，如果不额外设置 <code>scroll-snap-margin</code>/<code>scroll-snap-padding</code>，是有可能停在下面这样<s>尴尬</s>的位置：</p><p><img src="'+p+'" alt="image" loading="lazy"></p><h3 id="scroll-snap-type-both-mandatory" tabindex="-1">scroll-snap-type: both mandatory <a class="header-anchor" href="#scroll-snap-type-both-mandatory" aria-label="Permalink to &quot;scroll-snap-type: both mandatory&quot;">​</a></h3><p>当然，还有一种比较特殊的情况是，<code>scroll-snap-type: both mandatory</code>，表示横向与竖向的</p>',7),y=s("iframe",{height:"300",style:{width:"100%"},scrolling:"no",title:"CSS Scroll Snap Both mandatory Demo",src:"https://codepen.io/mafqla/embed/xxBgwGb?default-tab=html%2Cresult&editable=true&theme-id=light",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"},`
  See the Pen <a href="https://codepen.io/mafqla/pen/xxBgwGb">
  CSS Scroll Snap Both mandatory Demo</a> by mafqla (<a href="https://codepen.io/mafqla">@mafqla</a>)
  on <a href="https://codepen.io">CodePen</a>.
`,-1),D=i(`<h2 id="scroll-snap-align" tabindex="-1">scroll-snap-align <a class="header-anchor" href="#scroll-snap-align" aria-label="Permalink to &quot;scroll-snap-align&quot;">​</a></h2><p>使用 <code>scroll-snap-align</code> 可以简单的控制将要聚焦的当前滚动子元素在滚动方向上相对于父容器的对齐方式。</p><p>其需要作用在父元素上，可选值有三个：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  scroll-snap-align</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;"> start</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;"> | </span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;">center</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;"> | </span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;">end</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span></code></pre></div><p>什么意思呢，看看示意图：</p><p><img src="`+h+'" alt="ezgif com-video-to-gif" loading="lazy"></p><p>可以类比单个元素在 flexbox 里面的 <code>justify-content</code> 属性的 flex-start | flex-end | center，规定当前元素在主轴上相对父容器的对齐方式去理解。</p><p>再看看实际的 Demo ，将 <code>scroll-snap-align</code> 添加到滚动子容器上：</p><h3 id="scroll-snap-align-start" tabindex="-1">scroll-snap-align: start <a class="header-anchor" href="#scroll-snap-align-start" aria-label="Permalink to &quot;scroll-snap-align: start&quot;">​</a></h3><p>使当前聚焦的滚动子元素在滚动方向上相对于父容器<strong>顶部</strong>对齐。</p><p><img src="'+r+'" alt="scrollsnapalignstart" loading="lazy"></p><h3 id="scroll-snap-align-center" tabindex="-1">scroll-snap-align: center <a class="header-anchor" href="#scroll-snap-align-center" aria-label="Permalink to &quot;scroll-snap-align: center&quot;">​</a></h3><p>使当前聚焦的滚动子元素在滚动方向上相对于父容器<strong>中心</strong>对齐。</p><p><img src="'+o+'" alt="scrollsnapaligncenter" loading="lazy"></p><h3 id="scroll-snap-align-end" tabindex="-1">scroll-snap-align: end <a class="header-anchor" href="#scroll-snap-align-end" aria-label="Permalink to &quot;scroll-snap-align: end&quot;">​</a></h3>',15),m=s("iframe",{height:"300",style:{width:"100%"},scrolling:"no",title:"CSS Scroll Snap Demo",src:"https://codepen.io/mafqla/embed/dyrNYoX?default-tab=html%2Cresult&editable=true&theme-id=light",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"},`
  See the Pen <a href="https://codepen.io/mafqla/pen/dyrNYoX">
  CSS Scroll Snap Demo</a> by mafqla (<a href="https://codepen.io/mafqla">@mafqla</a>)
  on <a href="https://codepen.io">CodePen</a>.
`,-1),A=s("h3",{id:"不规则子元素滚动",tabindex:"-1"},[a("不规则子元素滚动 "),s("a",{class:"header-anchor",href:"#不规则子元素滚动","aria-label":'Permalink to "不规则子元素滚动"'},"​")],-1),_=s("p",null,[a("如果子元素大小不一，也能有非常好的表现，使用 "),s("code",null,"scroll-snap-align: center"),a("，使得不规则子元素在每次滚动后居于容器中间：")],-1),f=s("iframe",{height:"300",style:{width:"100%"},scrolling:"no",title:"CSS Scroll Snap  不规则子元素滚动 Demo",src:"https://codepen.io/mafqla/embed/GRerpJE?default-tab=html%2Cresult&editable=true&theme-id=light",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"},`
  See the Pen <a href="https://codepen.io/mafqla/pen/GRerpJE">
  CSS Scroll Snap  不规则子元素滚动 Demo</a> by mafqla (<a href="https://codepen.io/mafqla">@mafqla</a>)
  on <a href="https://codepen.io">CodePen</a>.
`,-1),u=i(`<h2 id="scroll-margin-scroll-padding" tabindex="-1">scroll-margin / scroll-padding <a class="header-anchor" href="#scroll-margin-scroll-padding" aria-label="Permalink to &quot;scroll-margin / scroll-padding&quot;">​</a></h2><p>上述的 <code>scroll-snap-align</code> 很好用，可以控制滚动子元素与父容器的对齐方式。然而可选的值只有三个，有的时候我们希望进行一些更精细的控制时，可以使用 <code>scroll-margin</code> 或者 <code>scroll-padding</code></p><p>其中：</p><ul><li>scroll-padding 是作用于滚动父容器，类似于盒子的 padding</li><li>scroll-margin 是作用于滚动子元素，每个子元素的 scroll-margin 可以设置为不一样的值，类似于盒子的 margin</li></ul><p>举个例子，在竖向滚动下，给滚动父容器添加一个 <code>scroll-padding-top: 30px</code> 等同于给每个子元素添加 \`\`scroll-margin-top: 30px\`：</p><p>我们希望滚动子元素在 <code>scroll-snap-align: start</code> 的基础上，与容器顶部的距离为 30px：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">ul</span><span style="--shiki-light:#D19A66;--shiki-dark:#C792EA;"> class</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">snap</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">  &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">li</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">1</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">li</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">  &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">li</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">2</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">li</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">  &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">li</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">3</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">li</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">  ...</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">ul</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span></code></pre></div><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span style="--shiki-light:#D19A66;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#D19A66;--shiki-dark:#FFCB6B;">snap</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  overflow-x</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;"> auto</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  scroll-snap-type</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;"> y</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;"> mandatory</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  scroll-padding-top</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 30</span><span style="--shiki-light:#E06C75;--shiki-dark:#F78C6C;">px</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#FFCB6B;">li</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  scroll-snap-align</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;"> start</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span></code></pre></div><p><img src="`+d+'" alt="scrollsnappadding" loading="lazy"></p><p>总结一下就是，<strong>scroll-snap-align</strong> 可以对滚动之后的对齐方式进行简单控制，而配合 <code>scroll-margin</code> / <code>scroll-padding</code> 则可以进行精确控制。</p><h2 id="废弃的-scroll-snap-points-x-scroll-snap-points-y" tabindex="-1">废弃的 scroll-snap-points-x / scroll-snap-points-y <a class="header-anchor" href="#废弃的-scroll-snap-points-x-scroll-snap-points-y" aria-label="Permalink to &quot;废弃的 scroll-snap-points-x / scroll-snap-points-y&quot;">​</a></h2><p>标准的发展过程，早年间的规范如今废除，这个了解一下即可，新标准现在是这几个，并且大部分浏览器已经兼容：</p><ul><li>scroll-snap-type</li><li>scroll-snap-align</li><li>scroll-margin / scroll-padding</li><li><s>scroll-snap-stop</s></li></ul><p><img src="'+k+'" alt="image" loading="lazy"></p><blockquote><p><a href="https://www.w3.org/TR/css-scroll-snap-1/#scroll-snap-stop" target="_blank" rel="noreferrer">scroll-snap-stop</a> 是一个仍处于实验室的标准，本文没有过多介绍，我自己在几个不同浏览器尝试了下，暂时没有发现浏览器支持这个属性，但是最新的标准里面是有关于它的明确的定义的。</p></blockquote><h2 id="实际应用-渐进增强" tabindex="-1">实际应用，渐进增强 <a class="header-anchor" href="#实际应用-渐进增强" aria-label="Permalink to &quot;实际应用，渐进增强&quot;">​</a></h2><p>在实际应用中，应用在全屏滚动/广告 banner 上有很多用武之地：</p>',17),C=s("iframe",{height:"300",style:{width:"100%"},scrolling:"no",title:"CSS Scroll Snap Points Full Height",src:"https://codepen.io/mafqla/embed/NWJdGqM?default-tab=html%2Cresult&editable=true&theme-id=light",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"},`
  See the Pen <a href="https://codepen.io/mafqla/pen/NWJdGqM">
  CSS Scroll Snap Points Full Height</a> by mafqla (<a href="https://codepen.io/mafqla">@mafqla</a>)
  on <a href="https://codepen.io">CodePen</a>.
`,-1),b=s("p",null,"当然，兼容性现在还是很大的问题：",-1),S=s("p",null,[a("不过在很多场景下，就算 "),s("code",null,"scroll-snap-"),a(" 相关几个属性暂不兼容，也不会对正常使用造成影响，所以在很多场景，这些属性都可以直接应用上去，对支持的浏览器提供更好的交互。")],-1),E=[B,g,F,y,D,m,A,_,f,u,C,b,S];function q(x,v,P,T,w,N){return n(),e("div",null,E)}const I=l(c,[["render",q]]);export{V as __pageData,I as default};
