import{_ as A,c as a,o as n,V as s,m as i}from"./chunks/framework.bW6FiXxS.js";const t="data:application/octet-stream;base64,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",l="data:application/octet-stream;base64,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",e="data:application/octet-stream;base64,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",p="/assets/da529eac1b4b415a9196c795673ca447~tplv-k3u1fbpfcp-jj-mark.264tIwpr.awebp",h="/assets/3440ba8198aa46ef8cc6eb95eb72c178~tplv-k3u1fbpfcp-jj-mar.GYC-8DEA.awebp",k="/assets/873df6c328b54bd7b4fb3b4aebeebbf2~tplv-k3u1fbpfcp-jj-ma.aFBYdiAy.awebp",B="/assets/b64eb3cccc1042f9bda44766df3b3bdf~tplv-k3u1fbpfcp-jj-ma.EZR6wnlv.awebp",r="/assets/892fa48b89e644bf97826492e80f1a07~tplv-k3u1fbpfcp-jj-mar.G4g5f_2i.awebp",d="/assets/c8f044b371c046578f863d87dd3204e0~tplv-k3u1fbpfcp-jj-m.PPFozb3o.awebp",I=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"knowledge/FrontEnd/css/1-icss/135-Flex 布局下居中溢出滚动截断问题.md","filePath":"knowledge/FrontEnd/css/1-icss/135-Flex 布局下居中溢出滚动截断问题.md","lastUpdated":1715734628000}'),F={name:"knowledge/FrontEnd/css/1-icss/135-Flex 布局下居中溢出滚动截断问题.md"},o=s(`<p>在页面布局中，我们经常会遇到/使用这么一类常见的布局，也就是列表内容水平居中于容器中，像是这样：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">ul</span><span style="--shiki-light:#D19A66;--shiki-dark:#C792EA;"> class</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">g-contaner</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">  &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">li</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">li</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">  &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">li</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">li</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">ul</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span></code></pre></div><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#FFCB6B;">ul</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  width</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 500</span><span style="--shiki-light:#E06C75;--shiki-dark:#F78C6C;">px</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  display</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;"> flex</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  flex-direction</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;"> row</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  flex-wrap</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;"> nowrap</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  justify-content</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;"> center</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  align-items</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;"> center</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">  gap</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 10</span><span style="--shiki-light:#E06C75;--shiki-dark:#F78C6C;">px</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span></code></pre></div><p>效果如下：</p><p><img src="`+t+'" alt="img" loading="lazy"></p><p>这里，外层的容器是定宽的，内层的 flex-item 也是定宽的。</p><p>当 flex-item 个数较小时，是没有问题的。但是，如果当元素内容过多，并且设置了 <code>flex-wrap: nowrap</code> 的话，内容就会溢出容器：</p><p><img src="'+l+`" alt="img" loading="lazy"></p><p>此时，我们有几种解法，其中一种便是给父容器设置 <code>overflow: auto</code> 或者 <code>overflow: hidden</code>，让父容器可以滚动，像是这样：</p><div class="language-CSS vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">CSS</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#FFCB6B;">ul</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">    // ...</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">    overflow</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;"> auto</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span></code></pre></div><p>效果就变成了这样：</p><p><img src="`+e+'" alt="img" loading="lazy"></p><p>我们尝试滚动一下这个容器，会发现一个致命问题：<strong>容器只能向左滚动，无法向右滚动，因此只能看到后半部分被截断的内容，而无法看到前半部分被截断的内容</strong>：</p><p><img src="'+p+'" alt="img" loading="lazy"></p><p>什么意思呢？结合上面的 Gif 与下面这张示意图，一看就懂：</p><p><img src="'+h+'" alt="img" loading="lazy"></p><p>针对这个问题。其中一类比好好的解法在于，当 <strong>flex-item 不足以溢出时候，flex-item 居中展示，而当 flex-item 的数量溢出父容器宽度时候，布局上采用类似于</strong> <strong><code>justify-content: flex-start</code></strong> <strong>的样式进行排布，这样可以保证内容在滚动的过程中能够全部看到</strong>。</p><p>正常效果应该如下：</p><p><img src="'+k+'" alt="img" loading="lazy"></p><p>上面第一、第二行就是 <strong>flex-item 不足以溢出时候，flex-item 居中展示，</strong> 而第三行 <strong>，就是当 flex-item 的数量溢出父容器宽度时候，布局上采用类似于</strong> <strong><code>justify-content: flex-start</code></strong> <strong>的样式进行排布，这样可以保证内容在滚动的过程中能够全部看到。</strong></p><p>因此，本文我们将一起探讨一下，在面对这个问题时的几种不同方式的解法。</p><h2 id="方法一-flex-布局下关键字-safe、unsafe" tabindex="-1">方法一：Flex 布局下关键字 safe、unsafe <a class="header-anchor" href="#方法一-flex-布局下关键字-safe、unsafe" aria-label="Permalink to &quot;方法一：Flex 布局下关键字 safe、unsafe&quot;">​</a></h2><p>其实，规范也已经注意到了布局下的这个居中滚动问题。</p><p>基于 <a href="https://link.juejin.cn?target=https%3A%2F%2Fwww.w3.org%2FTR%2Fcss-align-3%2F%23overflow-values" target="_blank" rel="noreferrer">CSS Box Alignment Module Level 3</a>，明确列出了这种<strong>安全（safe）</strong> 与<strong>不安全(unsafe)</strong> 的布局说明：</p><p><img src="'+B+`" alt="img" loading="lazy"></p><p>而今天，我们可以直接在对齐模式中，通过 <code>safe</code> 关键字解决这个问题。</p><p>我们简单改造一下上述我们的 flex 布局代码，将 <code>justify-content: center</code> 改为 <code>justify-content: safe center</code> 即可：</p><div class="language-CSS vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">CSS</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#FFCB6B;">ul</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">    width</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 500</span><span style="--shiki-light:#E06C75;--shiki-dark:#F78C6C;">px</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">    display</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;"> flex</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">    flex-direction</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;"> row</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">    flex-wrap</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;"> nowrap</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;"> -  </span><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">justify-content</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;"> center</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;"> +  </span><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">justify-content</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;"> safe </span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;">center</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">    align-items</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;"> center</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">    gap</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 10</span><span style="--shiki-light:#E06C75;--shiki-dark:#F78C6C;">px</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span></code></pre></div><p>此时，flex 布局就能自动识别当前 flex 容器下的 flex-item 数量是否超出容器宽度/高度，从而<strong>改变对齐方式</strong>。</p>`,29),g=i("iframe",{height:"300",style:{width:"100%"},scrolling:"no",title:"使用 Safe 关键字解决 Flex 居中溢出问题",src:"https://codepen.io/mafqla/embed/rNgNNKP?default-tab=html%2Cresult&editable=true&theme-id=light",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"},`
  See the Pen <a href="https://codepen.io/mafqla/pen/rNgNNKP">
  使用 Safe 关键字解决 Flex 居中溢出问题</a> by mafqla (<a href="https://codepen.io/mafqla">@mafqla</a>)
  on <a href="https://codepen.io">CodePen</a>.
`,-1),c=s(`<p>目前而言，这个方法唯一的问题<strong>在于</strong> <strong>兼容性</strong>，<code>safe</code> 关键字的大范围使用，还需要静待一段时间。</p><h2 id="方法二-使用-margin-auto-替代-justify-content-center" tabindex="-1">方法二：使用 margin: auto 替代 justify-content: center <a class="header-anchor" href="#方法二-使用-margin-auto-替代-justify-content-center" aria-label="Permalink to &quot;方法二：使用 margin: auto 替代 justify-content: center&quot;">​</a></h2><p>除去 <code>justify-content: center</code> 之外，其实我们还可以利用 <code>margin: auto</code> 实现子 flex-item 的水平居中。</p><p>我们改造一下文章一开始的示意 DEMO：</p><div class="language-CSS vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">CSS</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#FFCB6B;">ul</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">    width</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 500</span><span style="--shiki-light:#E06C75;--shiki-dark:#F78C6C;">px</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">    display</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;"> flex</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">    flex-direction</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;"> row</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">    flex-wrap</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;"> nowrap</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">    gap</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 10</span><span style="--shiki-light:#E06C75;--shiki-dark:#F78C6C;">px</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#FFCB6B;">li</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">    margin</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;"> auto</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span></code></pre></div><p>当，flex-item 数量不足以溢出容器宽度时，效果如下：</p><p><img src="`+r+'" alt="img" loading="lazy"></p><p>此时，flex-item 在 <code>margin: auto</code> 的作用下，会均分整个容器的剩余空间，并且是水平和垂直方向上的。</p><blockquote><p>用规范的话说就是，设置了 <code>margin: auto</code> 的元素，在通过 <code>justify-content</code> 和 <code>align-self</code> 进行对齐之前，任何正处于空闲的空间都会分配到该方向的自动 margin 中去。</p></blockquote><p>所以，<code>margin: auto</code> 也是一种居中非常重要的技巧，虽然我们常将这个技巧用于 flex 布局下的垂直居中。可以翻看一下上面提供的两篇文章。</p><p>有趣的是，当 <strong>flex-item 的数量溢出父容器宽度时候，由于没有剩余空间了，此时</strong> <strong><code>margin: auto</code></strong> <strong>其实相当于失效了，因此布局上的效果同样也是采用类似于</strong> <strong><code>justify-content: flex-start</code></strong> <strong>的效果进行排布。</strong></p><p>同样能达到我们的目的：</p>',12),D=i("iframe",{height:"300",style:{width:"100%"},scrolling:"no",title:"使用 margin:auto 解决 Flex 居中溢出问题",src:"https://codepen.io/mafqla/embed/OJYJJEg?default-tab=html%2Cresult&editable=true&theme-id=light",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"},`
  See the Pen <a href="https://codepen.io/mafqla/pen/OJYJJEg">
  使用 margin:auto 解决 Flex 居中溢出问题</a> by mafqla (<a href="https://codepen.io/mafqla">@mafqla</a>)
  on <a href="https://codepen.io">CodePen</a>.
`,-1),y=s('<h2 id="方法三-额外嵌套一层" tabindex="-1">方法三：额外嵌套一层 <a class="header-anchor" href="#方法三-额外嵌套一层" aria-label="Permalink to &quot;方法三：额外嵌套一层&quot;">​</a></h2><p>上面的 <code>margin:auto</code> 虽然没有兼容性问题，但是有一点点瑕疵。我们仔细对比 <code>margin: auto</code> 与 <code>justify-content: center</code> 在 flex-item 不足以溢出下的表现：</p><p><img src="'+d+`" alt="img" loading="lazy"></p><p>瑕疵在于，<strong>使用</strong> <strong><code>margin: auto</code></strong> <strong>的方式，flex-item 之间的间距是不可控。因为它们始终会去平分剩余空余空间。</strong></p><blockquote><p>基于 <code>margin: auto</code> 不可控的方式，其实通过只给子 item 的首个元素添加 <code>margin-left: auto</code>，给尾元素添加 <code>margin-right: auto</code>，其实是可以解决间距问题的。</p></blockquote><p>所以，兼容性最好的方式，就是我们多叠加一层，同样可以巧妙的解决这个问题。</p><p>原结构：</p><div class="language-HTML vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">HTML</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">ul</span><span style="--shiki-light:#D19A66;--shiki-dark:#C792EA;"> class</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">g-contaner</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">    &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">li</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">li</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">    // ...</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">    &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">li</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">li</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">ul</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span></code></pre></div><p>改造后的结构：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">ul</span><span style="--shiki-light:#D19A66;--shiki-dark:#C792EA;"> class</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">g-contaner</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">  &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">ul</span><span style="--shiki-light:#D19A66;--shiki-dark:#C792EA;"> class</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#98C379;--shiki-dark:#C3E88D;">g-wrap</span><span style="--shiki-light:#98C379;--shiki-dark:#89DDFF;">&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">    &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">li</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">li</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#BABED8;">    // ...</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">    &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">li</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">li</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">  &lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">ul</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#F07178;">ul</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">&gt;</span></span></code></pre></div><p>改造后的 CSS：</p><div class="language-CSS vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">CSS</span><pre class="shiki shiki-themes one-dark-pro material-theme-palenight vp-code"><code><span class="line"><span style="--shiki-light:#D19A66;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#D19A66;--shiki-dark:#FFCB6B;">g-contaner</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">    width</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 500</span><span style="--shiki-light:#E06C75;--shiki-dark:#F78C6C;">px</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">    height</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 200</span><span style="--shiki-light:#E06C75;--shiki-dark:#F78C6C;">px</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">    display</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;"> flex</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">    flex-wrap</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;"> nowrap</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">    flex-direction</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;"> row</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">    justify-content</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;"> center</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">    align-items</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;"> center</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">    overflow</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;"> auto</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D19A66;--shiki-dark:#89DDFF;">.</span><span style="--shiki-light:#D19A66;--shiki-dark:#FFCB6B;">g-wrap</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">    display</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#BABED8;"> flex</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">    gap</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 10</span><span style="--shiki-light:#E06C75;--shiki-dark:#F78C6C;">px</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#B2CCD6;">    max-width</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">:</span><span style="--shiki-light:#D19A66;--shiki-dark:#F78C6C;"> 100</span><span style="--shiki-light:#E06C75;--shiki-dark:#F78C6C;">%</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#89DDFF;">}</span></span></code></pre></div><p>我们通过多设置了一层 <code>g-wrap</code>，并且设置了 <code>max-width: 100%</code>，当然，它也是一个 flex 容器。</p><p>因此当：</p><ol><li><code>.g-wrap</code> 内 flex item 宽度不足 100% 时，整个 <code>.g-wrap</code> 受到其父容器的 <code>justify-content: center</code> 限制会表示为水平居中；</li><li>当 <code>.g-wrap</code> 内 flex item 宽度超出 100% 时，由于设置了 <code>max-width: 100%</code>，所以，整个容器最大宽度就是 <code>.g-container</code> 的宽度。此时的子 flex item 的表现就是默认的 <code>justify-content: flex-start</code>，因此内容也是从头开始展示，滚动场景下没有问题</li></ol><p>至此，我们借助多嵌套一层，同样完美的解决了整个问题。其效果与方法一类似，就不再额外贴 Gif 图。</p>`,16),C=i("iframe",{height:"300",style:{width:"100%"},scrolling:"no",title:"使用额外嵌套层解决 Flex 居中溢出问题",src:"https://codepen.io/mafqla/embed/JjqjjZP?default-tab=html%2Cresult&editable=true&theme-id=light",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"},`
  See the Pen <a href="https://codepen.io/mafqla/pen/JjqjjZP">
  使用额外嵌套层解决 Flex 居中溢出问题</a> by mafqla (<a href="https://codepen.io/mafqla">@mafqla</a>)
  on <a href="https://codepen.io">CodePen</a>.
`,-1),f=s('<h2 id="总结一下" tabindex="-1">总结一下 <a class="header-anchor" href="#总结一下" aria-label="Permalink to &quot;总结一下&quot;">​</a></h2><p>好，我们快速总结一下三种方式的优劣对比：</p><ol><li>方法一：Flex 布局下关键字 safe、unsafe，修改代码量最少，效果完美，核心问题在于兼容性目前不佳；</li><li>方法二：使用 margin: auto 替代 justify-content: center，兼容性好，问题在于 flex item 不足父容器 100% 时，元素之间间距无法控制；</li><li>方法三：额外嵌套一层，效果完美，改造量略多一点点。</li></ol><p>三种方式各有优劣，基于实际面临的业务场景再做选择。</p><p>同时，本文举例采用了水平方向的例子，实际在业务中，我们同样可能会遇到垂直方向一样的问题，本文中的解法都是通用的。并且，基于 safe 的解法中，除了 <code>justify-content: safe center</code> 外，<code>safe</code> 关键字还可以应用于 <code>align-items</code> 和 <code>align-self</code>，实际使用时，结合规范，选取最适合的写法。</p>',5),m=[o,g,c,D,y,C,f];function u(w,E,b,x,v,j){return n(),a("div",null,m)}const S=A(F,[["render",u]]);export{I as __pageData,S as default};
